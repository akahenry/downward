INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
881 relevant atoms
737 auxiliary atoms
1618 final queue length
2059 total queue pushes
Completing instantiation... [0.000s CPU, 0.007s wall-clock]
Instantiating: [0.010s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.006s wall-clock]
11 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
0 of 1 mutex groups necessary.
484 of 484 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 484
Translator axioms: 0
Translator task size: 1574
Translator peak memory: 33388 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.033s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00142886s, 45596 KB] done reading input!
[t=0.00142886s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00142886s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00142886s, 45992 KB] Found 44 SGA patterns.
[t=0.00142886s, 45992 KB] Found 374 interesting patterns.
[t=0.00142886s, 45992 KB] systematic pattern collection generator number of patterns: 374
[t=0.00142886s, 45992 KB] systematic pattern collection generator total PDB size: 54758
[t=0.00142886s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0.00142886s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0435719s, 46244 KB] Done computing PDBs for pattern collection: 0.042143s
[t=0.0475307s, 48600 KB] Tie breaking: 2
[t=0.0475307s, 48600 KB] Building successor generator...done!
[t=0.0475307s, 48600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0475307s, 48600 KB] time for successor generation creation: 0s
[t=0.0475307s, 48600 KB] Variables: 23
[t=0.0475307s, 48600 KB] FactPairs: 66
[t=0.0475307s, 48600 KB] Bytes per state: 4
[t=0.0475307s, 48600 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0475307s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.0475307s, 48600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0475307s, 48600 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.0475307s, 48600 KB] pruning method: none
[t=0.0952922s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=0.0952922s, 48600 KB] g=2, 23 evaluated, 5 expanded
[t=0.139268s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.139268s, 48600 KB] g=4, 45 evaluated, 11 expanded
[t=0.179191s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.179191s, 48600 KB] g=6, 67 evaluated, 13 expanded
[t=0.219155s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.219155s, 48600 KB] g=8, 89 evaluated, 22 expanded
[t=0.223161s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.223161s, 48600 KB] g=9, 91 evaluated, 23 expanded
[t=0.303077s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.303077s, 48600 KB] g=11, 134 evaluated, 26 expanded
[t=0.343031s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.343031s, 48600 KB] g=13, 157 evaluated, 36 expanded
[t=0.383017s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.383017s, 48600 KB] g=15, 182 evaluated, 48 expanded
[t=0.422984s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.422984s, 48600 KB] g=17, 207 evaluated, 61 expanded
[t=0.458961s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.458961s, 48600 KB] g=19, 229 evaluated, 65 expanded
[t=0.490932s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.490932s, 48600 KB] g=21, 252 evaluated, 71 expanded
[t=0.526904s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.526904s, 48600 KB] g=23, 275 evaluated, 81 expanded
[t=0.558884s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.558884s, 48600 KB] g=25, 299 evaluated, 94 expanded
[t=0.586858s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.586858s, 48600 KB] g=26, 319 evaluated, 95 expanded
[t=0.590858s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.590858s, 48600 KB] g=27, 323 evaluated, 96 expanded
[t=0.594866s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.594866s, 48600 KB] g=28, 325 evaluated, 97 expanded
[t=0.650811s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.650811s, 48600 KB] g=30, 368 evaluated, 101 expanded
[t=0.674803s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.674803s, 48600 KB] g=32, 393 evaluated, 110 expanded
[t=0.722763s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.722763s, 48600 KB] g=34, 440 evaluated, 122 expanded
[t=0.730756s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.730756s, 48600 KB] g=35, 452 evaluated, 123 expanded
[t=0.738764s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.738764s, 48600 KB] g=37, 464 evaluated, 125 expanded
[t=0.754744s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.754744s, 48600 KB] g=38, 484 evaluated, 126 expanded
[t=0.758742s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.758742s, 48600 KB] g=39, 497 evaluated, 127 expanded
[t=0.766732s, 48600 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.766732s, 48600 KB] g=40, 506 evaluated, 128 expanded
[t=0.774725s, 48732 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.774725s, 48732 KB] g=41, 525 evaluated, 129 expanded
[t=0.774725s, 48732 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.774725s, 48732 KB] g=42, 528 evaluated, 130 expanded
[t=0.774725s, 48732 KB] Solution found!
[t=0.774725s, 48732 KB] Actual search time: 0.727195s
up f0 f12 (1)
board f12 p3 (1)
down f12 f2 (1)
board f2 p1 (1)
down f2 f0 (1)
depart f0 p1 (1)
up f0 f16 (1)
board f16 p5 (1)
board f16 p9 (1)
down f16 f1 (1)
depart f1 p5 (1)
up f1 f17 (1)
depart f17 p9 (1)
down f17 f3 (1)
board f3 p4 (1)
up f3 f18 (1)
board f18 p7 (1)
down f18 f10 (1)
depart f10 p7 (1)
down f10 f4 (1)
board f4 p10 (1)
up f4 f14 (1)
depart f14 p10 (1)
down f14 f7 (1)
board f7 p6 (1)
up f7 f21 (1)
board f21 p0 (1)
board f21 p2 (1)
down f21 f10 (1)
depart f10 p6 (1)
down f10 f7 (1)
depart f7 p4 (1)
up f7 f12 (1)
depart f12 p0 (1)
down f12 f9 (1)
board f9 p8 (1)
down f9 f1 (1)
depart f1 p8 (1)
up f1 f20 (1)
depart f20 p3 (1)
down f20 f8 (1)
depart f8 p2 (1)
[t=0.774725s, 48732 KB] Plan length: 42 step(s).
[t=0.774725s, 48732 KB] Plan cost: 42
[t=0.774725s, 48732 KB] Expanded 131 state(s).
[t=0.774725s, 48732 KB] Reopened 0 state(s).
[t=0.774725s, 48732 KB] Evaluated 528 state(s).
[t=0.774725s, 48732 KB] Evaluations: 528
[t=0.774725s, 48732 KB] Generated 2801 state(s).
[t=0.774725s, 48732 KB] Dead ends: 0 state(s).
[t=0.774725s, 48732 KB] Number of registered states: 528
[t=0.774725s, 48732 KB] Int hash set load factor: 528/1024 = 0.515625
[t=0.774725s, 48732 KB] Int hash set resizes: 10
[t=0.774725s, 48732 KB] Search time: 0.727195s
[t=0.774725s, 48732 KB] Total time: 0.774725s
Solution found.
Peak memory: 48732 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 42 

Successful plans:
Value: 42
 sas_plan 42 

validate exit code: 0

INFO     Planner time: 0.89s
