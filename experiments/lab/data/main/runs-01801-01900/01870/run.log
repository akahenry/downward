INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.023s wall-clock]
Normalizing task... [0.010s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.007s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.040s CPU, 0.040s wall-clock]
Generated 23 rules.
Computing model... [0.110s CPU, 0.112s wall-clock]
7307 relevant atoms
12865 auxiliary atoms
20172 final queue length
23383 total queue pushes
Completing instantiation... [0.050s CPU, 0.045s wall-clock]
Instantiating: [0.210s CPU, 0.211s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.027s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
1718 of 1718 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 149
Translator goal facts: 6
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1718
Translator axioms: 0
Translator task size: 8669
Translator peak memory: 43916 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.340s CPU, 0.338s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00344475s, 46024 KB] done reading input!
[t=0.0074482s, 46420 KB] Generating patterns using: systematic pattern collection generator
[t=0.0074482s, 46420 KB] building causal graph...done! [t=0s]
[t=0.0074482s, 46420 KB] Found 18 SGA patterns.
[t=0.0074482s, 46420 KB] Found 68 interesting patterns.
[t=0.0074482s, 46420 KB] systematic pattern collection generator number of patterns: 68
[t=0.0074482s, 46420 KB] systematic pattern collection generator total PDB size: 742048
[t=0.0074482s, 46420 KB] systematic pattern collection generator computation time: 0s
[t=0.0074482s, 46420 KB] Computing PDBs for pattern collection...
[t=0.119242s, 49480 KB] Done computing PDBs for pattern collection: 0.111794s
[t=0.123228s, 51084 KB] Tie breaking: 2
[t=0.123228s, 51084 KB] Building successor generator...done!
[t=0.123228s, 51084 KB] peak memory difference for successor generator creation: 0 KB
[t=0.123228s, 51084 KB] time for successor generation creation: 0s
[t=0.123228s, 51084 KB] Variables: 8
[t=0.123228s, 51084 KB] FactPairs: 149
[t=0.123228s, 51084 KB] Bytes per state: 4
[t=0.123228s, 51084 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.127234s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.127234s, 51084 KB] g=0, 1 evaluated, 0 expanded
[t=0.127234s, 51084 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.127234s, 51084 KB] pruning method: none
[t=0.127234s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.127234s, 51084 KB] g=1, 2 evaluated, 1 expanded
[t=0.143216s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.143216s, 51084 KB] g=2, 9 evaluated, 2 expanded
[t=0.143216s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.143216s, 51084 KB] g=3, 10 evaluated, 3 expanded
[t=0.151221s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.151221s, 51084 KB] g=4, 16 evaluated, 4 expanded
[t=0.155207s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.155207s, 51084 KB] g=4, 17 evaluated, 4 expanded
[t=0.159213s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.159213s, 51084 KB] g=5, 22 evaluated, 5 expanded
[t=0.1672s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.1672s, 51084 KB] g=6, 27 evaluated, 6 expanded
[t=0.1672s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.1672s, 51084 KB] g=7, 29 evaluated, 7 expanded
[t=0.175191s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.175191s, 51084 KB] g=8, 32 evaluated, 8 expanded
[t=0.179197s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.179197s, 51084 KB] g=9, 40 evaluated, 9 expanded
[t=0.187188s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.187188s, 51084 KB] g=10, 46 evaluated, 10 expanded
[t=0.191191s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.191191s, 51084 KB] g=11, 51 evaluated, 11 expanded
[t=0.191191s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.191191s, 51084 KB] g=12, 53 evaluated, 12 expanded
[t=0.195764s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.195764s, 51084 KB] g=13, 59 evaluated, 13 expanded
[t=0.203136s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.203136s, 51084 KB] g=15, 70 evaluated, 15 expanded
[t=0.203136s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.203136s, 51084 KB] g=16, 72 evaluated, 16 expanded
[t=0.207126s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.207126s, 51084 KB] g=17, 76 evaluated, 17 expanded
[t=0.21113s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.21113s, 51084 KB] g=18, 84 evaluated, 18 expanded
[t=0.21512s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.21512s, 51084 KB] g=19, 88 evaluated, 19 expanded
[t=0.219125s, 51084 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.219125s, 51084 KB] g=20, 91 evaluated, 20 expanded
[t=0.219125s, 51084 KB] Solution found!
[t=0.219125s, 51084 KB] Actual search time: 0.0918906s
drive t0 l5 l0 level93 level6 level99 (1)
load p4 t0 l0 (1)
drive t0 l0 l3 level75 level18 level93 (1)
load p1 t0 l3 (1)
unload p4 t0 l3 (1)
load p0 t0 l3 (1)
drive t0 l3 l1 level63 level12 level75 (1)
drive t0 l1 l2 level60 level3 level63 (1)
load p3 t0 l2 (1)
unload p1 t0 l2 (1)
unload p0 t0 l2 (1)
drive t0 l2 l5 level47 level13 level60 (1)
load p5 t0 l5 (1)
drive t0 l5 l4 level35 level12 level47 (1)
load p2 t0 l4 (1)
drive t0 l4 l3 level27 level8 level35 (1)
drive t0 l3 l0 level9 level18 level27 (1)
unload p5 t0 l0 (1)
unload p3 t0 l0 (1)
unload p2 t0 l0 (1)
[t=0.219125s, 51084 KB] Plan length: 20 step(s).
[t=0.219125s, 51084 KB] Plan cost: 20
[t=0.219125s, 51084 KB] Expanded 21 state(s).
[t=0.219125s, 51084 KB] Reopened 0 state(s).
[t=0.219125s, 51084 KB] Evaluated 91 state(s).
[t=0.219125s, 51084 KB] Evaluations: 91
[t=0.219125s, 51084 KB] Generated 106 state(s).
[t=0.219125s, 51084 KB] Dead ends: 21 state(s).
[t=0.219125s, 51084 KB] Number of registered states: 91
[t=0.219125s, 51084 KB] Int hash set load factor: 91/128 = 0.710938
[t=0.219125s, 51084 KB] Int hash set resizes: 7
[t=0.219125s, 51084 KB] Search time: 0.0958964s
[t=0.219125s, 51084 KB] Total time: 0.219125s
Solution found.
Peak memory: 51084 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 20 

Successful plans:
Value: 20
 sas_plan 20 

validate exit code: 0

INFO     Planner time: 0.68s
