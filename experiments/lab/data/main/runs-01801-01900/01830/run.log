INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
881 relevant atoms
737 auxiliary atoms
1618 final queue length
2059 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
11 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
0 of 1 mutex groups necessary.
484 of 484 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 484
Translator axioms: 0
Translator task size: 1574
Translator peak memory: 33388 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.060s CPU, 0.063s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00204166s, 45596 KB] done reading input!
[t=0.00204166s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00374079s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00374079s, 45992 KB] Found 44 SGA patterns.
[t=0.00374079s, 45992 KB] Found 374 interesting patterns.
[t=0.00374079s, 45992 KB] systematic pattern collection generator number of patterns: 374
[t=0.00374079s, 45992 KB] systematic pattern collection generator total PDB size: 54758
[t=0.00374079s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0.00374079s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0651912s, 46216 KB] Done computing PDBs for pattern collection: 0.0614504s
[t=0.0702383s, 48692 KB] Tie breaking: 2
[t=0.0704638s, 48692 KB] Building successor generator...done!
[t=0.0705108s, 48692 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0705108s, 48692 KB] time for successor generation creation: 0s
[t=0.0705108s, 48692 KB] Variables: 23
[t=0.0705108s, 48692 KB] FactPairs: 66
[t=0.0705108s, 48692 KB] Bytes per state: 4
[t=0.0705108s, 48692 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0719032s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.0719032s, 48692 KB] g=0, 1 evaluated, 0 expanded
[t=0.0719032s, 48692 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.0719032s, 48692 KB] pruning method: none
[t=0.07398s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=0.0740644s, 48692 KB] g=1, 2 evaluated, 1 expanded
[t=0.136266s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.136266s, 48692 KB] g=3, 45 evaluated, 3 expanded
[t=0.172242s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.172242s, 48692 KB] g=5, 68 evaluated, 7 expanded
[t=0.20422s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.20422s, 48692 KB] g=7, 91 evaluated, 14 expanded
[t=0.20422s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.208204s, 48692 KB] g=8, 93 evaluated, 15 expanded
[t=0.268163s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.268163s, 48692 KB] g=10, 137 evaluated, 24 expanded
[t=0.30014s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.30014s, 48692 KB] g=12, 160 evaluated, 39 expanded
[t=0.30014s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.30014s, 48692 KB] g=13, 162 evaluated, 40 expanded
[t=0.3601s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.3601s, 48692 KB] g=15, 206 evaluated, 48 expanded
[t=0.388078s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.388078s, 48692 KB] g=17, 230 evaluated, 57 expanded
[t=0.420057s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.420057s, 48692 KB] g=18, 253 evaluated, 58 expanded
[t=0.448031s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.448031s, 48692 KB] g=20, 278 evaluated, 75 expanded
[t=0.472019s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.472019s, 48692 KB] g=21, 296 evaluated, 76 expanded
[t=0.480013s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.480013s, 48692 KB] g=22, 302 evaluated, 77 expanded
[t=0.50799s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.50799s, 48692 KB] g=23, 327 evaluated, 78 expanded
[t=0.531968s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.531968s, 48692 KB] g=24, 351 evaluated, 79 expanded
[t=0.555965s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.555965s, 48692 KB] g=25, 374 evaluated, 80 expanded
[t=0.579934s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.579934s, 48692 KB] g=27, 397 evaluated, 87 expanded
[t=0.603931s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.603931s, 48692 KB] g=29, 422 evaluated, 99 expanded
[t=0.615919s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.615919s, 48692 KB] g=30, 440 evaluated, 100 expanded
[t=0.623917s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.623917s, 48692 KB] g=32, 453 evaluated, 102 expanded
[t=0.636869s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.636869s, 48692 KB] g=33, 467 evaluated, 103 expanded
[t=0.640731s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.640731s, 48692 KB] g=34, 477 evaluated, 104 expanded
[t=0.650776s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.650776s, 48692 KB] g=35, 490 evaluated, 105 expanded
[t=0.654758s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.65715s, 48692 KB] g=36, 501 evaluated, 106 expanded
[t=0.662476s, 48692 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.662476s, 48692 KB] g=37, 512 evaluated, 107 expanded
[t=0.662476s, 48692 KB] Solution found!
[t=0.662476s, 48692 KB] Actual search time: 0.590573s
board f0 p0 (1)
up f0 f1 (1)
depart f1 p0 (1)
up f1 f11 (1)
board f11 p1 (1)
down f11 f4 (1)
board f4 p2 (1)
board f4 p7 (1)
up f4 f13 (1)
board f13 p3 (1)
up f13 f14 (1)
board f14 p8 (1)
board f14 p9 (1)
down f14 f2 (1)
depart f2 p8 (1)
up f2 f15 (1)
board f15 p6 (1)
depart f15 p7 (1)
up f15 f16 (1)
board f16 p10 (1)
up f16 f17 (1)
board f17 p4 (1)
depart f17 p9 (1)
depart f17 p6 (1)
depart f17 p2 (1)
down f17 f13 (1)
depart f13 p10 (1)
down f13 f7 (1)
depart f7 p4 (1)
up f7 f20 (1)
board f20 p5 (1)
down f20 f16 (1)
depart f16 p1 (1)
down f16 f2 (1)
depart f2 p5 (1)
up f2 f18 (1)
depart f18 p3 (1)
[t=0.662476s, 48692 KB] Plan length: 37 step(s).
[t=0.662476s, 48692 KB] Plan cost: 37
[t=0.662476s, 48692 KB] Expanded 108 state(s).
[t=0.662476s, 48692 KB] Reopened 0 state(s).
[t=0.662476s, 48692 KB] Evaluated 512 state(s).
[t=0.662476s, 48692 KB] Evaluations: 512
[t=0.662476s, 48692 KB] Generated 2330 state(s).
[t=0.662476s, 48692 KB] Dead ends: 0 state(s).
[t=0.662476s, 48692 KB] Number of registered states: 512
[t=0.662476s, 48692 KB] Int hash set load factor: 512/1024 = 0.5
[t=0.662476s, 48692 KB] Int hash set resizes: 10
[t=0.662476s, 48692 KB] Search time: 0.591965s
[t=0.662476s, 48692 KB] Total time: 0.662476s
Solution found.
Peak memory: 48692 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 37 

Successful plans:
Value: 37
 sas_plan 37 

validate exit code: 0

INFO     Planner time: 0.79s
