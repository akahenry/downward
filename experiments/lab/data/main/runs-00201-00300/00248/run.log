INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.890s CPU, 0.895s wall-clock]
151565 relevant atoms
10122 auxiliary atoms
161687 final queue length
490508 total queue pushes
Completing instantiation... [5.170s CPU, 5.177s wall-clock]
Instantiating: [6.100s CPU, 6.102s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.020s CPU, 0.014s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.010s CPU, 0.011s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.001s wall-clock]
Choosing groups...
101 uncovered facts
Choosing groups: [0.000s CPU, 0.005s wall-clock]
Building translation key... [0.010s CPU, 0.002s wall-clock]
Computing fact groups: [0.050s CPU, 0.045s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.002s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.200s CPU, 0.194s wall-clock]
Translating task: [5.660s CPU, 5.665s wall-clock]
177600 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [3.950s CPU, 3.952s wall-clock]
Reordering and filtering variables...
141 of 141 variables necessary.
61 of 101 mutex groups necessary.
144000 of 144000 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.790s CPU, 0.799s wall-clock]
Translator variables: 141
Translator derived variables: 0
Translator facts: 2642
Translator goal facts: 40
Translator mutex groups: 61
Translator total mutex groups size: 2501
Translator operators: 144000
Translator axioms: 0
Translator task size: 1171724
Translator peak memory: 718100 KB
Writing output... [0.840s CPU, 0.845s wall-clock]
Done! [17.650s CPU, 17.669s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1782s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.558093s, 64968 KB] done reading input!
[t=0.558093s, 65232 KB] Generating patterns using: systematic pattern collection generator
[t=0.558093s, 65232 KB] building causal graph...done! [t=0.0799477s]
[t=0.638041s, 69060 KB] Found 4080 SGA patterns.
[t=0.662027s, 69060 KB] Found 4080 interesting patterns.
[t=0.662027s, 69060 KB] systematic pattern collection generator number of patterns: 4080
[t=0.662027s, 69060 KB] systematic pattern collection generator total PDB size: 495320
[t=0.662027s, 69060 KB] systematic pattern collection generator computation time: 0.103934s
[t=0.662027s, 69060 KB] Computing PDBs for pattern collection...
[t=90.6932s, 70340 KB] Done computing PDBs for pattern collection: 90.0312s
[t=106.778s, 382932 KB] Building successor generator...done!
[t=106.834s, 395224 KB] peak memory difference for successor generator creation: 12292 KB
[t=106.834s, 395224 KB] time for successor generation creation: 0.0519304s
[t=106.834s, 395224 KB] Variables: 141
[t=106.834s, 395224 KB] FactPairs: 2642
[t=106.834s, 395224 KB] Bytes per state: 44
[t=106.834s, 395224 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=106.834s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 81
[t=106.834s, 395224 KB] g=0, 1 evaluated, 0 expanded
[t=106.834s, 395224 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 81
[t=106.834s, 395224 KB] pruning method: none
[t=106.842s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 80
[t=106.842s, 395224 KB] g=2, 59 evaluated, 2 expanded
[t=106.842s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 79
[t=106.842s, 395224 KB] g=3, 84 evaluated, 3 expanded
[t=106.842s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 78
[t=106.842s, 395224 KB] g=3, 94 evaluated, 3 expanded
[t=106.854s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 76
[t=106.854s, 395224 KB] g=5, 220 evaluated, 6 expanded
[t=106.89s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 74
[t=106.89s, 395224 KB] g=7, 573 evaluated, 15 expanded
[t=106.938s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 72
[t=106.938s, 395224 KB] g=9, 1097 evaluated, 28 expanded
[t=106.99s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 70
[t=106.99s, 395224 KB] g=11, 1655 evaluated, 42 expanded
[t=107.038s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 69
[t=107.038s, 395224 KB] g=13, 2201 evaluated, 56 expanded
[t=107.042s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 68
[t=107.042s, 395224 KB] g=14, 2220 evaluated, 57 expanded
[t=107.042s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 67
[t=107.042s, 395224 KB] g=14, 2231 evaluated, 57 expanded
[t=107.082s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 65
[t=107.082s, 395224 KB] g=16, 2665 evaluated, 68 expanded
[t=107.086s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 64
[t=107.086s, 395224 KB] g=17, 2691 evaluated, 69 expanded
[t=107.086s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 62
[t=107.086s, 395224 KB] g=17, 2692 evaluated, 69 expanded
[t=107.13s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 60
[t=107.13s, 395224 KB] g=19, 3153 evaluated, 81 expanded
[t=107.13s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 59
[t=107.13s, 395224 KB] g=20, 3182 evaluated, 82 expanded
[t=107.13s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 58
[t=107.13s, 395224 KB] g=20, 3188 evaluated, 82 expanded
[t=107.134s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 57
[t=107.134s, 395224 KB] g=21, 3201 evaluated, 83 expanded
[t=107.254s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 55
[t=107.258s, 395224 KB] g=23, 4536 evaluated, 118 expanded
[t=107.258s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 54
[t=107.258s, 395224 KB] g=24, 4559 evaluated, 119 expanded
[t=107.258s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 52
[t=107.258s, 395224 KB] g=24, 4564 evaluated, 119 expanded
[t=107.286s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 51
[t=107.286s, 395224 KB] g=26, 4819 evaluated, 126 expanded
[t=107.286s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 50
[t=107.286s, 395224 KB] g=26, 4820 evaluated, 126 expanded
[t=107.286s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 48
[t=107.286s, 395224 KB] g=27, 4850 evaluated, 127 expanded
[t=107.294s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 47
[t=107.294s, 395224 KB] g=28, 4899 evaluated, 128 expanded
[t=107.306s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 45
[t=107.306s, 395224 KB] g=29, 5045 evaluated, 132 expanded
[t=107.31s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 44
[t=107.31s, 395224 KB] g=30, 5075 evaluated, 133 expanded
[t=107.31s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 42
[t=107.31s, 395224 KB] g=31, 5100 evaluated, 134 expanded
[t=107.342s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 41
[t=107.342s, 395224 KB] g=33, 5421 evaluated, 142 expanded
[t=107.342s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 39
[t=107.342s, 395224 KB] g=34, 5443 evaluated, 143 expanded
[t=107.346s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 38
[t=107.346s, 395224 KB] g=35, 5474 evaluated, 144 expanded
[t=107.35s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 36
[t=107.35s, 395224 KB] g=36, 5503 evaluated, 145 expanded
[t=107.354s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 34
[t=107.354s, 395224 KB] g=37, 5536 evaluated, 146 expanded
[t=107.358s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 33
[t=107.358s, 395224 KB] g=38, 5580 evaluated, 147 expanded
[t=107.358s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 32
[t=107.358s, 395224 KB] g=39, 5603 evaluated, 148 expanded
[t=107.362s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 31
[t=107.362s, 395224 KB] g=40, 5643 evaluated, 149 expanded
[t=107.366s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 30
[t=107.366s, 395224 KB] g=41, 5679 evaluated, 150 expanded
[t=107.726s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 29
[t=107.726s, 395224 KB] g=47, 9904 evaluated, 271 expanded
[t=107.726s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 28
[t=107.726s, 395224 KB] g=48, 9929 evaluated, 272 expanded
[t=150.973s, 429532 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=150.973s, 429532 KB] g=51, 511871 evaluated, 18020 expanded
[t=150.977s, 429532 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=150.977s, 429532 KB] g=52, 511892 evaluated, 18021 expanded
[t=192.137s, 469124 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=192.137s, 469124 KB] g=57, 983955 evaluated, 34866 expanded
[t=192.141s, 469124 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=192.141s, 469124 KB] g=58, 983977 evaluated, 34867 expanded
[t=233.036s, 499236 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=233.036s, 499236 KB] g=61, 1452974 evaluated, 51615 expanded
[t=233.04s, 499236 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=233.04s, 499236 KB] g=62, 1453003 evaluated, 51616 expanded
[t=272.351s, 551248 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=272.351s, 551248 KB] g=67, 1910764 evaluated, 68004 expanded
[t=272.351s, 551248 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=272.351s, 551248 KB] g=68, 1910792 evaluated, 68005 expanded
[t=311.191s, 576452 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=311.191s, 576452 KB] g=71, 2368380 evaluated, 84388 expanded
[t=311.191s, 576452 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=311.191s, 576452 KB] g=72, 2368411 evaluated, 84389 expanded
[t=349.245s, 606092 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=349.245s, 606092 KB] g=77, 2815001 evaluated, 100416 expanded
[t=349.249s, 606092 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=349.249s, 606092 KB] g=78, 2815021 evaluated, 100417 expanded
[t=387.028s, 635896 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=387.028s, 635896 KB] g=81, 3262729 evaluated, 116476 expanded
[t=387.032s, 635896 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=387.032s, 635896 KB] g=82, 3262764 evaluated, 116477 expanded
[t=424.038s, 713596 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=424.038s, 713596 KB] g=87, 3698587 evaluated, 132142 expanded
[t=424.042s, 713596 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=424.042s, 713596 KB] g=88, 3698620 evaluated, 132143 expanded
[t=461.137s, 726276 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=461.137s, 726276 KB] g=91, 4131023 evaluated, 147716 expanded
[t=461.137s, 726276 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=461.137s, 726276 KB] g=92, 4131055 evaluated, 147717 expanded
[t=496.854s, 754340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=496.854s, 754340 KB] g=97, 4553521 evaluated, 162963 expanded
[t=496.858s, 754340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=496.858s, 754340 KB] g=98, 4553545 evaluated, 162964 expanded
[t=532.036s, 782468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=532.036s, 782468 KB] g=101, 4976225 evaluated, 178213 expanded
[t=532.036s, 782468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=532.036s, 782468 KB] g=102, 4976255 evaluated, 178214 expanded
[t=566.985s, 809948 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=566.985s, 809948 KB] g=107, 5390711 evaluated, 193183 expanded
[t=566.989s, 809948 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=566.989s, 809948 KB] g=108, 5390747 evaluated, 193184 expanded
[t=601.569s, 837320 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=601.569s, 837320 KB] g=110, 5803659 evaluated, 208108 expanded
[t=601.569s, 837320 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=601.569s, 837320 KB] g=111, 5803682 evaluated, 208109 expanded
[t=601.573s, 837320 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=601.573s, 837320 KB] g=112, 5803708 evaluated, 208110 expanded
[t=601.577s, 837320 KB] Solution found!
[t=601.577s, 837320 KB] Actual search time: 494.743s
move-car-to-car car_01 car_08 car_05 (1)
move-car-to-car car_29 car_00 car_08 (1)
move-car-to-car car_21 car_33 car_00 (1)
move-car-to-car car_02 car_13 car_24 (1)
move-car-to-car car_34 car_23 car_13 (1)
move-car-to-car car_18 car_04 car_23 (1)
move-car-to-car car_25 car_17 car_04 (1)
move-car-to-car car_27 car_11 car_17 (1)
move-car-to-car car_32 car_31 car_11 (1)
move-car-to-car car_28 car_06 car_31 (1)
move-car-to-car car_27 car_17 car_06 (1)
move-curb-to-car car_33 curb_05 car_17 (1)
move-car-to-curb car_01 car_05 curb_05 (1)
move-car-to-car car_22 car_10 car_01 (1)
move-car-to-car car_28 car_31 car_05 (1)
move-curb-to-car car_31 curb_03 car_10 (1)
move-car-to-curb car_03 car_37 curb_03 (1)
move-car-to-car car_02 car_24 car_37 (1)
move-curb-to-car car_24 curb_19 car_03 (1)
move-car-to-curb car_19 car_30 curb_19 (1)
move-car-to-car car_07 car_14 car_19 (1)
move-car-to-car car_09 car_35 car_30 (1)
move-curb-to-car car_35 curb_18 car_14 (1)
move-car-to-curb car_18 car_23 curb_18 (1)
move-curb-to-car car_23 curb_07 car_18 (1)
move-car-to-curb car_07 car_19 curb_07 (1)
move-car-to-car car_28 car_05 car_07 (1)
move-car-to-car car_16 car_26 car_19 (1)
move-curb-to-car car_26 curb_01 car_05 (1)
move-car-to-curb car_02 car_37 curb_01 (1)
move-car-to-car car_23 car_18 car_02 (1)
move-car-to-car car_20 car_39 car_37 (1)
move-curb-to-car car_39 curb_02 car_18 (1)
move-car-to-curb car_09 car_30 curb_02 (1)
move-curb-to-car car_30 curb_13 car_09 (1)
move-car-to-curb car_12 car_38 curb_13 (1)
move-car-to-car car_33 car_17 car_12 (1)
move-curb-to-car car_38 curb_10 car_17 (1)
move-car-to-curb car_16 car_19 curb_10 (1)
move-car-to-car car_20 car_37 car_19 (1)
move-curb-to-car car_37 curb_06 car_16 (1)
move-car-to-curb car_26 car_05 curb_06 (1)
move-curb-to-car car_05 curb_20 car_26 (1)
move-car-to-curb car_20 car_19 curb_20 (1)
move-car-to-car car_05 car_26 car_19 (1)
move-car-to-car car_22 car_01 car_20 (1)
move-curb-to-car car_01 curb_05 car_26 (1)
move-car-to-curb car_05 car_19 curb_05 (1)
move-car-to-car car_01 car_26 car_19 (1)
move-curb-to-car car_26 curb_06 car_05 (1)
move-car-to-curb car_23 car_02 curb_06 (1)
move-curb-to-car car_02 curb_01 car_23 (1)
move-car-to-curb car_01 car_19 curb_01 (1)
move-car-to-car car_22 car_20 car_01 (1)
move-car-to-car car_02 car_23 car_19 (1)
move-car-to-car car_30 car_09 car_20 (1)
move-curb-to-car car_09 curb_02 car_23 (1)
move-car-to-curb car_02 car_19 curb_02 (1)
move-car-to-car car_09 car_23 car_19 (1)
move-curb-to-car car_23 curb_06 car_02 (1)
move-car-to-curb car_29 car_08 curb_06 (1)
move-curb-to-car car_08 curb_09 car_29 (1)
move-car-to-curb car_09 car_19 curb_09 (1)
move-car-to-car car_30 car_20 car_09 (1)
move-car-to-car car_08 car_29 car_19 (1)
move-car-to-car car_32 car_11 car_20 (1)
move-curb-to-car car_11 curb_08 car_29 (1)
move-car-to-curb car_08 car_19 curb_08 (1)
move-car-to-car car_11 car_29 car_19 (1)
move-curb-to-car car_29 curb_06 car_08 (1)
move-car-to-curb car_21 car_00 curb_06 (1)
move-curb-to-car car_00 curb_11 car_21 (1)
move-car-to-curb car_11 car_19 curb_11 (1)
move-car-to-car car_32 car_20 car_11 (1)
move-car-to-car car_00 car_21 car_19 (1)
move-car-to-car car_36 car_15 car_20 (1)
move-curb-to-car car_15 curb_00 car_21 (1)
move-car-to-curb car_00 car_19 curb_00 (1)
move-car-to-car car_15 car_21 car_19 (1)
move-curb-to-car car_21 curb_06 car_00 (1)
move-car-to-curb car_34 car_13 curb_06 (1)
move-curb-to-car car_13 curb_15 car_34 (1)
move-car-to-curb car_15 car_19 curb_15 (1)
move-car-to-car car_36 car_20 car_15 (1)
move-car-to-car car_13 car_34 car_19 (1)
move-car-to-car car_33 car_12 car_20 (1)
move-curb-to-car car_12 curb_13 car_34 (1)
move-car-to-curb car_13 car_19 curb_13 (1)
move-car-to-car car_12 car_34 car_19 (1)
move-curb-to-car car_34 curb_06 car_13 (1)
move-car-to-curb car_25 car_04 curb_06 (1)
move-curb-to-car car_04 curb_12 car_25 (1)
move-car-to-curb car_12 car_19 curb_12 (1)
move-car-to-car car_33 car_20 car_12 (1)
move-car-to-car car_04 car_25 car_19 (1)
move-car-to-car car_31 car_10 car_20 (1)
move-curb-to-car car_10 curb_04 car_25 (1)
move-car-to-curb car_04 car_19 curb_04 (1)
move-car-to-car car_10 car_25 car_19 (1)
move-curb-to-car car_25 curb_06 car_04 (1)
move-car-to-curb car_37 car_16 curb_06 (1)
move-curb-to-car car_16 curb_10 car_37 (1)
move-car-to-curb car_10 car_19 curb_10 (1)
move-car-to-car car_31 car_20 car_10 (1)
move-car-to-car car_16 car_37 car_19 (1)
move-car-to-car car_27 car_06 car_20 (1)
move-curb-to-car car_06 curb_16 car_37 (1)
move-car-to-curb car_16 car_19 curb_16 (1)
move-car-to-car car_06 car_37 car_19 (1)
move-curb-to-car car_37 curb_06 car_16 (1)
move-car-to-curb car_06 car_19 curb_06 (1)
move-car-to-car car_27 car_20 car_06 (1)
[t=601.577s, 837320 KB] Plan length: 112 step(s).
[t=601.577s, 837320 KB] Plan cost: 112
[t=601.577s, 837320 KB] Expanded 208111 state(s).
[t=601.577s, 837320 KB] Reopened 0 state(s).
[t=601.577s, 837320 KB] Evaluated 5803741 state(s).
[t=601.577s, 837320 KB] Evaluations: 5803741
[t=601.577s, 837320 KB] Generated 8559296 state(s).
[t=601.577s, 837320 KB] Dead ends: 399736 state(s).
[t=601.577s, 837320 KB] Number of registered states: 5803741
[t=601.577s, 837320 KB] Int hash set load factor: 5803741/8388608 = 0.69186
[t=601.577s, 837320 KB] Int hash set resizes: 23
[t=601.577s, 837320 KB] Search time: 494.743s
[t=601.577s, 837320 KB] Total time: 601.577s
Solution found.
Peak memory: 837320 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 112 

Successful plans:
Value: 112
 sas_plan 112 

validate exit code: 0

INFO     Planner time: 619.46s
