INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.038s wall-clock]
3955 relevant atoms
3949 auxiliary atoms
7904 final queue length
13920 total queue pushes
Completing instantiation... [0.080s CPU, 0.082s wall-clock]
Instantiating: [0.130s CPU, 0.126s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
405 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.004s wall-clock]
Translating task: [0.110s CPU, 0.105s wall-clock]
4712 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.042s wall-clock]
Reordering and filtering variables...
408 of 408 variables necessary.
17 of 20 mutex groups necessary.
2814 of 2814 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.029s wall-clock]
Translator variables: 408
Translator derived variables: 0
Translator facts: 849
Translator goal facts: 15
Translator mutex groups: 17
Translator total mutex groups size: 51
Translator operators: 2814
Translator axioms: 0
Translator task size: 26997
Translator peak memory: 48400 KB
Writing output... [0.030s CPU, 0.022s wall-clock]
Done! [0.350s CPU, 0.346s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0159912s, 11736 KB] done reading input!
[t=0.0159912s, 12000 KB] Generating patterns using: systematic pattern collection generator
[t=0.0159912s, 12000 KB] building causal graph...done! [t=0.00400501s]
[t=0.0199962s, 13076 KB] Found 124 SGA patterns.
[t=0.0199962s, 13076 KB] Found 124 interesting patterns.
[t=0.0199962s, 13076 KB] systematic pattern collection generator number of patterns: 124
[t=0.0199962s, 13076 KB] systematic pattern collection generator total PDB size: 1456
[t=0.0199962s, 13076 KB] systematic pattern collection generator computation time: 0.00400501s
[t=0.0199962s, 13076 KB] Computing PDBs for pattern collection...
[t=0.0759551s, 13076 KB] Done computing PDBs for pattern collection: 0.055959s
[t=0.0839506s, 13076 KB] Building successor generator...done!
[t=0.0879508s, 13076 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0879508s, 13076 KB] time for successor generation creation: 0.00400025s
[t=0.0879508s, 13076 KB] Variables: 408
[t=0.0879508s, 13076 KB] FactPairs: 849
[t=0.0879508s, 13076 KB] Bytes per state: 56
[t=0.0879508s, 13076 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0879508s, 13076 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0879508s, 13076 KB] g=0, 1 evaluated, 0 expanded
[t=0.0879508s, 13076 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0879508s, 13076 KB] pruning method: none
[t=0.0879508s, 13076 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0879508s, 13076 KB] g=2, 259 evaluated, 14 expanded
[t=0.207928s, 15888 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.207928s, 15888 KB] g=12, 30226 evaluated, 11538 expanded
[t=0.207928s, 15888 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.207928s, 15888 KB] g=13, 30245 evaluated, 11539 expanded
[t=0.627748s, 25144 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.627748s, 25144 KB] g=25, 132522 evaluated, 47626 expanded
[t=0.627748s, 25144 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.627748s, 25144 KB] g=26, 132542 evaluated, 47627 expanded
[t=0.627748s, 25144 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.627748s, 25144 KB] g=27, 132580 evaluated, 47628 expanded
[t=0.807668s, 28720 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.807668s, 28720 KB] g=39, 178621 evaluated, 66251 expanded
[t=0.807668s, 28720 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.807668s, 28720 KB] g=40, 178650 evaluated, 66252 expanded
[t=0.847652s, 29520 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.847652s, 29520 KB] g=41, 189197 evaluated, 69631 expanded
[t=1.02761s, 36132 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=1.02761s, 36132 KB] g=53, 234370 evaluated, 87231 expanded
[t=1.02761s, 36132 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=1.02761s, 36132 KB] g=54, 234397 evaluated, 87232 expanded
[t=1.47544s, 44172 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=1.47544s, 44172 KB] g=66, 351355 evaluated, 127720 expanded
[t=1.47544s, 44172 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=1.47544s, 44172 KB] g=67, 351381 evaluated, 127721 expanded
[t=2.09121s, 60236 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=2.09121s, 60236 KB] g=80, 506942 evaluated, 182718 expanded
[t=2.09121s, 60236 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=2.09121s, 60236 KB] g=81, 506967 evaluated, 182719 expanded
[t=2.73902s, 73684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=2.74302s, 73684 KB] g=93, 680297 evaluated, 244562 expanded
[t=2.74302s, 73684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=2.74302s, 73684 KB] g=94, 680319 evaluated, 244563 expanded
[t=3.24283s, 83920 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=3.24283s, 83920 KB] g=106, 814458 evaluated, 292073 expanded
[t=3.24283s, 83920 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=3.24283s, 83920 KB] g=107, 814476 evaluated, 292074 expanded
[t=3.5507s, 103756 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=3.5507s, 103756 KB] g=120, 886080 evaluated, 316769 expanded
[t=3.59469s, 103756 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=3.59469s, 103756 KB] g=120, 898281 evaluated, 321101 expanded
[t=3.59469s, 103756 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=3.59469s, 103756 KB] g=121, 898301 evaluated, 321102 expanded
[t=4.83812s, 120800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=4.83812s, 120800 KB] g=133, 1186720 evaluated, 421906 expanded
[t=4.83812s, 120800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=4.83812s, 120800 KB] g=134, 1186739 evaluated, 421907 expanded
[t=5.54564s, 135560 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=5.54965s, 135560 KB] g=146, 1377180 evaluated, 488082 expanded
[t=5.54965s, 135560 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=5.54965s, 135560 KB] g=147, 1377198 evaluated, 488083 expanded
[t=5.54965s, 135560 KB] Solution found!
[t=5.54965s, 135560 KB] Actual search time: 5.4617s
grasp left shot14 (1)
fill-shot shot14 ingredient5 left right dispenser5 (1)
grasp right shot16 (1)
leave left shot14 (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail11 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail3 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot12 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail3 shot8 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail3 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail10 ingredient5 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot15 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail10 shot5 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail10 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient5 right left dispenser5 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail9 ingredient5 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail1 ingredient1 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail2 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient3 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail7 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail5 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot10 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot13 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail5 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail4 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot11 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient3 right left (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail6 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
refill-shot shot16 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
leave right shot16 (1)
shake cocktail8 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 (1)
[t=5.54965s, 135560 KB] Plan length: 147 step(s).
[t=5.54965s, 135560 KB] Plan cost: 147
[t=5.54965s, 135560 KB] Expanded 488084 state(s).
[t=5.54965s, 135560 KB] Reopened 0 state(s).
[t=5.54965s, 135560 KB] Evaluated 1377201 state(s).
[t=5.54965s, 135560 KB] Evaluations: 1377201
[t=5.54965s, 135560 KB] Generated 2862285 state(s).
[t=5.54965s, 135560 KB] Dead ends: 0 state(s).
[t=5.54965s, 135560 KB] Number of registered states: 1377201
[t=5.54965s, 135560 KB] Int hash set load factor: 1377201/2097152 = 0.656701
[t=5.54965s, 135560 KB] Int hash set resizes: 21
[t=5.54965s, 135560 KB] Search time: 5.4617s
[t=5.54965s, 135560 KB] Total time: 5.54965s
Solution found.
Peak memory: 135560 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 147 

Successful plans:
Value: 147
 sas_plan 147 

validate exit code: 0

INFO     Planner time: 5.96s
