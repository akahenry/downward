INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.029s wall-clock]
2784 relevant atoms
2893 auxiliary atoms
5677 final queue length
9793 total queue pushes
Completing instantiation... [0.060s CPU, 0.062s wall-clock]
Instantiating: [0.100s CPU, 0.097s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.012s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
292 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.069s wall-clock]
3276 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.037s wall-clock]
Reordering and filtering variables...
295 of 295 variables necessary.
14 of 17 mutex groups necessary.
1958 of 1958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.019s wall-clock]
Translator variables: 295
Translator derived variables: 0
Translator facts: 617
Translator goal facts: 12
Translator mutex groups: 14
Translator total mutex groups size: 42
Translator operators: 1958
Translator axioms: 0
Translator task size: 18764
Translator peak memory: 43512 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.260s CPU, 0.257s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00798367s, 11388 KB] done reading input!
[t=0.00798367s, 11652 KB] Generating patterns using: systematic pattern collection generator
[t=0.00798367s, 11652 KB] building causal graph...done! [t=0.00400477s]
[t=0.0119884s, 12324 KB] Found 100 SGA patterns.
[t=0.0119884s, 12324 KB] Found 100 interesting patterns.
[t=0.0119884s, 12324 KB] systematic pattern collection generator number of patterns: 100
[t=0.0119884s, 12324 KB] systematic pattern collection generator total PDB size: 1024
[t=0.0119884s, 12324 KB] systematic pattern collection generator computation time: 0.00400477s
[t=0.0119884s, 12324 KB] Computing PDBs for pattern collection...
[t=0.0439678s, 12324 KB] Done computing PDBs for pattern collection: 0.0319794s
[t=0.0479707s, 12324 KB] Building successor generator...done!
[t=0.0479707s, 12324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0479707s, 12324 KB] time for successor generation creation: 0s
[t=0.0479707s, 12324 KB] Variables: 295
[t=0.0479707s, 12324 KB] FactPairs: 617
[t=0.0479707s, 12324 KB] Bytes per state: 40
[t=0.0479707s, 12324 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0479707s, 12324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.0479707s, 12324 KB] g=0, 1 evaluated, 0 expanded
[t=0.0479707s, 12324 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.0479707s, 12324 KB] pruning method: none
[t=0.0479707s, 12324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.0479707s, 12324 KB] g=11, 128 evaluated, 8 expanded
[t=0.0959439s, 13576 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.0959439s, 13576 KB] g=39, 15149 evaluated, 6321 expanded
[t=0.0959439s, 13576 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.0959439s, 13576 KB] g=40, 15165 evaluated, 6322 expanded
[t=0.183909s, 15308 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.183909s, 15308 KB] g=70, 41756 evaluated, 17448 expanded
[t=0.183909s, 15308 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.183909s, 15308 KB] g=71, 41782 evaluated, 17449 expanded
[t=0.267876s, 17424 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.267876s, 17424 KB] g=101, 68322 evaluated, 28337 expanded
[t=0.267876s, 17424 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.267876s, 17424 KB] g=102, 68340 evaluated, 28338 expanded
[t=0.29186s, 17828 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.29186s, 17828 KB] g=118, 75242 evaluated, 30419 expanded
[t=0.299852s, 17960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=0.299852s, 17960 KB] g=134, 77872 evaluated, 31209 expanded
[t=0.299852s, 17960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.299852s, 17960 KB] g=135, 77890 evaluated, 31210 expanded
[t=0.347839s, 19036 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=0.347839s, 19036 KB] g=169, 94615 evaluated, 36305 expanded
[t=0.347839s, 19036 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=0.347839s, 19036 KB] g=170, 94634 evaluated, 36306 expanded
[t=0.431795s, 22292 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=0.431795s, 22292 KB] g=204, 122053 evaluated, 44214 expanded
[t=0.431795s, 22292 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=0.431795s, 22292 KB] g=205, 122073 evaluated, 44215 expanded
[t=0.663666s, 26068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=0.663666s, 26068 KB] g=240, 192177 evaluated, 70881 expanded
[t=0.663666s, 26068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=0.663666s, 26068 KB] g=241, 192195 evaluated, 70882 expanded
[t=0.803561s, 30968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=0.803561s, 30968 KB] g=275, 219770 evaluated, 79029 expanded
[t=0.803561s, 30968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=0.803561s, 30968 KB] g=276, 219788 evaluated, 79030 expanded
[t=0.85153s, 30968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=0.85153s, 30968 KB] g=310, 236941 evaluated, 84364 expanded
[t=0.85153s, 30968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=0.85153s, 30968 KB] g=311, 236957 evaluated, 84365 expanded
[t=0.90347s, 31992 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=0.90347s, 31992 KB] g=345, 254027 evaluated, 89699 expanded
[t=0.90347s, 31992 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=0.90347s, 31992 KB] g=346, 254043 evaluated, 89700 expanded
[t=0.90347s, 31992 KB] Solution found!
[t=0.90347s, 31992 KB] Actual search time: 0.8555s
grasp left shot11 (1)
fill-shot shot11 ingredient4 left right dispenser4 (10)
grasp right shot13 (1)
leave left shot11 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail6 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot10 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail2 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail1 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot12 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail1 shot2 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail1 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot11 (1)
leave left shaker1 (1)
pour-shot-to-clean-shaker shot11 ingredient4 shaker1 right l0 l1 (1)
refill-shot shot11 ingredient4 right left dispenser4 (10)
grasp left shot13 (1)
leave right shot11 (1)
refill-shot shot13 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail3 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot4 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient1 left right (1)
fill-shot shot13 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot5 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient3 left right (1)
fill-shot shot13 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail9 ingredient3 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot8 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient1 left right (1)
fill-shot shot13 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient2 left right (1)
fill-shot shot13 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail5 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot3 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient3 left right (1)
fill-shot shot13 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail8 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot7 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient2 left right (1)
fill-shot shot13 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail4 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 (1)
grasp left shot13 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot13 ingredient4 left right (1)
fill-shot shot13 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail10 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot6 right shaker1 l2 l1 (1)
[t=0.90347s, 31992 KB] Plan length: 157 step(s).
[t=0.90347s, 31992 KB] Plan cost: 346
[t=0.90347s, 31992 KB] Expanded 89701 state(s).
[t=0.90347s, 31992 KB] Reopened 0 state(s).
[t=0.90347s, 31992 KB] Evaluated 254043 state(s).
[t=0.90347s, 31992 KB] Evaluations: 254043
[t=0.90347s, 31992 KB] Generated 537998 state(s).
[t=0.90347s, 31992 KB] Dead ends: 0 state(s).
[t=0.90347s, 31992 KB] Number of registered states: 254043
[t=0.90347s, 31992 KB] Int hash set load factor: 254043/524288 = 0.484549
[t=0.90347s, 31992 KB] Int hash set resizes: 19
[t=0.90347s, 31992 KB] Search time: 0.8555s
[t=0.90347s, 31992 KB] Total time: 0.90347s
Solution found.
Peak memory: 31992 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 346 

Successful plans:
Value: 346
 sas_plan 346 

validate exit code: 0

INFO     Planner time: 1.21s
