INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
449 relevant atoms
862 auxiliary atoms
1311 final queue length
2031 total queue pushes
Completing instantiation... [0.010s CPU, 0.007s wall-clock]
Instantiating: [0.020s CPU, 0.016s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.010s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
6 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.006s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
6 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
12 of 12 variables necessary.
6 of 12 mutex groups necessary.
300 of 300 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 12
Translator derived variables: 0
Translator facts: 48
Translator goal facts: 12
Translator mutex groups: 6
Translator total mutex groups size: 36
Translator operators: 300
Translator axioms: 0
Translator task size: 1638
Translator peak memory: 33352 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.040s CPU, 0.040s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0.00373769s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00373769s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00373769s, 45992 KB] Found 63 SGA patterns.
[t=0.00373769s, 45992 KB] Found 63 interesting patterns.
[t=0.00373769s, 45992 KB] systematic pattern collection generator number of patterns: 63
[t=0.00373769s, 45992 KB] systematic pattern collection generator total PDB size: 1020
[t=0.00373769s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0.00373769s, 45992 KB] Computing PDBs for pattern collection...
[t=0.00772162s, 45992 KB] Done computing PDBs for pattern collection: 0.00398392s
[t=0.00772162s, 46128 KB] Building successor generator...done!
[t=0.00772162s, 46128 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00772162s, 46128 KB] time for successor generation creation: 0s
[t=0.00772162s, 46128 KB] Variables: 12
[t=0.00772162s, 46128 KB] FactPairs: 48
[t=0.00772162s, 46128 KB] Bytes per state: 4
[t=0.00772162s, 46128 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.00772162s, 46128 KB] g=0, 1 evaluated, 0 expanded
[t=0.00772162s, 46128 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.00772162s, 46128 KB] pruning method: none
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.00772162s, 46128 KB] g=6, 14 evaluated, 2 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=0.00772162s, 46128 KB] g=10, 37 evaluated, 4 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=0.00772162s, 46128 KB] g=13, 47 evaluated, 5 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=0.00772162s, 46128 KB] g=12, 51 evaluated, 6 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=0.00772162s, 46128 KB] g=17, 101 evaluated, 12 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=0.00772162s, 46128 KB] g=20, 111 evaluated, 13 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=0.00772162s, 46128 KB] g=22, 123 evaluated, 15 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=0.00772162s, 46128 KB] g=24, 138 evaluated, 17 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=0.00772162s, 46128 KB] g=26, 139 evaluated, 17 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=0.00772162s, 46128 KB] g=28, 187 evaluated, 23 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=0.00772162s, 46128 KB] g=29, 190 evaluated, 24 expanded
[t=0.00772162s, 46128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=0.00772162s, 46128 KB] g=32, 200 evaluated, 25 expanded
[t=0.00772162s, 46128 KB] Solution found!
[t=0.00772162s, 46128 KB] Actual search time: 0s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-2 (1)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
rotate-2 seg-in-2 seg-out-3 car-in-2 car-in-1 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-3 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
rotate-2 seg-in-3 seg-out-1 car-in-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-3 seg-out-1 car-in-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
[t=0.00772162s, 46128 KB] Plan length: 18 step(s).
[t=0.00772162s, 46128 KB] Plan cost: 30
[t=0.00772162s, 46128 KB] Expanded 26 state(s).
[t=0.00772162s, 46128 KB] Reopened 0 state(s).
[t=0.00772162s, 46128 KB] Evaluated 206 state(s).
[t=0.00772162s, 46128 KB] Evaluations: 206
[t=0.00772162s, 46128 KB] Generated 250 state(s).
[t=0.00772162s, 46128 KB] Dead ends: 0 state(s).
[t=0.00772162s, 46128 KB] Number of registered states: 206
[t=0.00772162s, 46128 KB] Int hash set load factor: 206/256 = 0.804688
[t=0.00772162s, 46128 KB] Int hash set resizes: 8
[t=0.00772162s, 46128 KB] Search time: 0s
[t=0.00772162s, 46128 KB] Total time: 0.00772162s
Solution found.
Peak memory: 46128 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 30 

Successful plans:
Value: 30
 sas_plan 30 

validate exit code: 0

INFO     Planner time: 0.10s
