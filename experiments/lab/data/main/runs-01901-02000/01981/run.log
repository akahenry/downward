INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
779 relevant atoms
794 auxiliary atoms
1573 final queue length
2701 total queue pushes
Completing instantiation... [0.020s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.012s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.006s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
616 of 616 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 72
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 616
Translator axioms: 0
Translator task size: 3660
Translator peak memory: 34628 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.050s CPU, 0.051s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00342862s, 45728 KB] done reading input!
[t=0.00342862s, 46124 KB] Generating patterns using: systematic pattern collection generator
[t=0.00342862s, 46124 KB] building causal graph...done! [t=0s]
[t=0.00342862s, 46124 KB] Found 110 SGA patterns.
[t=0.00342862s, 46124 KB] Found 136 interesting patterns.
[t=0.00342862s, 46124 KB] systematic pattern collection generator number of patterns: 136
[t=0.00342862s, 46124 KB] systematic pattern collection generator total PDB size: 446336
[t=0.00342862s, 46124 KB] systematic pattern collection generator computation time: 0s
[t=0.00342862s, 46124 KB] Computing PDBs for pattern collection...
[t=0.119322s, 47836 KB] Done computing PDBs for pattern collection: 0.115893s
[t=0.123328s, 48712 KB] Tie breaking: 2
[t=0.123328s, 48712 KB] Building successor generator...done!
[t=0.123328s, 48848 KB] peak memory difference for successor generator creation: 136 KB
[t=0.123328s, 48848 KB] time for successor generation creation: 0s
[t=0.123328s, 48848 KB] Variables: 8
[t=0.123328s, 48848 KB] FactPairs: 72
[t=0.123328s, 48848 KB] Bytes per state: 4
[t=0.123328s, 48848 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.123328s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 630
[t=0.123328s, 48848 KB] g=0, 1 evaluated, 0 expanded
[t=0.123328s, 48848 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 630
[t=0.123328s, 48848 KB] pruning method: none
[t=0.127318s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 577
[t=0.127318s, 48848 KB] g=53, 4 evaluated, 1 expanded
[t=0.127318s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 576
[t=0.127318s, 48848 KB] g=54, 8 evaluated, 2 expanded
[t=0.131325s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 527
[t=0.131325s, 48848 KB] g=103, 10 evaluated, 2 expanded
[t=0.131325s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 526
[t=0.131325s, 48848 KB] g=104, 11 evaluated, 3 expanded
[t=0.131325s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 473
[t=0.131325s, 48848 KB] g=157, 14 evaluated, 4 expanded
[t=0.135314s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 472
[t=0.135314s, 48848 KB] g=158, 19 evaluated, 5 expanded
[t=0.139314s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 286
[t=0.139314s, 48848 KB] g=344, 24 evaluated, 6 expanded
[t=0.143318s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 266
[t=0.143318s, 48848 KB] g=366, 31 evaluated, 7 expanded
[t=0.147308s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 265
[t=0.147308s, 48848 KB] g=416, 38 evaluated, 8 expanded
[t=0.159256s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 264
[t=0.159256s, 48848 KB] g=368, 53 evaluated, 10 expanded
[t=0.163267s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 263
[t=0.163267s, 48848 KB] g=369, 60 evaluated, 11 expanded
[t=0.175239s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 212
[t=0.175239s, 48848 KB] g=420, 76 evaluated, 15 expanded
[t=0.179241s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 211
[t=0.179241s, 48848 KB] g=421, 85 evaluated, 16 expanded
[t=0.187236s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 210
[t=0.187236s, 48848 KB] g=444, 108 evaluated, 20 expanded
[t=0.191234s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 72
[t=0.191234s, 48848 KB] g=582, 111 evaluated, 20 expanded
[t=0.191234s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 71
[t=0.191234s, 48848 KB] g=583, 116 evaluated, 21 expanded
[t=0.19524s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 55
[t=0.19524s, 48848 KB] g=631, 119 evaluated, 21 expanded
[t=0.19524s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=0.19524s, 48848 KB] g=629, 120 evaluated, 21 expanded
[t=0.19524s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.19524s, 48848 KB] g=630, 125 evaluated, 22 expanded
[t=0.199229s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.199229s, 48848 KB] g=652, 129 evaluated, 23 expanded
[t=0.199229s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.199229s, 48848 KB] g=653, 137 evaluated, 24 expanded
[t=0.203226s, 48848 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.203226s, 48848 KB] g=654, 146 evaluated, 25 expanded
[t=0.203226s, 48848 KB] Solution found!
[t=0.203226s, 48848 KB] Actual search time: 0.0798983s
drive truck-2 city-3-loc-1 city-3-loc-3 (53)
drive truck-1 city-1-loc-3 city-1-loc-2 (50)
pick-up truck-2 city-3-loc-3 package-3 capacity-2 capacity-3 (1)
drive truck-2 city-3-loc-3 city-3-loc-1 (53)
pick-up truck-2 city-3-loc-1 package-1 capacity-1 capacity-2 (1)
drive truck-2 city-3-loc-1 city-1-loc-1 (186)
drive truck-2 city-1-loc-1 city-1-loc-3 (22)
drop truck-2 city-1-loc-3 package-1 capacity-1 capacity-2 (1)
drop truck-2 city-1-loc-3 package-3 capacity-2 capacity-3 (1)
pick-up truck-1 city-1-loc-2 package-2 capacity-2 capacity-3 (1)
pick-up truck-1 city-1-loc-2 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-2 city-1-loc-3 (50)
drop truck-1 city-1-loc-3 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-3 city-1-loc-1 (22)
drive truck-1 city-1-loc-1 city-2-loc-3 (139)
drive truck-1 city-2-loc-3 city-2-loc-2 (47)
pick-up truck-2 city-1-loc-3 package-1 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-3 city-1-loc-1 (22)
drop truck-2 city-1-loc-1 package-1 capacity-2 capacity-3 (1)
drop truck-1 city-2-loc-2 package-2 capacity-2 capacity-3 (1)
[t=0.203226s, 48848 KB] Plan length: 20 step(s).
[t=0.203226s, 48848 KB] Plan cost: 654
[t=0.203226s, 48848 KB] Expanded 26 state(s).
[t=0.203226s, 48848 KB] Reopened 0 state(s).
[t=0.203226s, 48848 KB] Evaluated 146 state(s).
[t=0.203226s, 48848 KB] Evaluations: 146
[t=0.203226s, 48848 KB] Generated 184 state(s).
[t=0.203226s, 48848 KB] Dead ends: 0 state(s).
[t=0.203226s, 48848 KB] Number of registered states: 146
[t=0.203226s, 48848 KB] Int hash set load factor: 146/256 = 0.570312
[t=0.203226s, 48848 KB] Int hash set resizes: 8
[t=0.203226s, 48848 KB] Search time: 0.0798983s
[t=0.203226s, 48848 KB] Total time: 0.203226s
Solution found.
Peak memory: 48848 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 654 

Successful plans:
Value: 654
 sas_plan 654 

validate exit code: 0

INFO     Planner time: 0.31s
