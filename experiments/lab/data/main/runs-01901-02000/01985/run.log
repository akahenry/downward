INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
1046 relevant atoms
1054 auxiliary atoms
2100 final queue length
3626 total queue pushes
Completing instantiation... [0.030s CPU, 0.028s wall-clock]
Instantiating: [0.050s CPU, 0.046s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
840 of 840 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.004s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 90
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 840
Translator axioms: 0
Translator task size: 4926
Translator peak memory: 35416 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00395212s, 45860 KB] done reading input!
[t=0.00395212s, 46124 KB] Generating patterns using: systematic pattern collection generator
[t=0.00395212s, 46124 KB] building causal graph...done! [t=0s]
[t=0.00395212s, 46124 KB] Found 110 SGA patterns.
[t=0.00395212s, 46124 KB] Found 136 interesting patterns.
[t=0.00395212s, 46124 KB] systematic pattern collection generator number of patterns: 136
[t=0.00395212s, 46124 KB] systematic pattern collection generator total PDB size: 1033256
[t=0.00395212s, 46124 KB] systematic pattern collection generator computation time: 0s
[t=0.00395212s, 46124 KB] Computing PDBs for pattern collection...
[t=0.255566s, 50588 KB] Done computing PDBs for pattern collection: 0.251614s
[t=0.258327s, 51620 KB] Tie breaking: 2
[t=0.258327s, 51620 KB] Building successor generator...done!
[t=0.258327s, 51620 KB] peak memory difference for successor generator creation: 0 KB
[t=0.258327s, 51620 KB] time for successor generation creation: 0s
[t=0.258327s, 51620 KB] Variables: 8
[t=0.258327s, 51620 KB] FactPairs: 90
[t=0.258327s, 51620 KB] Bytes per state: 4
[t=0.258327s, 51620 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.258327s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 533
[t=0.260878s, 51620 KB] g=0, 1 evaluated, 0 expanded
[t=0.260878s, 51620 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 533
[t=0.260878s, 51620 KB] pruning method: none
[t=0.262301s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 410
[t=0.262301s, 51620 KB] g=123, 7 evaluated, 1 expanded
[t=0.270296s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 375
[t=0.270296s, 51620 KB] g=160, 16 evaluated, 2 expanded
[t=0.274305s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 353
[t=0.274305s, 51620 KB] g=182, 23 evaluated, 3 expanded
[t=0.278287s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 319
[t=0.278287s, 51620 KB] g=216, 30 evaluated, 4 expanded
[t=0.282288s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 317
[t=0.282288s, 51620 KB] g=235, 36 evaluated, 5 expanded
[t=0.286299s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 316
[t=0.286299s, 51620 KB] g=236, 43 evaluated, 6 expanded
[t=0.29429s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 297
[t=0.29429s, 51620 KB] g=255, 49 evaluated, 7 expanded
[t=0.298273s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 296
[t=0.298273s, 51620 KB] g=256, 56 evaluated, 8 expanded
[t=0.306281s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 262
[t=0.306281s, 51620 KB] g=290, 64 evaluated, 9 expanded
[t=0.31027s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 240
[t=0.31027s, 51620 KB] g=312, 71 evaluated, 10 expanded
[t=0.346254s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 215
[t=0.346254s, 51620 KB] g=339, 111 evaluated, 17 expanded
[t=0.350236s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 213
[t=0.350974s, 51620 KB] g=350, 112 evaluated, 17 expanded
[t=0.358222s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 212
[t=0.358222s, 51620 KB] g=351, 122 evaluated, 18 expanded
[t=0.422162s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 203
[t=0.422162s, 51620 KB] g=528, 191 evaluated, 31 expanded
[t=0.434161s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 200
[t=0.434161s, 51620 KB] g=651, 203 evaluated, 32 expanded
[t=0.438596s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 188
[t=0.438596s, 51620 KB] g=693, 210 evaluated, 33 expanded
[t=0.442077s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 173
[t=0.442077s, 51620 KB] g=692, 212 evaluated, 33 expanded
[t=0.45511s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 162
[t=0.45511s, 51620 KB] g=705, 224 evaluated, 35 expanded
[t=0.459245s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 161
[t=0.459245s, 51620 KB] g=706, 231 evaluated, 36 expanded
[t=0.469515s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 72
[t=0.469515s, 51620 KB] g=829, 241 evaluated, 37 expanded
[t=0.477526s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 71
[t=0.477526s, 51620 KB] g=870, 251 evaluated, 38 expanded
[t=0.481455s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 54
[t=0.481455s, 51620 KB] g=847, 254 evaluated, 38 expanded
[t=0.489449s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 53
[t=0.489449s, 51620 KB] g=848, 263 evaluated, 39 expanded
[t=0.493447s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 52
[t=0.493447s, 51620 KB] g=849, 272 evaluated, 40 expanded
[t=0.501441s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 51
[t=0.501441s, 51620 KB] g=850, 284 evaluated, 41 expanded
[t=0.505448s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 48
[t=0.505448s, 51620 KB] g=880, 291 evaluated, 42 expanded
[t=0.505448s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 33
[t=0.505448s, 51620 KB] g=868, 292 evaluated, 42 expanded
[t=0.509433s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.509433s, 51620 KB] g=900, 301 evaluated, 43 expanded
[t=0.513432s, 51620 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.513432s, 51620 KB] g=901, 310 evaluated, 44 expanded
[t=0.513432s, 51620 KB] Solution found!
[t=0.513432s, 51620 KB] Actual search time: 0.25251s
drive truck-1 city-2-loc-5 city-1-loc-5 (123)
drive truck-1 city-1-loc-5 city-1-loc-1 (37)
drive truck-1 city-1-loc-1 city-1-loc-3 (22)
drive truck-1 city-1-loc-3 city-1-loc-6 (34)
drive truck-1 city-1-loc-6 city-1-loc-2 (19)
pick-up truck-1 city-1-loc-2 package-2 capacity-3 capacity-4 (1)
drive truck-1 city-1-loc-2 city-1-loc-6 (19)
pick-up truck-1 city-1-loc-6 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-1-loc-6 city-1-loc-3 (34)
drive truck-1 city-1-loc-3 city-1-loc-1 (22)
pick-up truck-1 city-1-loc-1 package-3 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-1 city-1-loc-5 (37)
drop truck-1 city-1-loc-5 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-2-loc-2 city-2-loc-5 (42)
drive truck-2 city-2-loc-5 city-1-loc-5 (123)
drive truck-2 city-1-loc-5 city-1-loc-4 (12)
drive truck-1 city-1-loc-5 city-2-loc-5 (123)
drive truck-1 city-2-loc-5 city-2-loc-4 (41)
pick-up truck-2 city-1-loc-4 package-4 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-4 city-1-loc-5 (12)
pick-up truck-2 city-1-loc-5 package-2 capacity-1 capacity-2 (1)
drive truck-2 city-1-loc-5 city-2-loc-5 (123)
drive truck-1 city-2-loc-4 city-2-loc-1 (18)
drop truck-2 city-2-loc-5 package-2 capacity-1 capacity-2 (1)
drop truck-2 city-2-loc-5 package-4 capacity-2 capacity-3 (1)
drop truck-1 city-2-loc-1 package-1 capacity-2 capacity-3 (1)
drive truck-1 city-2-loc-1 city-2-loc-4 (18)
drive truck-1 city-2-loc-4 city-2-loc-3 (32)
drop truck-1 city-2-loc-3 package-3 capacity-3 capacity-4 (1)
[t=0.513432s, 51620 KB] Plan length: 29 step(s).
[t=0.513432s, 51620 KB] Plan cost: 901
[t=0.513432s, 51620 KB] Expanded 45 state(s).
[t=0.513432s, 51620 KB] Reopened 0 state(s).
[t=0.513432s, 51620 KB] Evaluated 310 state(s).
[t=0.513432s, 51620 KB] Evaluations: 310
[t=0.513432s, 51620 KB] Generated 426 state(s).
[t=0.513432s, 51620 KB] Dead ends: 0 state(s).
[t=0.513432s, 51620 KB] Number of registered states: 310
[t=0.513432s, 51620 KB] Int hash set load factor: 310/512 = 0.605469
[t=0.513432s, 51620 KB] Int hash set resizes: 9
[t=0.513432s, 51620 KB] Search time: 0.255106s
[t=0.513432s, 51620 KB] Total time: 0.513432s
Solution found.
Peak memory: 51620 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 901 

Successful plans:
Value: 901
 sas_plan 901 

validate exit code: 0

INFO     Planner time: 0.69s
