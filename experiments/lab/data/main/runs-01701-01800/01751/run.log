INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 24 rules.
Computing model... [0.000s CPU, 0.002s wall-clock]
201 relevant atoms
140 auxiliary atoms
341 final queue length
452 total queue pushes
Completing instantiation... [0.000s CPU, 0.002s wall-clock]
Instantiating: [0.000s CPU, 0.005s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.002s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
12 of 15 mutex groups necessary.
98 of 98 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 64
Translator goal facts: 12
Translator mutex groups: 12
Translator total mutex groups size: 48
Translator operators: 98
Translator axioms: 0
Translator task size: 673
Translator peak memory: 32116 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.010s CPU, 0.012s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45860 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45860 KB] building causal graph...done! [t=0.0039694s]
[t=0.0039694s, 46004 KB] Found 866 SGA patterns.
[t=0.0039694s, 46004 KB] Found 1152 interesting patterns.
[t=0.0039694s, 46004 KB] systematic pattern collection generator number of patterns: 1152
[t=0.0039694s, 46004 KB] systematic pattern collection generator total PDB size: 335394
[t=0.0039694s, 46004 KB] systematic pattern collection generator computation time: 0.0039694s
[t=0.0039694s, 46004 KB] Computing PDBs for pattern collection...
[t=0.0838974s, 47544 KB] Done computing PDBs for pattern collection: 0.079928s
[t=0.0878861s, 48860 KB] Tie breaking: 2
[t=0.0878861s, 48860 KB] Building successor generator...done!
[t=0.0878861s, 48860 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0878861s, 48860 KB] time for successor generation creation: 0s
[t=0.0878861s, 48860 KB] Variables: 15
[t=0.0878861s, 48860 KB] FactPairs: 64
[t=0.0878861s, 48860 KB] Bytes per state: 8
[t=0.0878861s, 48860 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0878861s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.0878861s, 48860 KB] g=0, 1 evaluated, 0 expanded
[t=0.0878861s, 48860 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.0878861s, 48860 KB] pruning method: none
[t=0.0918953s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.0918953s, 48860 KB] g=1, 2 evaluated, 1 expanded
[t=0.115863s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.115863s, 48860 KB] g=3, 39 evaluated, 4 expanded
[t=0.135837s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.135837s, 48860 KB] g=7, 75 evaluated, 9 expanded
[t=0.155814s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.155814s, 48860 KB] g=11, 111 evaluated, 13 expanded
[t=0.183793s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.183793s, 48860 KB] g=15, 155 evaluated, 22 expanded
[t=0.203779s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.204874s, 48860 KB] g=19, 191 evaluated, 26 expanded
[t=0.235731s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.235731s, 48860 KB] g=23, 251 evaluated, 39 expanded
[t=0.279711s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.279711s, 48860 KB] g=27, 322 evaluated, 54 expanded
[t=0.33166s, 48860 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.33166s, 48860 KB] g=31, 406 evaluated, 71 expanded
[t=1.48652s, 48992 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=1.48652s, 48992 KB] g=42, 2703 evaluated, 476 expanded
[t=1.48652s, 48992 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=1.48652s, 48992 KB] g=43, 2704 evaluated, 477 expanded
[t=1.48652s, 48992 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=1.48652s, 48992 KB] g=44, 2706 evaluated, 478 expanded
[t=1.49451s, 48992 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=1.49451s, 48992 KB] g=45, 2719 evaluated, 479 expanded
[t=1.49451s, 48992 KB] Solution found!
[t=1.49451s, 48992 KB] Actual search time: 1.40662s
pick ball1 rooma left (1)
move rooma roomb (1)
drop ball1 roomb left (1)
move roomb rooma (1)
pick ball10 rooma left (1)
move rooma roomb (1)
drop ball10 roomb left (1)
move roomb rooma (1)
pick ball11 rooma left (1)
move rooma roomb (1)
drop ball11 roomb left (1)
move roomb rooma (1)
pick ball12 rooma left (1)
move rooma roomb (1)
drop ball12 roomb left (1)
move roomb rooma (1)
pick ball2 rooma left (1)
move rooma roomb (1)
drop ball2 roomb left (1)
move roomb rooma (1)
pick ball3 rooma left (1)
move rooma roomb (1)
drop ball3 roomb left (1)
move roomb rooma (1)
pick ball4 rooma left (1)
move rooma roomb (1)
drop ball4 roomb left (1)
move roomb rooma (1)
pick ball5 rooma left (1)
move rooma roomb (1)
drop ball5 roomb left (1)
move roomb rooma (1)
pick ball6 rooma left (1)
move rooma roomb (1)
drop ball6 roomb left (1)
move roomb rooma (1)
pick ball7 rooma left (1)
pick ball8 rooma right (1)
move rooma roomb (1)
drop ball7 roomb left (1)
move roomb rooma (1)
pick ball9 rooma left (1)
move rooma roomb (1)
drop ball9 roomb left (1)
drop ball8 roomb right (1)
[t=1.49451s, 48992 KB] Plan length: 45 step(s).
[t=1.49451s, 48992 KB] Plan cost: 45
[t=1.49451s, 48992 KB] Expanded 480 state(s).
[t=1.49451s, 48992 KB] Reopened 0 state(s).
[t=1.49451s, 48992 KB] Evaluated 2719 state(s).
[t=1.49451s, 48992 KB] Evaluations: 2719
[t=1.49451s, 48992 KB] Generated 4317 state(s).
[t=1.49451s, 48992 KB] Dead ends: 0 state(s).
[t=1.49451s, 48992 KB] Number of registered states: 2719
[t=1.49451s, 48992 KB] Int hash set load factor: 2719/4096 = 0.663818
[t=1.49451s, 48992 KB] Int hash set resizes: 12
[t=1.49451s, 48992 KB] Search time: 1.40662s
[t=1.49451s, 48992 KB] Total time: 1.49451s
Solution found.
Peak memory: 48992 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 45 

Successful plans:
Value: 45
 sas_plan 45 

validate exit code: 0

INFO     Planner time: 1.57s
