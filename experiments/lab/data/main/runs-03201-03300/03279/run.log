INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 79 rules.
Computing model... [1.550s CPU, 1.546s wall-clock]
169277 relevant atoms
50496 auxiliary atoms
219773 final queue length
711745 total queue pushes
Completing instantiation... [4.260s CPU, 4.265s wall-clock]
Instantiating: [5.860s CPU, 5.866s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.130s CPU, 0.129s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
3360 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.008s wall-clock]
Computing fact groups: [0.170s CPU, 0.159s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.002s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.002s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.080s CPU, 0.081s wall-clock]
Translating task: [2.660s CPU, 2.664s wall-clock]
149056 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [1.490s CPU, 1.489s wall-clock]
Reordering and filtering variables...
3364 of 3364 variables necessary.
0 of 4 mutex groups necessary.
59488 of 59488 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [1.680s CPU, 1.680s wall-clock]
Translator variables: 3364
Translator derived variables: 0
Translator facts: 6912
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 59488
Translator axioms: 0
Translator task size: 516124
Translator peak memory: 373200 KB
Writing output... [0.380s CPU, 0.382s wall-clock]
Done! [12.360s CPU, 12.369s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1787s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.279544s, 34316 KB] done reading input!
[t=0.307533s, 51408 KB] Simplifying 268512 unary operators... done! [192048 unary operators]
[t=0.451448s, 68188 KB] time to simplify: 0.143915s
[t=0.455435s, 68188 KB] Initializing additive heuristic...
[t=0.455435s, 68188 KB] Initializing FF heuristic...
[t=0.455435s, 68188 KB] Building successor generator...done!
[t=0.475426s, 68188 KB] peak memory difference for successor generator creation: 0 KB
[t=0.475426s, 68188 KB] time for successor generation creation: 0.0199917s
[t=0.475426s, 68188 KB] Variables: 3364
[t=0.475426s, 68188 KB] FactPairs: 6912
[t=0.475426s, 68188 KB] Bytes per state: 424
[t=0.475426s, 68188 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.475426s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 40
[t=0.475426s, 68188 KB] g=0, 1 evaluated, 0 expanded
[t=0.475426s, 68188 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 40
[t=0.475426s, 68188 KB] pruning method: none
[t=0.475426s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=0.475426s, 68188 KB] g=3, 2 evaluated, 1 expanded
[t=0.491417s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=0.491417s, 68188 KB] g=4, 10 evaluated, 2 expanded
[t=0.511404s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 30
[t=0.511404s, 68188 KB] g=10, 24 evaluated, 5 expanded
[t=0.519404s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 27
[t=0.519404s, 68188 KB] g=13, 28 evaluated, 6 expanded
[t=0.97923s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 25
[t=0.97923s, 68188 KB] g=23, 302 evaluated, 58 expanded
[t=0.987229s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 24
[t=0.987229s, 68188 KB] g=26, 307 evaluated, 59 expanded
[t=1.01922s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 21
[t=1.01922s, 68188 KB] g=27, 325 evaluated, 61 expanded
[t=1.53101s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 18
[t=1.53101s, 68188 KB] g=39, 637 evaluated, 113 expanded
[t=2.26239s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=2.26239s, 68188 KB] g=51, 1120 evaluated, 205 expanded
[t=7.6657s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=7.6697s, 68188 KB] g=56, 4611 evaluated, 909 expanded
[t=34.7383s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=34.7383s, 68188 KB] g=77, 23130 evaluated, 4841 expanded
[t=34.9142s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 11
[t=34.9142s, 68188 KB] g=86, 23255 evaluated, 4861 expanded
[t=34.9261s, 68188 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=34.9261s, 68188 KB] g=89, 23265 evaluated, 4862 expanded
[t=49.9529s, 72316 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 7
[t=49.9529s, 72316 KB] g=96, 34563 evaluated, 7600 expanded
[t=67.4531s, 78348 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=67.4531s, 78348 KB] g=109, 48449 evaluated, 11505 expanded
[t=72.1607s, 79956 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=72.1607s, 79956 KB] g=124, 52215 evaluated, 12646 expanded
[t=320.028s, 167488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=320.028s, 167488 KB] g=122, 244296 evaluated, 99515 expanded
[t=320.028s, 167488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 1
[t=320.028s, 167488 KB] g=125, 244297 evaluated, 99516 expanded
[t=320.092s, 167488 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=320.092s, 167488 KB] g=131, 244360 evaluated, 99536 expanded
[t=320.092s, 167488 KB] Solution found!
[t=320.092s, 167488 KB] Actual search time: 319.617s
move_l_down f5-1f f6-1f f6-2f f7-1f f7-2f rightl2 (3)
move_square f5-0f f6-0f square3 (1)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl4 (3)
move_l_down f6-1f f7-1f f7-2f f8-1f f8-2f rightl2 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl4 (3)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl1 (3)
move_l_down f7-1f f8-1f f8-2f f9-1f f9-2f rightl2 (3)
move_square f6-0f f7-0f square3 (1)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl1 (3)
move_square f7-0f f8-0f square3 (1)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl1 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl4 (3)
move_l_down f2-1f f3-1f f3-2f f4-1f f4-2f rightl3 (3)
move_l_down f3-1f f4-1f f4-2f f5-1f f5-2f rightl3 (3)
move_l_down f4-1f f5-1f f5-2f f6-1f f6-2f rightl3 (3)
move_l_down f8-1f f9-1f f9-2f f10-1f f10-2f rightl2 (3)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl4 (3)
move_l_right f5-1f f6-1f f6-2f f5-2f f6-3f f5-3f rightl3 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl3 (3)
move_square f2-0f f3-0f square2 (1)
move_square f3-0f f4-0f square2 (1)
move_square f4-0f f5-0f square2 (1)
move_square f5-0f f5-1f square2 (1)
move_square f5-1f f6-1f square2 (1)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl0 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl0 (3)
move_l_down f9-1f f10-1f f10-2f f11-1f f11-2f rightl2 (3)
move_l_down f8-2f f9-2f f9-3f f10-2f f10-3f rightl4 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl3 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl0 (3)
move_l_left f10-1f f11-1f f11-2f f10-0f f11-0f rightl2 (3)
move_l_down f9-2f f10-2f f10-3f f11-2f f11-3f rightl4 (3)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl3 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl0 (3)
move_square f0-2f f0-3f square1 (1)
move_square f0-3f f1-3f square1 (1)
move_square f1-3f f2-3f square1 (1)
move_square f2-3f f3-3f square1 (1)
move_square f3-3f f4-3f square1 (1)
move_square f4-3f f5-3f square1 (1)
move_square f5-3f f6-3f square1 (1)
move_l_down f0-0f f1-0f f1-1f f2-0f f2-1f rightl5 (3)
move_l_down f1-0f f2-0f f2-1f f3-0f f3-1f rightl5 (3)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl5 (3)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl5 (3)
move_square f8-0f f9-0f square3 (1)
move_l_down f6-0f f7-0f f7-1f f8-0f f8-1f rightl1 (3)
move_square f6-1f f7-1f square2 (1)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl5 (3)
move_square f9-0f f9-1f square3 (1)
move_square f9-1f f10-1f square3 (1)
move_l_down f7-0f f8-0f f8-1f f9-0f f9-1f rightl1 (3)
move_square f7-1f f8-1f square2 (1)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl5 (3)
move_square f0-1f f1-1f square0 (1)
move_square f1-1f f2-1f square0 (1)
move_square f2-1f f3-1f square0 (1)
move_square f3-1f f4-1f square0 (1)
move_square f4-1f f5-1f square0 (1)
move_square f5-1f f6-1f square0 (1)
[t=320.092s, 167488 KB] Plan length: 61 step(s).
[t=320.092s, 167488 KB] Plan cost: 131
[t=320.092s, 167488 KB] Expanded 99537 state(s).
[t=320.092s, 167488 KB] Reopened 0 state(s).
[t=320.092s, 167488 KB] Evaluated 244361 state(s).
[t=320.092s, 167488 KB] Evaluations: 244361
[t=320.092s, 167488 KB] Generated 1134292 state(s).
[t=320.092s, 167488 KB] Dead ends: 0 state(s).
[t=320.092s, 167488 KB] Number of registered states: 244361
[t=320.092s, 167488 KB] Int hash set load factor: 244361/524288 = 0.466082
[t=320.092s, 167488 KB] Int hash set resizes: 19
[t=320.092s, 167488 KB] Search time: 319.617s
[t=320.092s, 167488 KB] Total time: 320.092s
Solution found.
Peak memory: 167488 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 131 

Successful plans:
Value: 131
 sas_plan 131 

validate exit code: 0

INFO     Planner time: 332.58s
