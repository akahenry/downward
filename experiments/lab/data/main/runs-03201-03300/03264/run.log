INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.007s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 284 rules.
Computing model... [0.170s CPU, 0.164s wall-clock]
9596 relevant atoms
17069 auxiliary atoms
26665 final queue length
61477 total queue pushes
Completing instantiation... [0.380s CPU, 0.376s wall-clock]
Instantiating: [0.550s CPU, 0.556s wall-clock]
Computing fact groups...
Finding invariants...
22 initial candidates
Finding invariants: [0.020s CPU, 0.023s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.005s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
271 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.030s CPU, 0.033s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.015s wall-clock]
Translating task: [0.450s CPU, 0.454s wall-clock]
7380 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.230s CPU, 0.226s wall-clock]
Reordering and filtering variables...
284 of 296 variables necessary.
65 of 90 mutex groups necessary.
8563 of 8571 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.080s CPU, 0.088s wall-clock]
Translator variables: 284
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 4
Translator mutex groups: 65
Translator total mutex groups size: 802
Translator operators: 8563
Translator axioms: 0
Translator task size: 91779
Translator peak memory: 88044 KB
Writing output... [0.070s CPU, 0.063s wall-clock]
Done! [1.450s CPU, 1.445s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0394952s, 14120 KB] done reading input!
[t=0.0434901s, 17044 KB] Simplifying 48568 unary operators... done! [47713 unary operators]
[t=0.0874673s, 21404 KB] time to simplify: 0.0439772s
[t=0.0874673s, 21404 KB] Initializing additive heuristic...
[t=0.0874673s, 21404 KB] Initializing FF heuristic...
[t=0.0874673s, 21404 KB] Building successor generator...done!
[t=0.0914711s, 21404 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0914711s, 21404 KB] time for successor generation creation: 0.00400381s
[t=0.0914711s, 21404 KB] Variables: 284
[t=0.0914711s, 21404 KB] FactPairs: 870
[t=0.0914711s, 21404 KB] Bytes per state: 48
[t=0.0914711s, 21404 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0914711s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 86
[t=0.0914711s, 21404 KB] g=0, 1 evaluated, 0 expanded
[t=0.0914711s, 21404 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 86
[t=0.0914711s, 21404 KB] pruning method: none
[t=0.0914711s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 85
[t=0.0914711s, 21404 KB] g=1, 4 evaluated, 1 expanded
[t=0.095462s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 84
[t=0.095462s, 21404 KB] g=2, 8 evaluated, 2 expanded
[t=0.0994607s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 83
[t=0.0994607s, 21404 KB] g=4, 17 evaluated, 6 expanded
[t=0.103464s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 81
[t=0.103464s, 21404 KB] g=5, 21 evaluated, 7 expanded
[t=0.103464s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 80
[t=0.103464s, 21404 KB] g=6, 24 evaluated, 8 expanded
[t=0.107457s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 79
[t=0.107457s, 21404 KB] g=7, 28 evaluated, 9 expanded
[t=0.111456s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 78
[t=0.111456s, 21404 KB] g=8, 35 evaluated, 10 expanded
[t=0.135428s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 77
[t=0.135428s, 21404 KB] g=13, 75 evaluated, 24 expanded
[t=0.13943s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 76
[t=0.13943s, 21404 KB] g=15, 82 evaluated, 26 expanded
[t=0.151424s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 75
[t=0.151424s, 21404 KB] g=18, 100 evaluated, 32 expanded
[t=0.151424s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 74
[t=0.151424s, 21404 KB] g=20, 104 evaluated, 34 expanded
[t=0.175417s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 73
[t=0.175417s, 21404 KB] g=25, 145 evaluated, 49 expanded
[t=0.183405s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 72
[t=0.183405s, 21404 KB] g=28, 159 evaluated, 54 expanded
[t=0.18741s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 71
[t=0.18741s, 21404 KB] g=29, 164 evaluated, 55 expanded
[t=0.18741s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 70
[t=0.18741s, 21404 KB] g=30, 167 evaluated, 56 expanded
[t=0.191397s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 69
[t=0.191397s, 21404 KB] g=31, 171 evaluated, 57 expanded
[t=0.199399s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 68
[t=0.199399s, 21404 KB] g=34, 191 evaluated, 62 expanded
[t=0.203393s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 67
[t=0.203393s, 21404 KB] g=35, 194 evaluated, 63 expanded
[t=0.207396s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 66
[t=0.207396s, 21404 KB] g=37, 205 evaluated, 66 expanded
[t=0.21538s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 65
[t=0.21538s, 21404 KB] g=39, 222 evaluated, 70 expanded
[t=0.21538s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 63
[t=0.21538s, 21404 KB] g=40, 226 evaluated, 71 expanded
[t=0.263365s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 62
[t=0.263365s, 21404 KB] g=50, 315 evaluated, 98 expanded
[t=0.263365s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 59
[t=0.263365s, 21404 KB] g=51, 318 evaluated, 99 expanded
[t=0.275361s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 58
[t=0.275361s, 21404 KB] g=56, 343 evaluated, 107 expanded
[t=0.275361s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 57
[t=0.275361s, 21404 KB] g=57, 347 evaluated, 108 expanded
[t=0.279353s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 56
[t=0.279353s, 21404 KB] g=57, 349 evaluated, 108 expanded
[t=0.279353s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 55
[t=0.279353s, 21404 KB] g=58, 356 evaluated, 109 expanded
[t=0.279353s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 54
[t=0.279353s, 21404 KB] g=59, 359 evaluated, 110 expanded
[t=0.375307s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 53
[t=0.375307s, 21404 KB] g=65, 574 evaluated, 157 expanded
[t=0.375307s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 51
[t=0.375307s, 21404 KB] g=66, 577 evaluated, 158 expanded
[t=0.375307s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 50
[t=0.375307s, 21404 KB] g=67, 579 evaluated, 159 expanded
[t=0.375307s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 49
[t=0.375307s, 21404 KB] g=68, 583 evaluated, 160 expanded
[t=0.375307s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 48
[t=0.375307s, 21404 KB] g=68, 586 evaluated, 160 expanded
[t=0.379302s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 47
[t=0.379302s, 21404 KB] g=69, 593 evaluated, 161 expanded
[t=0.379302s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 45
[t=0.379302s, 21404 KB] g=70, 599 evaluated, 162 expanded
[t=0.383302s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 44
[t=0.383302s, 21404 KB] g=72, 604 evaluated, 164 expanded
[t=0.427287s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 42
[t=0.427287s, 21404 KB] g=75, 724 evaluated, 198 expanded
[t=0.427287s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 41
[t=0.427287s, 21404 KB] g=76, 729 evaluated, 199 expanded
[t=0.431292s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 40
[t=0.431292s, 21404 KB] g=78, 739 evaluated, 202 expanded
[t=0.431292s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 37
[t=0.431292s, 21404 KB] g=79, 740 evaluated, 203 expanded
[t=0.431292s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 36
[t=0.431292s, 21404 KB] g=79, 743 evaluated, 203 expanded
[t=0.443285s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 35
[t=0.443285s, 21404 KB] g=88, 823 evaluated, 230 expanded
[t=0.44728s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=0.44728s, 21404 KB] g=89, 830 evaluated, 231 expanded
[t=0.44728s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=0.44728s, 21404 KB] g=89, 832 evaluated, 231 expanded
[t=0.44728s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 32
[t=0.44728s, 21404 KB] g=90, 836 evaluated, 232 expanded
[t=0.44728s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=0.44728s, 21404 KB] g=91, 843 evaluated, 233 expanded
[t=0.451283s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 30
[t=0.451283s, 21404 KB] g=92, 852 evaluated, 234 expanded
[t=0.451283s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=0.451283s, 21404 KB] g=93, 853 evaluated, 235 expanded
[t=0.451283s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=0.451283s, 21404 KB] g=93, 855 evaluated, 235 expanded
[t=0.455275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 26
[t=0.455275s, 21404 KB] g=95, 872 evaluated, 239 expanded
[t=0.455275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 23
[t=0.455275s, 21404 KB] g=96, 878 evaluated, 240 expanded
[t=0.455275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 22
[t=0.455275s, 21404 KB] g=97, 881 evaluated, 241 expanded
[t=0.455275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 19
[t=0.455275s, 21404 KB] g=98, 889 evaluated, 242 expanded
[t=0.459275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 17
[t=0.459275s, 21404 KB] g=99, 894 evaluated, 243 expanded
[t=0.459275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 16
[t=0.459275s, 21404 KB] g=100, 902 evaluated, 244 expanded
[t=0.459275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=0.459275s, 21404 KB] g=100, 903 evaluated, 244 expanded
[t=0.459275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=0.459275s, 21404 KB] g=101, 914 evaluated, 245 expanded
[t=0.459275s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=0.459275s, 21404 KB] g=101, 918 evaluated, 245 expanded
[t=0.463278s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=0.463278s, 21404 KB] g=102, 925 evaluated, 246 expanded
[t=0.463278s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 11
[t=0.463278s, 21404 KB] g=102, 930 evaluated, 246 expanded
[t=0.463278s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 10
[t=0.463278s, 21404 KB] g=103, 933 evaluated, 247 expanded
[t=0.463278s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 9
[t=0.463278s, 21404 KB] g=104, 943 evaluated, 248 expanded
[t=0.463278s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=0.467266s, 21404 KB] g=105, 952 evaluated, 249 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 7
[t=0.467266s, 21404 KB] g=106, 963 evaluated, 250 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=0.467266s, 21404 KB] g=107, 968 evaluated, 251 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=0.467266s, 21404 KB] g=108, 976 evaluated, 252 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=0.467266s, 21404 KB] g=109, 979 evaluated, 253 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 3
[t=0.467266s, 21404 KB] g=110, 981 evaluated, 254 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 2
[t=0.467266s, 21404 KB] g=111, 985 evaluated, 255 expanded
[t=0.467266s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 1
[t=0.467266s, 21404 KB] g=112, 989 evaluated, 256 expanded
[t=0.471269s, 21404 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=0.471269s, 21404 KB] g=113, 992 evaluated, 257 expanded
[t=0.471269s, 21404 KB] Solution found!
[t=0.471269s, 21404 KB] Actual search time: 0.379798s
move-col-to-col d2 h5 s3 (1)
turn-deck sj dt (1)
turn-deck dt ct (1)
turn-deck ct d7 (1)
turn-deck d7 da (1)
tal-to-home da c6 d7 d0 d n1 n0 (1)
col-to-home d2 s3 d n2 da n1 (1)
tal-to-col d7 ct s8 c6 (1)
turn-deck ct c6 (1)
move-col-to-col s3 c7 d4 (1)
tal-to-col c6 ct d7 hj (1)
turn-deck ct hj (1)
turn-deck hj d3 (1)
tal-to-home d3 h3 hj d2 d n3 n2 (1)
turn-deck hj h3 (1)
turn-deck h3 c9 (1)
turn-deck c9 s2 (1)
turn-deck s2 c5 (1)
move-col-to-col s3 d4 h4 (1)
col-to-home d4 h7 d n4 d3 n3 (1)
move-col-to-col h5 c8 c6 (1)
move-col-to-col h7 ht c8 (1)
turn-deck c5 s7 (1)
turn-deck s7 s6 (1)
tal-to-col s6 s7 h7 s4 (1)
turn-deck s7 s4 (1)
turn-deck s4 h2 (1)
tal-to-col h2 s4 s3 ha (1)
turn-deck s4 ha (1)
tal-to-home ha d9 s4 h0 h n1 n0 (1)
col-to-home h2 s3 h n2 ha n1 (1)
turn-deck s4 d9 (1)
turn-deck d9 d8 (1)
turn-deck d8 h6 (1)
tal-to-col h6 d8 c7 d5 (1)
turn-deck d8 d5 (1)
tal-to-home-c d5 d8 d4 d n5 n4 (1)
turn-deck-a d8 st (1)
turn-deck st d6 (1)
tal-to-home d6 sj st d5 d n6 n5 (1)
turn-deck st sj (1)
move-col-to-col ht s5 cj (1)
move-col-to-col h4 h8 s5 (1)
move-col-to-col c7 sa h8 (1)
col-to-home sa c2 s n1 s0 n0 (1)
turn-deck sj dt (1)
turn-deck dt ct (1)
turn-deck ct hj (1)
move-col-to-col h5 c6 s6 (1)
turn-deck hj h3 (1)
tal-to-home h3 c9 hj h2 h n3 n2 (1)
turn-deck hj c9 (1)
move-col-to-col s5 s9 h6 (1)
turn-deck c9 s2 (1)
move-col-to-col h8 c3 s9 (1)
move-col-to-col s9 c4 ht (1)
tal-to-home s2 c5 c9 sa s n2 n1 (1)
turn-deck c9 c5 (1)
home-to-col h3 h2 c4 h n3 n2 (1)
col-to-home s3 h4 s n3 s2 n2 (1)
turn-deck c5 s7 (1)
col-to-home h3 c4 h n3 h2 n2 (1)
col-to-home h4 s5 h n4 h3 n3 (1)
col-to-home h5 s6 h n5 h4 n4 (1)
turn-deck s7 s4 (1)
tal-to-home s4 d9 s7 s3 s n4 n3 (1)
col-to-home s5 h6 s n5 s4 n4 (1)
col-to-home s6 h7 s n6 s5 n5 (1)
tal-to-home s7 d9 c5 s6 s n7 n6 (1)
turn-deck c5 d9 (1)
col-to-home h6 c7 h n6 h5 n5 (1)
move-col-to-col c6 d7 h7 (1)
col-to-home d7 s8 d n7 d6 n6 (1)
turn-deck d9 d8 (1)
tal-to-home-c d8 d9 d7 d n8 n7 (1)
tal-to-home-c d9 c5 d8 d n9 n8 (1)
turn-deck-a c5 st (1)
turn-deck st sj (1)
turn-deck sj dt (1)
col-to-home s8 dj s n8 s7 n7 (1)
turn-deck dt ct (1)
tal-to-col ct dt dj hj (1)
home-to-col d9 d8 ct d n9 n8 (1)
turn-deck dt hj (1)
move-col-to-col c8 ca d9 (1)
col-to-home-b ca c0 c n1 n0 coln0 coln1 (1)
col-to-home c2 h9 c n2 ca n1 (1)
home-to-col s8 s7 h9 s n8 n7 (1)
tal-to-col-e hj dt c9 coln1 coln0 (1)
col-to-home-b c3 c2 c n3 n2 coln0 coln1 (1)
col-to-home-b c4 c3 c n4 n3 coln1 coln2 (1)
turn-deck dt c9 (1)
col-to-home s8 h9 s n8 s7 n7 (1)
turn-deck c9 c5 (1)
tal-to-home-c c5 c9 c4 c n5 n4 (1)
col-to-home c6 h7 c n6 c5 n5 (1)
col-to-home c7 h8 c n7 c6 n6 (1)
col-to-home h7 c8 h n7 h6 n6 (1)
col-to-home h8 s9 h n8 h7 n7 (1)
col-to-home c8 d9 c n8 c7 n7 (1)
col-to-home d9 ct d n9 d8 n8 (1)
tal-to-home-c c9 dt c8 c n9 n8 (1)
col-to-home s9 ht s n9 s8 n8 (1)
col-to-home-b h9 h8 h n9 n8 coln2 coln3 (1)
col-to-home ht cj h n10 h9 n9 (1)
col-to-home ct dj c n10 c9 n9 (1)
col-to-home-b cj ct c n11 n10 coln3 coln4 (1)
col-to-home-b hj ht h n11 n10 coln4 coln5 (1)
tal-to-home-c dt sj d9 d n10 n9 (1)
col-to-home-b dj dt d n11 n10 coln5 coln6 (1)
tal-to-col-g sj st coln6 coln5 (1)
tal-to-home-d st s9 s n10 n9 (1)
col-to-home-b sj st s n11 n10 coln5 coln6 (1)
[t=0.471269s, 21404 KB] Plan length: 113 step(s).
[t=0.471269s, 21404 KB] Plan cost: 113
[t=0.471269s, 21404 KB] Expanded 258 state(s).
[t=0.471269s, 21404 KB] Reopened 0 state(s).
[t=0.471269s, 21404 KB] Evaluated 995 state(s).
[t=0.471269s, 21404 KB] Evaluations: 995
[t=0.471269s, 21404 KB] Generated 1266 state(s).
[t=0.471269s, 21404 KB] Dead ends: 0 state(s).
[t=0.471269s, 21404 KB] Number of registered states: 995
[t=0.471269s, 21404 KB] Int hash set load factor: 995/1024 = 0.97168
[t=0.471269s, 21404 KB] Int hash set resizes: 10
[t=0.471269s, 21404 KB] Search time: 0.379798s
[t=0.471269s, 21404 KB] Total time: 0.471269s
Solution found.
Peak memory: 21404 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 113 

Successful plans:
Value: 113
 sas_plan 113 

validate exit code: 0

INFO     Planner time: 1.98s
