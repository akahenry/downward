INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.130s CPU, 0.130s wall-clock]
18873 relevant atoms
6856 auxiliary atoms
25729 final queue length
64385 total queue pushes
Completing instantiation... [0.490s CPU, 0.496s wall-clock]
Instantiating: [0.630s CPU, 0.633s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.010s CPU, 0.013s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
16 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.020s wall-clock]
Translating task: [0.460s CPU, 0.465s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.270s CPU, 0.267s wall-clock]
Reordering and filtering variables...
32 of 32 variables necessary.
16 of 32 mutex groups necessary.
17280 of 17280 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.050s CPU, 0.046s wall-clock]
Translator variables: 32
Translator derived variables: 0
Translator facts: 288
Translator goal facts: 32
Translator mutex groups: 16
Translator total mutex groups size: 256
Translator operators: 17280
Translator axioms: 0
Translator task size: 88928
Translator peak memory: 97328 KB
Writing output... [0.070s CPU, 0.064s wall-clock]
Done! [1.520s CPU, 1.519s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0507937s, 15600 KB] done reading input!
[t=0.0547838s, 17792 KB] Simplifying 36480 unary operators... done! [32640 unary operators]
[t=0.062773s, 20608 KB] time to simplify: 0.0119878s
[t=0.0667717s, 20608 KB] Initializing additive heuristic...
[t=0.0667717s, 20608 KB] Initializing FF heuristic...
[t=0.0667717s, 20608 KB] Building successor generator...done!
[t=0.0707804s, 20608 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0707804s, 20608 KB] time for successor generation creation: 0.00400868s
[t=0.0707804s, 20608 KB] Variables: 32
[t=0.0707804s, 20608 KB] FactPairs: 288
[t=0.0707804s, 20608 KB] Bytes per state: 12
[t=0.0707804s, 20608 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0707804s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 56
[t=0.0707804s, 20608 KB] g=0, 1 evaluated, 0 expanded
[t=0.0707804s, 20608 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 56
[t=0.0707804s, 20608 KB] pruning method: none
[t=0.0707804s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 53
[t=0.0707804s, 20608 KB] g=3, 2 evaluated, 1 expanded
[t=0.0827714s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 52
[t=0.0867538s, 20608 KB] g=6, 74 evaluated, 2 expanded
[t=0.0867538s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 49
[t=0.0867538s, 20608 KB] g=6, 88 evaluated, 2 expanded
[t=0.102744s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 47
[t=0.102744s, 20608 KB] g=9, 154 evaluated, 3 expanded
[t=0.122715s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 46
[t=0.122715s, 20608 KB] g=12, 237 evaluated, 4 expanded
[t=0.138683s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 44
[t=0.138683s, 20608 KB] g=13, 302 evaluated, 5 expanded
[t=0.154677s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 43
[t=0.154677s, 20608 KB] g=16, 382 evaluated, 6 expanded
[t=0.16667s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 41
[t=0.16667s, 20608 KB] g=17, 448 evaluated, 7 expanded
[t=0.182659s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 40
[t=0.182659s, 20608 KB] g=20, 525 evaluated, 8 expanded
[t=0.206637s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 38
[t=0.206637s, 20608 KB] g=21, 592 evaluated, 9 expanded
[t=0.230604s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 37
[t=0.230604s, 20608 KB] g=24, 666 evaluated, 10 expanded
[t=0.254585s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 35
[t=0.254585s, 20608 KB] g=25, 734 evaluated, 11 expanded
[t=0.278568s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=0.278568s, 20608 KB] g=28, 805 evaluated, 12 expanded
[t=0.302535s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 32
[t=0.302535s, 20608 KB] g=29, 874 evaluated, 13 expanded
[t=0.326528s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=0.326528s, 20608 KB] g=32, 942 evaluated, 14 expanded
[t=0.350501s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=0.350501s, 20608 KB] g=33, 1012 evaluated, 15 expanded
[t=0.3705s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=0.3705s, 20608 KB] g=36, 1077 evaluated, 16 expanded
[t=1.62953s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 25
[t=1.62953s, 20608 KB] g=41, 5580 evaluated, 116 expanded
[t=1.63352s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 24
[t=1.63352s, 20608 KB] g=40, 5594 evaluated, 117 expanded
[t=2.73267s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 21
[t=2.73267s, 20608 KB] g=47, 9746 evaluated, 202 expanded
[t=2.73667s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 20
[t=2.73667s, 20608 KB] g=46, 9759 evaluated, 203 expanded
[t=3.77198s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 17
[t=3.77198s, 20608 KB] g=53, 13414 evaluated, 273 expanded
[t=3.77198s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 16
[t=3.77198s, 20608 KB] g=52, 13426 evaluated, 274 expanded
[t=4.61973s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=4.61973s, 20608 KB] g=59, 16486 evaluated, 329 expanded
[t=4.62373s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=4.62373s, 20608 KB] g=58, 16497 evaluated, 330 expanded
[t=5.2755s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 9
[t=5.2755s, 20608 KB] g=65, 18864 evaluated, 370 expanded
[t=5.2795s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=5.2795s, 20608 KB] g=64, 18874 evaluated, 371 expanded
[t=5.69134s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=5.69134s, 20608 KB] g=71, 20450 evaluated, 396 expanded
[t=5.69534s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=5.69534s, 20608 KB] g=70, 20459 evaluated, 397 expanded
[t=5.88721s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 1
[t=5.88721s, 20608 KB] g=77, 21146 evaluated, 407 expanded
[t=5.88721s, 20608 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=5.88721s, 20608 KB] g=76, 21154 evaluated, 408 expanded
[t=5.89519s, 20608 KB] Solution found!
[t=5.89519s, 20608 KB] Actual search time: 5.82441s
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (1)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
analyze-2 seg-in-4 seg-out-1 car-in-4 car-out-1 (3)
rotate-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (1)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-out-1 (3)
rotate-2 seg-in-5 seg-out-1 car-out-1 car-in-5 (1)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-out-1 (3)
rotate-2 seg-in-6 seg-out-1 car-out-1 car-in-6 (1)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-out-1 (3)
rotate-2 seg-in-7 seg-out-1 car-out-1 car-in-7 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-out-1 (3)
rotate-2 seg-in-8 seg-out-1 car-out-1 car-in-8 (1)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-2 (1)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-3 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-4 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-5 (1)
rotate-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (1)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-6 (1)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (1)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-1 car-out-7 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-7 (1)
rotate-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (1)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-8 (1)
rotate-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (1)
[t=5.89519s, 20608 KB] Plan length: 44 step(s).
[t=5.89519s, 20608 KB] Plan cost: 76
[t=5.89519s, 20608 KB] Expanded 409 state(s).
[t=5.89519s, 20608 KB] Reopened 0 state(s).
[t=5.89519s, 20608 KB] Evaluated 21209 state(s).
[t=5.89519s, 20608 KB] Evaluations: 21209
[t=5.89519s, 20608 KB] Generated 29376 state(s).
[t=5.89519s, 20608 KB] Dead ends: 0 state(s).
[t=5.89519s, 20608 KB] Number of registered states: 21209
[t=5.89519s, 20608 KB] Int hash set load factor: 21209/32768 = 0.647247
[t=5.89519s, 20608 KB] Int hash set resizes: 15
[t=5.89519s, 20608 KB] Search time: 5.82441s
[t=5.89519s, 20608 KB] Total time: 5.89519s
Solution found.
Peak memory: 20608 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 76 

Successful plans:
Value: 76
 sas_plan 76 

validate exit code: 0

INFO     Planner time: 7.49s
