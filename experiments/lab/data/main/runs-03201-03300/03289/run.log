INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.042s wall-clock]
3955 relevant atoms
3949 auxiliary atoms
7904 final queue length
13920 total queue pushes
Completing instantiation... [0.090s CPU, 0.091s wall-clock]
Instantiating: [0.150s CPU, 0.140s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
405 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.120s CPU, 0.117s wall-clock]
4712 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.048s wall-clock]
Reordering and filtering variables...
408 of 408 variables necessary.
17 of 20 mutex groups necessary.
2814 of 2814 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.028s wall-clock]
Translator variables: 408
Translator derived variables: 0
Translator facts: 849
Translator goal facts: 15
Translator mutex groups: 17
Translator total mutex groups size: 51
Translator operators: 2814
Translator axioms: 0
Translator task size: 26997
Translator peak memory: 48148 KB
Writing output... [0.030s CPU, 0.026s wall-clock]
Done! [0.390s CPU, 0.380s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119869s, 11736 KB] done reading input!
[t=0.0159769s, 12792 KB] Simplifying 10410 unary operators... done! [8834 unary operators]
[t=0.0199832s, 13452 KB] time to simplify: 0.0040063s
[t=0.0199832s, 13452 KB] Initializing additive heuristic...
[t=0.0199832s, 13452 KB] Initializing FF heuristic...
[t=0.0199832s, 13452 KB] Building successor generator...done!
[t=0.0199832s, 13452 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0199832s, 13452 KB] time for successor generation creation: 0s
[t=0.0199832s, 13452 KB] Variables: 408
[t=0.0199832s, 13452 KB] FactPairs: 849
[t=0.0199832s, 13452 KB] Bytes per state: 56
[t=0.0199832s, 13452 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0199832s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 38
[t=0.0199832s, 13452 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199832s, 13452 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 38
[t=0.0199832s, 13452 KB] pruning method: none
[t=0.063943s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 37
[t=0.063943s, 13452 KB] g=3, 486 evaluated, 68 expanded
[t=0.0679351s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 36
[t=0.0679351s, 13452 KB] g=4, 502 evaluated, 69 expanded
[t=0.131881s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 35
[t=0.131881s, 13452 KB] g=7, 1201 evaluated, 128 expanded
[t=577.284s, 551040 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=577.284s, 551040 KB] g=18, 6070117 evaluated, 1135344 expanded
[t=577.352s, 551040 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=577.352s, 551040 KB] g=21, 6070803 evaluated, 1135400 expanded
[t=1004.55s, 966684 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 32
[t=1004.55s, 966684 KB] g=32, 10567246 evaluated, 1950988 expanded
[t=1004.55s, 966684 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=1004.55s, 966684 KB] g=33, 10567262 evaluated, 1950989 expanded
[t=1004.6s, 966684 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 30
[t=1004.6s, 966684 KB] g=36, 10567859 evaluated, 1951026 expanded
[t=1284.24s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=1284.24s, 1440880 KB] g=47, 13574175 evaluated, 2475559 expanded
[t=1284.24s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=1284.24s, 1440880 KB] g=48, 13574191 evaluated, 2475560 expanded
[t=1284.3s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 27
[t=1284.3s, 1440880 KB] g=51, 13574752 evaluated, 2475593 expanded
[t=1408.29s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 26
[t=1408.29s, 1440880 KB] g=60, 14958942 evaluated, 2704539 expanded
[t=1408.29s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 25
[t=1408.29s, 1440880 KB] g=61, 14958962 evaluated, 2704540 expanded
[t=1408.29s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 24
[t=1408.29s, 1440880 KB] g=62, 14958978 evaluated, 2704541 expanded
[t=1408.34s, 1440880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 23
[t=1408.34s, 1440880 KB] g=65, 14959499 evaluated, 2704571 expanded
[t=1485.64s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 22
[t=1485.64s, 1509288 KB] g=72, 15862761 evaluated, 2850638 expanded
[t=1485.65s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 21
[t=1485.65s, 1509288 KB] g=75, 15862847 evaluated, 2850642 expanded
[t=1485.65s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 20
[t=1485.65s, 1509288 KB] g=76, 15862863 evaluated, 2850643 expanded
[t=1485.69s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 19
[t=1485.69s, 1509288 KB] g=79, 15863342 evaluated, 2850670 expanded
[t=1485.69s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 18
[t=1485.69s, 1509288 KB] g=80, 15863361 evaluated, 2850671 expanded
[t=1485.69s, 1509288 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 17
[t=1485.69s, 1509288 KB] g=81, 15863367 evaluated, 2850672 expanded
[t=1557.62s, 1575628 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 16
[t=1557.62s, 1575628 KB] g=102, 16716568 evaluated, 2988269 expanded
[t=1557.62s, 1575628 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=1557.62s, 1575628 KB] g=103, 16716574 evaluated, 2988270 expanded
[t=1610.43s, 1625596 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=1610.43s, 1625596 KB] g=116, 17356194 evaluated, 3094725 expanded
[t=1610.43s, 1625596 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=1610.43s, 1625596 KB] g=117, 17356200 evaluated, 3094726 expanded
[t=1632.51s, 1646388 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=1632.51s, 1646388 KB] g=131, 17624623 evaluated, 3139232 expanded
[t=1641.81s, 1655324 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 11
[t=1641.81s, 1655324 KB] g=144, 17741206 evaluated, 3158239 expanded
[t=1641.81s, 1655324 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 10
[t=1641.81s, 1655324 KB] g=145, 17741212 evaluated, 3158240 expanded
[t=1643.12s, 1656792 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 9
[t=1643.12s, 1656792 KB] g=160, 17758665 evaluated, 3160934 expanded
[t=1643.13s, 1656792 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=1643.13s, 1656792 KB] g=161, 17758667 evaluated, 3160935 expanded
[t=1643.13s, 1656792 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 7
[t=1643.13s, 1656792 KB] g=164, 17758701 evaluated, 3160938 expanded
[t=1643.13s, 1656792 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=1643.13s, 1656792 KB] g=165, 17758706 evaluated, 3160939 expanded
[t=1643.13s, 1656792 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=1643.13s, 1656792 KB] g=166, 17758727 evaluated, 3160940 expanded
[t=1663.04s, 1677620 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=1663.04s, 1677620 KB] g=188, 18032213 evaluated, 3231812 expanded
[t=1663.04s, 1677620 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 3
[t=1663.04s, 1677620 KB] g=189, 18032234 evaluated, 3231813 expanded
[t=1663.04s, 1677620 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 1
[t=1663.04s, 1677620 KB] g=190, 18032248 evaluated, 3231814 expanded
[t=1663.04s, 1677620 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=1663.04s, 1677620 KB] g=191, 18032267 evaluated, 3231815 expanded
[t=1663.04s, 1677620 KB] Solution found!
[t=1663.04s, 1677620 KB] Actual search time: 1663.02s
grasp right shot16 (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail1 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail2 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot10 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail2 shot14 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail2 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail9 ingredient1 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail9 shot15 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail9 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient3 right left (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient4 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail8 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail11 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail7 ingredient5 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot1 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot12 left shaker1 l1 l0 (1)
grasp right shot16 (1)
leave left shaker1 (1)
empty-shot right shot16 ingredient1 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
empty-shaker left shaker1 cocktail7 l0 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail10 ingredient1 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail4 ingredient2 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail3 ingredient1 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient1 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
leave right shot16 (1)
grasp right shaker1 (1)
shake cocktail6 ingredient1 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot6 right shaker1 l2 l1 (1)
grasp left shot3 (1)
leave right shaker1 (1)
fill-shot shot3 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
leave left shot3 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot3 (1)
pour-shot-to-clean-shaker shot3 ingredient5 shaker1 left l0 l1 (1)
leave left shot3 (1)
leave right shaker1 (1)
grasp right shot3 (1)
clean-shot shot3 ingredient5 right left (1)
leave right shot3 (1)
grasp right shot16 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
refill-shot shot16 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail7 ingredient5 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot13 left shaker1 l2 l1 (1)
grasp right shot3 (1)
leave left shaker1 (1)
fill-shot shot3 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
empty-shot right shot3 ingredient5 (1)
leave right shot3 (1)
clean-shaker left right shaker1 (1)
grasp right shot3 (1)
leave left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 (1)
leave left shot16 (1)
refill-shot shot3 ingredient5 right left dispenser5 (1)
pour-shot-to-used-shaker shot3 ingredient5 shaker1 right l1 l2 (1)
clean-shot shot3 ingredient5 right left (1)
grasp left shaker1 (1)
leave right shot3 (1)
shake cocktail5 ingredient2 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot3 left shaker1 l2 l1 (1)
[t=1663.04s, 1677620 KB] Plan length: 189 step(s).
[t=1663.04s, 1677620 KB] Plan cost: 189
[t=1663.04s, 1677620 KB] Expanded 3231816 state(s).
[t=1663.04s, 1677620 KB] Reopened 0 state(s).
[t=1663.04s, 1677620 KB] Evaluated 18032270 state(s).
[t=1663.04s, 1677620 KB] Evaluations: 18032270
[t=1663.04s, 1677620 KB] Generated 28223068 state(s).
[t=1663.04s, 1677620 KB] Dead ends: 391703 state(s).
[t=1663.04s, 1677620 KB] Number of registered states: 18032270
[t=1663.04s, 1677620 KB] Int hash set load factor: 18032270/33554432 = 0.537404
[t=1663.04s, 1677620 KB] Int hash set resizes: 25
[t=1663.04s, 1677620 KB] Search time: 1663.02s
[t=1663.04s, 1677620 KB] Total time: 1663.04s
Solution found.
Peak memory: 1677620 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 189 

Successful plans:
Value: 189
 sas_plan 189 

validate exit code: 0

INFO     Planner time: 1663.60s
