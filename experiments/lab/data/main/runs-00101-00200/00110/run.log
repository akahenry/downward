INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.190s CPU, 0.197s wall-clock]
29701 relevant atoms
8838 auxiliary atoms
38539 final queue length
99451 total queue pushes
Completing instantiation... [0.960s CPU, 0.959s wall-clock]
Instantiating: [1.170s CPU, 1.165s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.016s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.019s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.032s wall-clock]
Translating task: [0.650s CPU, 0.652s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.450s CPU, 0.452s wall-clock]
Reordering and filtering variables...
36 of 36 variables necessary.
18 of 36 mutex groups necessary.
27540 of 27540 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.080s CPU, 0.075s wall-clock]
Translator variables: 36
Translator derived variables: 0
Translator facts: 360
Translator goal facts: 36
Translator mutex groups: 18
Translator total mutex groups size: 324
Translator operators: 27540
Translator axioms: 0
Translator task size: 141210
Translator peak memory: 135664 KB
Writing output... [0.120s CPU, 0.115s wall-clock]
Done! [2.530s CPU, 2.527s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.123944s, 18672 KB] done reading input!
[t=0.123944s, 18936 KB] Generating patterns using: systematic pattern collection generator
[t=0.123944s, 18936 KB] building causal graph...done! [t=0.00799315s]
[t=0.131937s, 19076 KB] Found 513 SGA patterns.
[t=0.131937s, 19076 KB] Found 513 interesting patterns.
[t=0.135937s, 19076 KB] systematic pattern collection generator number of patterns: 513
[t=0.135937s, 19076 KB] systematic pattern collection generator total PDB size: 61596
[t=0.135937s, 19076 KB] systematic pattern collection generator computation time: 0.011993s
[t=0.135937s, 19076 KB] Computing PDBs for pattern collection...
[t=2.03477s, 20040 KB] Done computing PDBs for pattern collection: 1.89884s
[t=2.29061s, 45876 KB] Building successor generator...done!
[t=2.29857s, 48192 KB] peak memory difference for successor generator creation: 2316 KB
[t=2.29857s, 48192 KB] time for successor generation creation: 0.00398705s
[t=2.29857s, 48192 KB] Variables: 36
[t=2.29857s, 48192 KB] FactPairs: 360
[t=2.29857s, 48192 KB] Bytes per state: 16
[t=2.29857s, 48192 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=2.29857s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 102
[t=2.29857s, 48192 KB] g=0, 1 evaluated, 0 expanded
[t=2.29857s, 48192 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 102
[t=2.29857s, 48192 KB] pruning method: none
[t=2.29857s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 99
[t=2.29857s, 48192 KB] g=3, 12 evaluated, 1 expanded
[t=2.29857s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 96
[t=2.29857s, 48192 KB] g=6, 102 evaluated, 2 expanded
[t=2.29857s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 93
[t=2.29857s, 48192 KB] g=6, 116 evaluated, 2 expanded
[t=2.29857s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 90
[t=2.29857s, 48192 KB] g=9, 201 evaluated, 3 expanded
[t=2.30257s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 87
[t=2.30257s, 48192 KB] g=12, 290 evaluated, 4 expanded
[t=2.30257s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 84
[t=2.30257s, 48192 KB] g=15, 378 evaluated, 5 expanded
[t=2.30257s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 81
[t=2.30257s, 48192 KB] g=16, 465 evaluated, 6 expanded
[t=2.30658s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 78
[t=2.30658s, 48192 KB] g=19, 551 evaluated, 7 expanded
[t=2.30658s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 75
[t=2.30658s, 48192 KB] g=20, 638 evaluated, 8 expanded
[t=2.30658s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 72
[t=2.30658s, 48192 KB] g=23, 722 evaluated, 9 expanded
[t=2.31057s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 69
[t=2.31057s, 48192 KB] g=24, 809 evaluated, 10 expanded
[t=2.31057s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 66
[t=2.31057s, 48192 KB] g=27, 891 evaluated, 11 expanded
[t=2.31057s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 63
[t=2.31057s, 48192 KB] g=28, 978 evaluated, 12 expanded
[t=2.31457s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 60
[t=2.31457s, 48192 KB] g=31, 1058 evaluated, 13 expanded
[t=2.31457s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 57
[t=2.31457s, 48192 KB] g=32, 1145 evaluated, 14 expanded
[t=2.31457s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 54
[t=2.31457s, 48192 KB] g=35, 1223 evaluated, 15 expanded
[t=2.31457s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 51
[t=2.31457s, 48192 KB] g=36, 1310 evaluated, 16 expanded
[t=2.37854s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 48
[t=2.37854s, 48192 KB] g=39, 5920 evaluated, 98 expanded
[t=2.38253s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 45
[t=2.38253s, 48192 KB] g=40, 6067 evaluated, 100 expanded
[t=2.4425s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 42
[t=2.4425s, 48192 KB] g=45, 10386 evaluated, 172 expanded
[t=2.4425s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 39
[t=2.4425s, 48192 KB] g=46, 10534 evaluated, 174 expanded
[t=2.49449s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 36
[t=2.49449s, 48192 KB] g=51, 14475 evaluated, 236 expanded
[t=2.49849s, 48192 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 33
[t=2.49849s, 48192 KB] g=52, 14624 evaluated, 238 expanded
[t=2.54247s, 48332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 30
[t=2.54247s, 48332 KB] g=57, 18115 evaluated, 290 expanded
[t=2.54647s, 48332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 27
[t=2.54647s, 48332 KB] g=58, 18265 evaluated, 292 expanded
[t=2.58645s, 48332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=2.58645s, 48332 KB] g=63, 21234 evaluated, 334 expanded
[t=2.58645s, 48332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=2.58645s, 48332 KB] g=64, 21385 evaluated, 336 expanded
[t=2.61843s, 48464 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=2.61843s, 48464 KB] g=69, 23760 evaluated, 368 expanded
[t=2.61843s, 48464 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=2.61843s, 48464 KB] g=70, 23912 evaluated, 370 expanded
[t=2.64242s, 48600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=2.64242s, 48600 KB] g=75, 25621 evaluated, 392 expanded
[t=2.64242s, 48600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=2.64242s, 48600 KB] g=76, 25774 evaluated, 394 expanded
[t=2.65442s, 48600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=2.65442s, 48600 KB] g=81, 26745 evaluated, 406 expanded
[t=2.66241s, 48600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=2.66241s, 48600 KB] g=88, 27221 evaluated, 412 expanded
[t=2.66241s, 48600 KB] Solution found!
[t=2.66241s, 48600 KB] Actual search time: 0.36384s
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (3)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
analyze-2 seg-in-4 seg-out-1 car-in-4 car-in-3 (3)
rotate-2 seg-in-4 seg-out-1 car-in-3 car-in-4 (1)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-in-3 (3)
rotate-2 seg-in-5 seg-out-1 car-in-3 car-in-5 (1)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-3 (3)
rotate-2 seg-in-6 seg-out-1 car-in-3 car-in-6 (1)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-3 (3)
rotate-2 seg-in-7 seg-out-1 car-in-3 car-in-7 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-3 (3)
rotate-2 seg-in-8 seg-out-1 car-in-3 car-in-8 (1)
analyze-2 seg-in-9 seg-out-1 car-in-9 car-in-3 (3)
rotate-2 seg-in-9 seg-out-1 car-in-3 car-in-9 (1)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-2 (1)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-3 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (1)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-4 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-5 (1)
rotate-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (1)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-6 (1)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (1)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-1 car-out-7 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-7 (1)
rotate-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (1)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-8 (1)
rotate-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (1)
rotate-2 seg-in-1 seg-out-9 car-in-1 car-out-9 (1)
analyze-2 seg-in-1 seg-out-1 car-out-9 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-9 (1)
rotate-2 seg-in-1 seg-out-9 car-out-9 car-in-1 (1)
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
[t=2.66241s, 48600 KB] Plan length: 50 step(s).
[t=2.66241s, 48600 KB] Plan cost: 86
[t=2.66241s, 48600 KB] Expanded 413 state(s).
[t=2.66241s, 48600 KB] Reopened 0 state(s).
[t=2.66241s, 48600 KB] Evaluated 27292 state(s).
[t=2.66241s, 48600 KB] Evaluations: 27292
[t=2.66241s, 48600 KB] Generated 37080 state(s).
[t=2.66241s, 48600 KB] Dead ends: 0 state(s).
[t=2.66241s, 48600 KB] Number of registered states: 27292
[t=2.66241s, 48600 KB] Int hash set load factor: 27292/32768 = 0.832886
[t=2.66241s, 48600 KB] Int hash set resizes: 15
[t=2.66241s, 48600 KB] Search time: 0.36384s
[t=2.66241s, 48600 KB] Total time: 2.66241s
Solution found.
Peak memory: 48600 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 86 

Successful plans:
Value: 86
 sas_plan 86 

validate exit code: 0

INFO     Planner time: 5.27s
