INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.037s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.100s CPU, 0.100s wall-clock]
Instantiating: [0.150s CPU, 0.144s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.013s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.017s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.006s wall-clock]
Translating task: [0.120s CPU, 0.113s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.070s CPU, 0.068s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.023s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45716 KB
Writing output... [0.010s CPU, 0.015s wall-clock]
Done! [0.390s CPU, 0.388s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.011982s, 11556 KB] done reading input!
[t=0.011982s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.011982s, 11820 KB] building causal graph...done! [t=0.00399467s]
[t=0.0159767s, 12752 KB] Found 116 SGA patterns.
[t=0.0159767s, 12752 KB] Found 116 interesting patterns.
[t=0.0159767s, 12752 KB] systematic pattern collection generator number of patterns: 116
[t=0.0159767s, 12752 KB] systematic pattern collection generator total PDB size: 1304
[t=0.0159767s, 12752 KB] systematic pattern collection generator computation time: 0.00399467s
[t=0.0159767s, 12752 KB] Computing PDBs for pattern collection...
[t=0.0559638s, 12752 KB] Done computing PDBs for pattern collection: 0.0399871s
[t=0.0639592s, 12752 KB] Building successor generator...done!
[t=0.0639592s, 12752 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0639592s, 12752 KB] time for successor generation creation: 0s
[t=0.0639592s, 12752 KB] Variables: 353
[t=0.0639592s, 12752 KB] FactPairs: 737
[t=0.0639592s, 12752 KB] Bytes per state: 48
[t=0.0639592s, 12752 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0639592s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 27
[t=0.0639592s, 12752 KB] g=0, 1 evaluated, 0 expanded
[t=0.0639592s, 12752 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 27
[t=0.0639592s, 12752 KB] pruning method: none
[t=0.0639592s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0639592s, 12752 KB] g=11, 233 evaluated, 14 expanded
[t=0.0679627s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.0679627s, 12752 KB] g=24, 672 evaluated, 160 expanded
[t=0.0839524s, 13024 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0839524s, 13024 KB] g=39, 4110 evaluated, 1332 expanded
[t=0.0839524s, 13024 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.0839524s, 13024 KB] g=40, 4132 evaluated, 1333 expanded
[t=0.323878s, 18748 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.323878s, 18748 KB] g=74, 74269 evaluated, 21629 expanded
[t=0.323878s, 18748 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.323878s, 18748 KB] g=75, 74290 evaluated, 21630 expanded
[t=0.323878s, 18748 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.323878s, 18748 KB] g=76, 74322 evaluated, 21631 expanded
[t=0.39186s, 20076 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.39186s, 20076 KB] g=110, 94072 evaluated, 28302 expanded
[t=0.39186s, 20076 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.39186s, 20076 KB] g=111, 94091 evaluated, 28303 expanded
[t=0.39186s, 20076 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.39186s, 20076 KB] g=112, 94117 evaluated, 28304 expanded
[t=0.471842s, 23460 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.471842s, 23460 KB] g=146, 116322 evaluated, 35619 expanded
[t=0.471842s, 23460 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.471842s, 23460 KB] g=147, 116344 evaluated, 35620 expanded
[t=0.735737s, 27364 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.735737s, 27364 KB] g=181, 183668 evaluated, 55916 expanded
[t=0.735737s, 27364 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.735737s, 27364 KB] g=182, 183693 evaluated, 55917 expanded
[t=1.23132s, 38740 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=1.23132s, 38740 KB] g=216, 318044 evaluated, 96218 expanded
[t=1.23132s, 38740 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=1.23132s, 38740 KB] g=217, 318062 evaluated, 96219 expanded
[t=1.46313s, 43400 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=1.46313s, 43400 KB] g=251, 385283 evaluated, 116837 expanded
[t=1.46313s, 43400 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=1.46313s, 43400 KB] g=252, 385305 evaluated, 116838 expanded
[t=2.09463s, 60132 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=2.09463s, 60132 KB] g=286, 565843 evaluated, 171118 expanded
[t=2.09463s, 60132 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=2.09463s, 60132 KB] g=287, 565865 evaluated, 171119 expanded
[t=2.35443s, 65324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=2.35443s, 65324 KB] g=321, 640545 evaluated, 194750 expanded
[t=2.35443s, 65324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=2.35443s, 65324 KB] g=322, 640566 evaluated, 194751 expanded
[t=2.92586s, 76352 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=2.92586s, 76352 KB] g=356, 800342 evaluated, 249783 expanded
[t=2.92586s, 76352 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=2.92985s, 76352 KB] g=357, 800361 evaluated, 249784 expanded
[t=3.4654s, 101260 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=3.4654s, 101260 KB] g=391, 946368 evaluated, 300129 expanded
[t=3.4654s, 101260 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=3.4654s, 101260 KB] g=392, 946385 evaluated, 300130 expanded
[t=3.4654s, 101260 KB] Solution found!
[t=3.4654s, 101260 KB] Actual search time: 3.40144s
grasp left shot14 (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shot15 (1)
leave left shot14 (1)
fill-shot shot15 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail6 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail4 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot12 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail4 shot6 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail4 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot13 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail7 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail10 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot7 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail2 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot8 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail9 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot10 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail11 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot5 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail1 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot9 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail3 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot3 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail5 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 (1)
[t=3.4654s, 101260 KB] Plan length: 185 step(s).
[t=3.4654s, 101260 KB] Plan cost: 392
[t=3.4654s, 101260 KB] Expanded 300131 state(s).
[t=3.4654s, 101260 KB] Reopened 0 state(s).
[t=3.4654s, 101260 KB] Evaluated 946388 state(s).
[t=3.4654s, 101260 KB] Evaluations: 946388
[t=3.4654s, 101260 KB] Generated 1937373 state(s).
[t=3.4654s, 101260 KB] Dead ends: 0 state(s).
[t=3.4654s, 101260 KB] Number of registered states: 946388
[t=3.4654s, 101260 KB] Int hash set load factor: 946388/2097152 = 0.451273
[t=3.4654s, 101260 KB] Int hash set resizes: 21
[t=3.4654s, 101260 KB] Search time: 3.40144s
[t=3.4654s, 101260 KB] Total time: 3.4654s
Solution found.
Peak memory: 101260 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 392 

Successful plans:
Value: 392
 sas_plan 392 

validate exit code: 0

INFO     Planner time: 3.92s
