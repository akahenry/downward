INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.031s wall-clock]
3094 relevant atoms
3221 auxiliary atoms
6315 final queue length
10878 total queue pushes
Completing instantiation... [0.060s CPU, 0.070s wall-clock]
Instantiating: [0.100s CPU, 0.107s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.070s CPU, 0.076s wall-clock]
3672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.034s wall-clock]
Reordering and filtering variables...
331 of 331 variables necessary.
15 of 18 mutex groups necessary.
2194 of 2194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.036s wall-clock]
Translator variables: 331
Translator derived variables: 0
Translator facts: 691
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 45
Translator operators: 2194
Translator axioms: 0
Translator task size: 21018
Translator peak memory: 44796 KB
Writing output... [0.020s CPU, 0.016s wall-clock]
Done! [0.280s CPU, 0.288s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0112301s, 11412 KB] done reading input!
[t=0.0112301s, 11808 KB] Generating patterns using: systematic pattern collection generator
[t=0.0112301s, 11808 KB] building causal graph...done! [t=0.00400966s]
[t=0.0152397s, 12600 KB] Found 112 SGA patterns.
[t=0.0152397s, 12600 KB] Found 112 interesting patterns.
[t=0.0152397s, 12600 KB] systematic pattern collection generator number of patterns: 112
[t=0.0152397s, 12600 KB] systematic pattern collection generator total PDB size: 1176
[t=0.0152397s, 12600 KB] systematic pattern collection generator computation time: 0.00400966s
[t=0.0152397s, 12600 KB] Computing PDBs for pattern collection...
[t=0.0551827s, 12600 KB] Done computing PDBs for pattern collection: 0.0399429s
[t=0.0591834s, 12600 KB] Building successor generator...done!
[t=0.0591834s, 12600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0591834s, 12600 KB] time for successor generation creation: 0s
[t=0.0591834s, 12600 KB] Variables: 331
[t=0.0591834s, 12600 KB] FactPairs: 691
[t=0.0591834s, 12600 KB] Bytes per state: 44
[t=0.0591834s, 12600 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0591834s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 26
[t=0.0591834s, 12600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0591834s, 12600 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 26
[t=0.0591834s, 12600 KB] pruning method: none
[t=0.0631892s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.0631892s, 12600 KB] g=11, 164 evaluated, 10 expanded
[t=0.0631892s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.0631892s, 12600 KB] g=23, 321 evaluated, 31 expanded
[t=0.123075s, 13968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.123075s, 13968 KB] g=51, 18056 evaluated, 7103 expanded
[t=0.123075s, 13968 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.123075s, 13968 KB] g=52, 18078 evaluated, 7104 expanded
[t=0.322867s, 18348 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.322867s, 18348 KB] g=82, 74876 evaluated, 28097 expanded
[t=0.322867s, 18348 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.322867s, 18348 KB] g=83, 74899 evaluated, 28098 expanded
[t=0.530652s, 23112 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.530652s, 23112 KB] g=113, 132867 evaluated, 49361 expanded
[t=0.530652s, 23112 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.530652s, 23112 KB] g=114, 132893 evaluated, 49362 expanded
[t=0.726484s, 26980 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.726484s, 26980 KB] g=144, 190466 evaluated, 70355 expanded
[t=0.730488s, 26980 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.730488s, 26980 KB] g=145, 190484 evaluated, 70356 expanded
[t=0.942274s, 32900 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.942274s, 32900 KB] g=175, 250069 evaluated, 91889 expanded
[t=0.942274s, 32900 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.942274s, 32900 KB] g=176, 250090 evaluated, 91890 expanded
[t=1.15812s, 37032 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=1.15812s, 37032 KB] g=206, 314863 evaluated, 115053 expanded
[t=1.15812s, 37032 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=1.15812s, 37032 KB] g=207, 314884 evaluated, 115054 expanded
[t=1.44998s, 43044 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=1.44998s, 43044 KB] g=238, 405227 evaluated, 147950 expanded
[t=1.44998s, 43044 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=1.44998s, 43044 KB] g=239, 405247 evaluated, 147951 expanded
[t=1.67784s, 52844 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=1.67784s, 52844 KB] g=269, 471165 evaluated, 171950 expanded
[t=1.67784s, 52844 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=1.67784s, 52844 KB] g=270, 471183 evaluated, 171951 expanded
[t=2.01767s, 57944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=2.01767s, 57944 KB] g=300, 572097 evaluated, 208365 expanded
[t=2.01767s, 57944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=2.01767s, 57944 KB] g=301, 572115 evaluated, 208366 expanded
[t=2.36552s, 65144 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=2.36552s, 65144 KB] g=331, 682020 evaluated, 247701 expanded
[t=2.36552s, 65144 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=2.36552s, 65144 KB] g=332, 682037 evaluated, 247702 expanded
[t=2.59742s, 69952 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=2.59742s, 69952 KB] g=362, 756221 evaluated, 274352 expanded
[t=2.59742s, 70084 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=2.59742s, 70084 KB] g=363, 756238 evaluated, 274353 expanded
[t=2.59742s, 70084 KB] Solution found!
[t=2.59742s, 70084 KB] Actual search time: 2.53824s
grasp left shot12 (1)
fill-shot shot12 ingredient2 left right dispenser2 (10)
grasp right shot13 (1)
leave left shot12 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shot14 (1)
leave right shot13 (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail10 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot3 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail3 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot6 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail2 ingredient3 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient3 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail6 ingredient3 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot10 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail9 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail1 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot4 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail1 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail8 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot7 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient3 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail5 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot1 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail11 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot11 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail4 ingredient2 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot2 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail7 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot8 right shaker1 l2 l1 (1)
[t=2.59742s, 70084 KB] Plan length: 147 step(s).
[t=2.59742s, 70084 KB] Plan cost: 363
[t=2.59742s, 70084 KB] Expanded 274354 state(s).
[t=2.59742s, 70084 KB] Reopened 0 state(s).
[t=2.59742s, 70084 KB] Evaluated 756238 state(s).
[t=2.59742s, 70084 KB] Evaluations: 756238
[t=2.59742s, 70084 KB] Generated 1576612 state(s).
[t=2.59742s, 70084 KB] Dead ends: 0 state(s).
[t=2.59742s, 70084 KB] Number of registered states: 756238
[t=2.59742s, 70084 KB] Int hash set load factor: 756238/1048576 = 0.721205
[t=2.59742s, 70084 KB] Int hash set resizes: 20
[t=2.59742s, 70084 KB] Search time: 2.53824s
[t=2.59742s, 70084 KB] Total time: 2.59742s
Solution found.
Peak memory: 70084 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 363 

Successful plans:
Value: 363
 sas_plan 363 

validate exit code: 0

INFO     Planner time: 2.95s
