INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.005s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 350 rules.
Computing model... [0.010s CPU, 0.020s wall-clock]
1802 relevant atoms
2342 auxiliary atoms
4144 final queue length
6664 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.050s CPU, 0.056s wall-clock]
Computing fact groups...
Finding invariants...
20 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
306 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.034s wall-clock]
841 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
106 of 315 variables necessary.
0 of 10 mutex groups necessary.
1051 of 1051 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 106
Translator derived variables: 0
Translator facts: 402
Translator goal facts: 60
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1051
Translator axioms: 0
Translator task size: 7378
Translator peak memory: 37760 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.140s CPU, 0.138s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00399999s, 10856 KB] done reading input!
[t=0.00399999s, 11252 KB] Generating patterns using: systematic pattern collection generator
[t=0.00399999s, 11252 KB] building causal graph...done! [t=0s]
[t=0.00399999s, 11252 KB] Found 360 SGA patterns.
[t=0.00399999s, 11252 KB] Found 360 interesting patterns.
[t=0.00399999s, 11252 KB] systematic pattern collection generator number of patterns: 360
[t=0.00399999s, 11252 KB] systematic pattern collection generator total PDB size: 3942
[t=0.00399999s, 11252 KB] systematic pattern collection generator computation time: 0s
[t=0.00399999s, 11252 KB] Computing PDBs for pattern collection...
[t=0.0479707s, 11252 KB] Done computing PDBs for pattern collection: 0.0439707s
[t=0.0559668s, 11384 KB] Building successor generator...done!
[t=0.0559668s, 11516 KB] peak memory difference for successor generator creation: 132 KB
[t=0.0559668s, 11516 KB] time for successor generation creation: 0s
[t=0.0559668s, 11516 KB] Variables: 106
[t=0.0559668s, 11516 KB] FactPairs: 402
[t=0.0559668s, 11516 KB] Bytes per state: 20
[t=0.0559668s, 11516 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2024022
[t=0.0559668s, 11516 KB] g=0, 1 evaluated, 0 expanded
[t=0.0559668s, 11516 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2024022
[t=0.0559668s, 11516 KB] pruning method: none
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2023123
[t=0.0559668s, 11516 KB] g=899, 3 evaluated, 2 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2014952
[t=0.0559668s, 11516 KB] g=3588, 13 evaluated, 3 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2003700
[t=0.0559668s, 11516 KB] g=14478, 25 evaluated, 4 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2002801
[t=0.0559668s, 11516 KB] g=15377, 37 evaluated, 5 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1994630
[t=0.0559668s, 11516 KB] g=18066, 48 evaluated, 6 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1983378
[t=0.0559668s, 11516 KB] g=28956, 61 evaluated, 7 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1982479
[t=0.0559668s, 11516 KB] g=29855, 77 evaluated, 8 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1974308
[t=0.0559668s, 11516 KB] g=32544, 86 evaluated, 9 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1963056
[t=0.0559668s, 11516 KB] g=43434, 100 evaluated, 10 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1962157
[t=0.0559668s, 11516 KB] g=44333, 118 evaluated, 11 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1951251
[t=0.0559668s, 11516 KB] g=58827, 141 evaluated, 13 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1948953
[t=0.0559668s, 11516 KB] g=62415, 169 evaluated, 15 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1946655
[t=0.0559668s, 11516 KB] g=66003, 213 evaluated, 18 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1944357
[t=0.0559668s, 11516 KB] g=69591, 260 evaluated, 21 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1942059
[t=0.0559668s, 11516 KB] g=73179, 310 evaluated, 24 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1939761
[t=0.0559668s, 11516 KB] g=76767, 363 evaluated, 27 expanded
[t=0.0559668s, 11516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1937463
[t=0.0559668s, 11516 KB] g=80355, 419 evaluated, 30 expanded
[t=0.53564s, 17384 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1887104
[t=0.53564s, 17384 KB] g=287213, 114764 evaluated, 8194 expanded
[t=0.53564s, 17384 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1755184
[t=0.53564s, 17384 KB] g=405459, 114852 evaluated, 8200 expanded
[t=0.53564s, 17384 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1752886
[t=0.53564s, 17384 KB] g=409047, 114880 evaluated, 8202 expanded
[t=0.53564s, 17516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1750588
[t=0.53564s, 17516 KB] g=412635, 114927 evaluated, 8205 expanded
[t=0.539644s, 17516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1748290
[t=0.539644s, 17516 KB] g=416223, 114977 evaluated, 8208 expanded
[t=0.539644s, 17516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1745992
[t=0.539644s, 17516 KB] g=419811, 115030 evaluated, 8211 expanded
[t=0.539644s, 17516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1743694
[t=0.539644s, 17516 KB] g=423399, 115086 evaluated, 8214 expanded
[t=0.539644s, 17516 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1741396
[t=0.539644s, 17516 KB] g=426987, 115145 evaluated, 8217 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1660914
[t=0.81147s, 21208 KB] g=656288, 176292 evaluated, 12297 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1517742
[t=0.81147s, 21208 KB] g=735207, 176313 evaluated, 12298 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1513212
[t=0.81147s, 21208 KB] g=738458, 176333 evaluated, 12299 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1511713
[t=0.81147s, 21208 KB] g=739957, 176353 evaluated, 12300 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1431231
[t=0.81147s, 21208 KB] g=969258, 176391 evaluated, 12302 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1288059
[t=0.81147s, 21208 KB] g=1048177, 176409 evaluated, 12303 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1283529
[t=0.81147s, 21208 KB] g=1051428, 176427 evaluated, 12304 expanded
[t=0.81147s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1282030
[t=0.815461s, 21208 KB] g=1052927, 176445 evaluated, 12305 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1201548
[t=0.815461s, 21208 KB] g=1282228, 176479 evaluated, 12307 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1058376
[t=0.815461s, 21208 KB] g=1361147, 176495 evaluated, 12308 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1053846
[t=0.815461s, 21208 KB] g=1364398, 176511 evaluated, 12309 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 934074
[t=0.815461s, 21208 KB] g=1527661, 176663 evaluated, 12320 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 922822
[t=0.815461s, 21208 KB] g=1538868, 176675 evaluated, 12321 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 918292
[t=0.815461s, 21208 KB] g=1542119, 176689 evaluated, 12322 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 916793
[t=0.815461s, 21208 KB] g=1543618, 176703 evaluated, 12323 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 797021
[t=0.815461s, 21208 KB] g=1706881, 176937 evaluated, 12343 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 785769
[t=0.815461s, 21208 KB] g=1718088, 176947 evaluated, 12344 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 781239
[t=0.815461s, 21208 KB] g=1721339, 176959 evaluated, 12345 expanded
[t=0.815461s, 21208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 779740
[t=0.815461s, 21208 KB] g=1722838, 176971 evaluated, 12346 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 659968
[t=0.819464s, 21340 KB] g=1886101, 177165 evaluated, 12366 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 648716
[t=0.819464s, 21340 KB] g=1897308, 177173 evaluated, 12367 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 644186
[t=0.819464s, 21340 KB] g=1900559, 177183 evaluated, 12368 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 642687
[t=0.819464s, 21340 KB] g=1902058, 177193 evaluated, 12369 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 641188
[t=0.819464s, 21340 KB] g=1903557, 177202 evaluated, 12370 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 521416
[t=0.819464s, 21340 KB] g=2066820, 177415 evaluated, 12398 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 510164
[t=0.819464s, 21340 KB] g=2078027, 177421 evaluated, 12399 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 505634
[t=0.819464s, 21340 KB] g=2081278, 177429 evaluated, 12400 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 504135
[t=0.819464s, 21340 KB] g=2082777, 177437 evaluated, 12401 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 384363
[t=0.819464s, 21340 KB] g=2246040, 177551 evaluated, 12421 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 373111
[t=0.819464s, 21340 KB] g=2257247, 177557 evaluated, 12422 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 368581
[t=0.819464s, 21340 KB] g=2260498, 177561 evaluated, 12423 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 248809
[t=0.819464s, 21340 KB] g=2423761, 177609 evaluated, 12435 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 237557
[t=0.819464s, 21340 KB] g=2434968, 177613 evaluated, 12436 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 233027
[t=0.819464s, 21340 KB] g=2438219, 177615 evaluated, 12437 expanded
[t=0.819464s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 164004
[t=0.823456s, 21340 KB] g=2667520, 177656 evaluated, 12456 expanded
[t=0.823456s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9027
[t=0.823456s, 21340 KB] g=2746439, 177658 evaluated, 12457 expanded
[t=0.823456s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4497
[t=0.823456s, 21340 KB] g=2749690, 177660 evaluated, 12458 expanded
[t=0.823456s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2998
[t=0.823456s, 21340 KB] g=2751189, 177662 evaluated, 12459 expanded
[t=0.823456s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1499
[t=0.823456s, 21340 KB] g=2752688, 177663 evaluated, 12460 expanded
[t=0.823456s, 21340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=0.823456s, 21340 KB] g=2754187, 177664 evaluated, 12461 expanded
[t=0.823456s, 21340 KB] Solution found!
[t=0.823456s, 21340 KB] Actual search time: 0.767489s
initialize  (0)
fe1-feedmsi-letter sheet1 (500)
im1-movelower-letter sheet1 (3088)
lc1-fmove-letter sheet1 (10890)
fe1-feedmsi-letter sheet2 (500)
im1-movelower-letter sheet2 (3088)
lc1-fmove-letter sheet2 (10890)
fe1-feedmsi-letter sheet6 (500)
im1-movelower-letter sheet6 (3088)
lc1-fmove-letter sheet6 (10890)
fe1-feedmsi-letter sheet8 (500)
im1-movelower-letter sheet8 (3088)
lc1-fmove-letter sheet8 (10890)
lc2-divert-letter sheet8 back front (17452)
lre-simplex-letter sheet8 front image-8 (211849)
lc2-mergeinvert-letter sheet8 (78919)
om-lowerreturn-letter sheet8 (3568)
rh2-returnmove-letter sheet8 (10869)
rh1-returnmove-letter sheet8 (10869)
im1-looplower-letter sheet8 (3131)
lc1-fmove-letter sheet8 (10890)
fe1-feedmsi-letter sheet3 (500)
im1-movelower-letter sheet3 (3088)
fe1-feedmsi-letter sheet4 (500)
im1-movelower-letter sheet4 (3088)
fe1-feedmsi-letter sheet5 (500)
im1-movelower-letter sheet5 (3088)
fe1-feedmsi-letter sheet7 (500)
im1-movelower-letter sheet7 (3088)
fe1-feedmsi-letter sheet9 (500)
im1-movelower-letter sheet9 (3088)
fe1-feedmsi-letter sheet10 (500)
im1-movelower-letter sheet10 (3088)
lc2-divert-letter sheet1 back front (17452)
lre-simplex-letter sheet1 front image-1 (211849)
lc2-mergeinvert-letter sheet1 (78919)
om-lowerout-letter sheet1 (3251)
sys-stack-letter sheet1 dummy-sheet (1499)
lc2-divert-letter sheet2 back front (17452)
lre-simplex-letter sheet2 front image-2 (211849)
lc2-mergeinvert-letter sheet2 (78919)
om-lowerout-letter sheet2 (3251)
sys-stack-letter sheet2 sheet1 (1499)
lc2-divert-letter sheet6 back front (17452)
lre-simplex-letter sheet6 front image-6 (211849)
lc2-mergeinvert-letter sheet6 (78919)
om-lowerout-letter sheet6 (3251)
lc1-divert-letter sheet3 back front (11805)
lbe-simplex-letter sheet3 front image-3 (123749)
lc1-merge-letter sheet3 (27709)
lc2-fmove-letter sheet3 (11207)
om-lowerout-letter sheet3 (3251)
sys-stack-letter sheet3 sheet2 (1499)
lc1-divert-letter sheet4 back front (11805)
lbe-simplex-letter sheet4 front image-4 (123749)
lc1-merge-letter sheet4 (27709)
lc2-fmove-letter sheet4 (11207)
om-lowerout-letter sheet4 (3251)
sys-stack-letter sheet4 sheet3 (1499)
lc1-divert-letter sheet5 back front (11805)
lbe-simplex-letter sheet5 front image-5 (123749)
lc1-merge-letter sheet5 (27709)
lc2-fmove-letter sheet5 (11207)
om-lowerout-letter sheet5 (3251)
sys-stack-letter sheet5 sheet4 (1499)
sys-stack-letter sheet6 sheet5 (1499)
lc1-divert-letter sheet7 back front (11805)
lbe-simplex-letter sheet7 front image-7 (123749)
lc1-merge-letter sheet7 (27709)
lc2-fmove-letter sheet7 (11207)
om-lowerout-letter sheet7 (3251)
sys-stack-letter sheet7 sheet6 (1499)
lc1-divert-letter sheet9 back front (11805)
lbe-simplex-letter sheet9 front image-9 (123749)
lc1-merge-letter sheet9 (27709)
lc2-fmove-letter sheet9 (11207)
om-lowerout-letter sheet9 (3251)
lc1-divert-letter sheet10 back front (11805)
lbe-simplex-letter sheet10 front image-10 (123749)
lc1-merge-letter sheet10 (27709)
lc2-fmove-letter sheet10 (11207)
om-lowerout-letter sheet10 (3251)
lc2-divert-letter sheet8 front back (17452)
lre-simplex-letter sheet8 back image-8b (211849)
lc2-merge-letter sheet8 back front (78919)
om-lowerout-letter sheet8 (3251)
sys-stack-letter sheet8 sheet7 (1499)
sys-stack-letter sheet9 sheet8 (1499)
sys-stack-letter sheet10 sheet9 (1499)
[t=0.823456s, 21340 KB] Plan length: 89 step(s).
[t=0.823456s, 21340 KB] Plan cost: 2754187
[t=0.823456s, 21340 KB] Expanded 12462 state(s).
[t=0.823456s, 21340 KB] Reopened 0 state(s).
[t=0.823456s, 21340 KB] Evaluated 177664 state(s).
[t=0.823456s, 21340 KB] Evaluations: 177664
[t=0.823456s, 21340 KB] Generated 280142 state(s).
[t=0.823456s, 21340 KB] Dead ends: 8208 state(s).
[t=0.823456s, 21340 KB] Number of registered states: 177664
[t=0.823456s, 21340 KB] Int hash set load factor: 177664/262144 = 0.677734
[t=0.823456s, 21340 KB] Int hash set resizes: 18
[t=0.823456s, 21340 KB] Search time: 0.767489s
[t=0.823456s, 21340 KB] Total time: 0.823456s
Solution found.
Peak memory: 21340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 2754187 

Successful plans:
Value: 2754187
 sas_plan 2754187 

validate exit code: 0

INFO     Planner time: 1.01s
