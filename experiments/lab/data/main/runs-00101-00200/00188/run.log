INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.038s wall-clock]
3725 relevant atoms
3726 auxiliary atoms
7451 final queue length
13104 total queue pushes
Completing instantiation... [0.070s CPU, 0.078s wall-clock]
Instantiating: [0.120s CPU, 0.123s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.020s CPU, 0.011s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
381 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.090s CPU, 0.092s wall-clock]
4430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.063s wall-clock]
Reordering and filtering variables...
384 of 384 variables necessary.
16 of 19 mutex groups necessary.
2644 of 2644 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.028s wall-clock]
Translator variables: 384
Translator derived variables: 0
Translator facts: 799
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2644
Translator axioms: 0
Translator task size: 25367
Translator peak memory: 47636 KB
Writing output... [0.020s CPU, 0.018s wall-clock]
Done! [0.350s CPU, 0.347s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0114076s, 11584 KB] done reading input!
[t=0.0154145s, 11980 KB] Generating patterns using: systematic pattern collection generator
[t=0.0154145s, 11980 KB] building causal graph...done! [t=0s]
[t=0.0194013s, 13040 KB] Found 124 SGA patterns.
[t=0.0194013s, 13040 KB] Found 124 interesting patterns.
[t=0.0194013s, 13040 KB] systematic pattern collection generator number of patterns: 124
[t=0.0194013s, 13040 KB] systematic pattern collection generator total PDB size: 1336
[t=0.0194013s, 13040 KB] systematic pattern collection generator computation time: 0.00398678s
[t=0.0194013s, 13040 KB] Computing PDBs for pattern collection...
[t=0.0673699s, 13040 KB] Done computing PDBs for pattern collection: 0.0479686s
[t=0.0753562s, 13040 KB] Building successor generator...done!
[t=0.0793625s, 13040 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0793625s, 13040 KB] time for successor generation creation: 0.00400631s
[t=0.0793625s, 13040 KB] Variables: 384
[t=0.0793625s, 13040 KB] FactPairs: 799
[t=0.0793625s, 13040 KB] Bytes per state: 52
[t=0.0793625s, 13040 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0793625s, 13040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0793625s, 13040 KB] g=0, 1 evaluated, 0 expanded
[t=0.0793625s, 13040 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0793625s, 13040 KB] pruning method: none
[t=0.0793625s, 13040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.0793625s, 13040 KB] g=2, 181 evaluated, 10 expanded
[t=0.0793625s, 13040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0793625s, 13040 KB] g=5, 353 evaluated, 32 expanded
[t=0.0793625s, 13040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.0793625s, 13040 KB] g=8, 538 evaluated, 55 expanded
[t=0.203189s, 15716 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.203189s, 15716 KB] g=18, 30527 evaluated, 10494 expanded
[t=0.203189s, 15716 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.203189s, 15716 KB] g=19, 30556 evaluated, 10495 expanded
[t=0.410924s, 19428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.410924s, 19428 KB] g=31, 77829 evaluated, 27730 expanded
[t=0.410924s, 19428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.410924s, 19428 KB] g=32, 77848 evaluated, 27731 expanded
[t=0.598779s, 24396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.598779s, 24396 KB] g=44, 125858 evaluated, 44966 expanded
[t=0.598779s, 24396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.598779s, 24396 KB] g=45, 125879 evaluated, 44967 expanded
[t=0.79463s, 27628 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.79463s, 27628 KB] g=57, 175549 evaluated, 62507 expanded
[t=0.79463s, 27628 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.79463s, 27628 KB] g=58, 175571 evaluated, 62508 expanded
[t=0.990445s, 35048 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.990445s, 35048 KB] g=70, 224991 evaluated, 79743 expanded
[t=0.990445s, 35048 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.990445s, 35048 KB] g=71, 225012 evaluated, 79744 expanded
[t=1.19023s, 37116 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=1.19023s, 37116 KB] g=83, 277193 evaluated, 97589 expanded
[t=1.19023s, 37116 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=1.19023s, 37116 KB] g=84, 277211 evaluated, 97590 expanded
[t=1.38207s, 40972 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=1.38207s, 40972 KB] g=96, 329120 evaluated, 115130 expanded
[t=1.38207s, 40972 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=1.38207s, 40972 KB] g=97, 329139 evaluated, 115131 expanded
[t=1.58586s, 44960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=1.58586s, 44960 KB] g=109, 383749 evaluated, 133281 expanded
[t=1.58586s, 44960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=1.58586s, 44960 KB] g=110, 383769 evaluated, 133282 expanded
[t=1.77371s, 48816 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=1.77371s, 48816 KB] g=122, 436084 evaluated, 150517 expanded
[t=1.77371s, 48816 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=1.77371s, 48816 KB] g=123, 436103 evaluated, 150518 expanded
[t=2.52088s, 67524 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=2.52088s, 67524 KB] g=136, 635256 evaluated, 221209 expanded
[t=2.52088s, 67524 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=2.52088s, 67524 KB] g=137, 635274 evaluated, 221210 expanded
[t=3.06033s, 78032 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=3.06033s, 78032 KB] g=149, 779137 evaluated, 272116 expanded
[t=3.06033s, 78032 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=3.06033s, 78032 KB] g=150, 779154 evaluated, 272117 expanded
[t=3.06033s, 78032 KB] Solution found!
[t=3.06033s, 78032 KB] Actual search time: 2.98097s
grasp left shot12 (1)
fill-shot shot12 ingredient2 left right dispenser2 (1)
grasp right shot13 (1)
leave left shot12 (1)
fill-shot shot13 ingredient3 right left dispenser3 (1)
grasp left shot14 (1)
leave right shot13 (1)
fill-shot shot14 ingredient3 left right dispenser3 (1)
grasp right shot15 (1)
leave left shot14 (1)
fill-shot shot15 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail2 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail8 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot10 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail9 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail6 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail10 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient1 right left dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail3 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot11 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail11 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient5 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail5 ingredient2 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail5 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient5 right left dispenser5 (1)
pour-shot-to-clean-shaker shot15 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient5 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail1 ingredient1 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient5 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail7 ingredient2 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient5 right left dispenser5 (1)
pour-shot-to-clean-shaker shot15 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient5 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail4 ingredient3 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot1 left shaker1 l2 l1 (1)
[t=3.06033s, 78032 KB] Plan length: 150 step(s).
[t=3.06033s, 78032 KB] Plan cost: 150
[t=3.06033s, 78032 KB] Expanded 272118 state(s).
[t=3.06033s, 78032 KB] Reopened 0 state(s).
[t=3.06033s, 78032 KB] Evaluated 779157 state(s).
[t=3.06033s, 78032 KB] Evaluations: 779157
[t=3.06033s, 78032 KB] Generated 1615298 state(s).
[t=3.06033s, 78032 KB] Dead ends: 0 state(s).
[t=3.06033s, 78032 KB] Number of registered states: 779157
[t=3.06033s, 78032 KB] Int hash set load factor: 779157/1048576 = 0.743062
[t=3.06033s, 78032 KB] Int hash set resizes: 20
[t=3.06033s, 78032 KB] Search time: 2.98097s
[t=3.06033s, 78032 KB] Total time: 3.06033s
Solution found.
Peak memory: 78032 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 150 

Successful plans:
Value: 150
 sas_plan 150 

validate exit code: 0

INFO     Planner time: 3.49s
