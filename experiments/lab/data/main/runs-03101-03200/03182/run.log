INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
607 relevant atoms
730 auxiliary atoms
1337 final queue length
1711 total queue pushes
Completing instantiation... [0.010s CPU, 0.006s wall-clock]
Instantiating: [0.020s CPU, 0.016s wall-clock]
Computing fact groups...
Finding invariants...
11 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.007s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
28 of 28 variables necessary.
48 of 52 mutex groups necessary.
316 of 316 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 28
Translator derived variables: 0
Translator facts: 148
Translator goal facts: 20
Translator mutex groups: 48
Translator total mutex groups size: 192
Translator operators: 316
Translator axioms: 0
Translator task size: 2112
Translator peak memory: 33404 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.038s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00291414s, 10676 KB] done reading input!
[t=0.00291414s, 10940 KB] Simplifying 620 unary operators... done! [620 unary operators]
[t=0.00291414s, 10940 KB] time to simplify: 0s
[t=0.00291414s, 10940 KB] Initializing additive heuristic...
[t=0.00291414s, 10940 KB] Initializing FF heuristic...
[t=0.00291414s, 10940 KB] Building successor generator...done!
[t=0.00291414s, 10940 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00291414s, 10940 KB] time for successor generation creation: 0s
[t=0.00291414s, 10940 KB] Variables: 28
[t=0.00291414s, 10940 KB] FactPairs: 148
[t=0.00291414s, 10940 KB] Bytes per state: 8
[t=0.00291414s, 10940 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 60
[t=0.00291414s, 10940 KB] g=0, 1 evaluated, 0 expanded
[t=0.00291414s, 10940 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 60
[t=0.00291414s, 10940 KB] pruning method: none
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 58
[t=0.00291414s, 10940 KB] g=2, 6 evaluated, 1 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 56
[t=0.00291414s, 10940 KB] g=5, 25 evaluated, 2 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 54
[t=0.00291414s, 10940 KB] g=7, 29 evaluated, 3 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 53
[t=0.00291414s, 10940 KB] g=8, 42 evaluated, 4 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 52
[t=0.00291414s, 10940 KB] g=12, 84 evaluated, 9 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 50
[t=0.00291414s, 10940 KB] g=15, 106 evaluated, 12 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 48
[t=0.00291414s, 10940 KB] g=20, 142 evaluated, 18 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 47
[t=0.00291414s, 10940 KB] g=21, 154 evaluated, 19 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 45
[t=0.00291414s, 10940 KB] g=24, 164 evaluated, 20 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 43
[t=0.00291414s, 10940 KB] g=26, 171 evaluated, 21 expanded
[t=0.00291414s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 42
[t=0.00291414s, 10940 KB] g=27, 180 evaluated, 22 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 41
[t=0.00691401s, 10940 KB] g=41, 292 evaluated, 40 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 40
[t=0.00691401s, 10940 KB] g=46, 296 evaluated, 41 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 39
[t=0.00691401s, 10940 KB] g=47, 388 evaluated, 57 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 38
[t=0.00691401s, 10940 KB] g=52, 392 evaluated, 58 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 36
[t=0.00691401s, 10940 KB] g=58, 453 evaluated, 71 expanded
[t=0.00691401s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=0.00691401s, 10940 KB] g=66, 538 evaluated, 89 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=0.010918s, 10940 KB] g=81, 1084 evaluated, 206 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=0.010918s, 10940 KB] g=83, 1088 evaluated, 207 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=0.010918s, 10940 KB] g=91, 1127 evaluated, 213 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=0.010918s, 10940 KB] g=95, 1155 evaluated, 218 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 26
[t=0.010918s, 10940 KB] g=97, 1158 evaluated, 219 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 24
[t=0.010918s, 10940 KB] g=98, 1168 evaluated, 220 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 22
[t=0.010918s, 10940 KB] g=105, 1178 evaluated, 222 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 20
[t=0.010918s, 10940 KB] g=113, 1210 evaluated, 229 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=0.010918s, 10940 KB] g=118, 1214 evaluated, 230 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=0.010918s, 10940 KB] g=119, 1221 evaluated, 231 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=0.010918s, 10940 KB] g=120, 1225 evaluated, 232 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=0.010918s, 10940 KB] g=121, 1230 evaluated, 233 expanded
[t=0.010918s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 10
[t=0.010918s, 10940 KB] g=123, 1233 evaluated, 234 expanded
[t=115.567s, 804656 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=115.567s, 804656 KB] g=114, 19290473 evaluated, 7026605 expanded
[t=115.567s, 804656 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=115.567s, 804656 KB] g=117, 19290482 evaluated, 7026607 expanded
[t=115.567s, 804656 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 3
[t=115.567s, 804656 KB] g=120, 19290493 evaluated, 7026609 expanded
[t=115.567s, 804656 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 2
[t=115.567s, 804656 KB] g=121, 19290501 evaluated, 7026610 expanded
[t=115.567s, 804656 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=115.567s, 804656 KB] g=123, 19290503 evaluated, 7026611 expanded
[t=115.567s, 804656 KB] Solution found!
[t=115.567s, 804656 KB] Actual search time: 115.564s
paint-up robot1 tile_5-3 tile_4-3 white (2)
up robot2 tile_3-2 tile_4-2 (3)
paint-up robot2 tile_5-2 tile_4-2 black (2)
down robot1 tile_4-3 tile_3-3 (1)
right robot2 tile_4-2 tile_4-3 (1)
left robot1 tile_3-3 tile_3-2 (1)
paint-up robot1 tile_4-2 tile_3-2 white (2)
left robot1 tile_3-2 tile_3-1 (1)
up robot1 tile_3-1 tile_4-1 (3)
paint-up robot1 tile_5-1 tile_4-1 white (2)
down robot1 tile_4-1 tile_3-1 (1)
right robot2 tile_4-3 tile_4-4 (1)
paint-up robot2 tile_5-4 tile_4-4 black (2)
down robot2 tile_4-4 tile_3-4 (1)
left robot2 tile_3-4 tile_3-3 (1)
paint-up robot2 tile_4-3 tile_3-3 black (2)
left robot2 tile_3-3 tile_3-2 (1)
up robot1 tile_3-1 tile_4-1 (3)
change-color robot2 black white (5)
change-color robot1 white black (5)
down robot1 tile_4-1 tile_3-1 (1)
paint-up robot1 tile_4-1 tile_3-1 black (2)
down robot1 tile_3-1 tile_2-1 (1)
right robot2 tile_3-2 tile_3-3 (1)
right robot1 tile_2-1 tile_2-2 (1)
paint-up robot1 tile_3-2 tile_2-2 black (2)
left robot1 tile_2-2 tile_2-1 (1)
right robot2 tile_3-3 tile_3-4 (1)
paint-up robot2 tile_4-4 tile_3-4 white (2)
down robot2 tile_3-4 tile_2-4 (1)
left robot2 tile_2-4 tile_2-3 (1)
paint-up robot2 tile_3-3 tile_2-3 white (2)
left robot2 tile_2-3 tile_2-2 (1)
up robot1 tile_2-1 tile_3-1 (3)
change-color robot2 white black (5)
change-color robot1 black white (5)
down robot1 tile_3-1 tile_2-1 (1)
paint-up robot1 tile_3-1 tile_2-1 white (2)
down robot1 tile_2-1 tile_1-1 (1)
right robot2 tile_2-2 tile_2-3 (1)
right robot1 tile_1-1 tile_1-2 (1)
paint-up robot1 tile_2-2 tile_1-2 white (2)
left robot1 tile_1-2 tile_1-1 (1)
right robot2 tile_2-3 tile_2-4 (1)
paint-up robot2 tile_3-4 tile_2-4 black (2)
down robot2 tile_2-4 tile_1-4 (1)
left robot2 tile_1-4 tile_1-3 (1)
paint-up robot2 tile_2-3 tile_1-3 black (2)
left robot2 tile_1-3 tile_1-2 (1)
down robot1 tile_1-1 tile_0-1 (1)
left robot2 tile_1-2 tile_1-1 (1)
paint-up robot2 tile_2-1 tile_1-1 black (2)
change-color robot2 black white (5)
change-color robot1 white black (5)
right robot1 tile_0-1 tile_0-2 (1)
paint-up robot1 tile_1-2 tile_0-2 black (2)
down robot2 tile_1-1 tile_0-1 (1)
paint-up robot2 tile_1-1 tile_0-1 white (2)
right robot1 tile_0-2 tile_0-3 (1)
right robot1 tile_0-3 tile_0-4 (1)
right robot2 tile_0-1 tile_0-2 (1)
right robot2 tile_0-2 tile_0-3 (1)
up robot2 tile_0-3 tile_1-3 (3)
right robot2 tile_1-3 tile_1-4 (1)
paint-up robot2 tile_2-4 tile_1-4 white (2)
left robot2 tile_1-4 tile_1-3 (1)
paint-up robot1 tile_1-4 tile_0-4 black (2)
down robot2 tile_1-3 tile_0-3 (1)
paint-up robot2 tile_1-3 tile_0-3 white (2)
[t=115.567s, 804656 KB] Plan length: 69 step(s).
[t=115.567s, 804656 KB] Plan cost: 123
[t=115.567s, 804656 KB] Expanded 7026612 state(s).
[t=115.567s, 804656 KB] Reopened 0 state(s).
[t=115.567s, 804656 KB] Evaluated 19290505 state(s).
[t=115.567s, 804656 KB] Evaluations: 19290505
[t=115.567s, 804656 KB] Generated 55744323 state(s).
[t=115.567s, 804656 KB] Dead ends: 11732355 state(s).
[t=115.567s, 804656 KB] Number of registered states: 19290505
[t=115.567s, 804656 KB] Int hash set load factor: 19290505/33554432 = 0.574902
[t=115.567s, 804656 KB] Int hash set resizes: 25
[t=115.567s, 804656 KB] Search time: 115.564s
[t=115.567s, 804656 KB] Total time: 115.567s
Solution found.
Peak memory: 804656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 123 

Successful plans:
Value: 123
 sas_plan 123 

validate exit code: 0

INFO     Planner time: 115.70s
