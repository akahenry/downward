INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.040s wall-clock]
3955 relevant atoms
3949 auxiliary atoms
7904 final queue length
13920 total queue pushes
Completing instantiation... [0.080s CPU, 0.084s wall-clock]
Instantiating: [0.130s CPU, 0.131s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
405 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.100s CPU, 0.111s wall-clock]
4712 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.044s wall-clock]
Reordering and filtering variables...
408 of 408 variables necessary.
17 of 20 mutex groups necessary.
2814 of 2814 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.028s wall-clock]
Translator variables: 408
Translator derived variables: 0
Translator facts: 849
Translator goal facts: 15
Translator mutex groups: 17
Translator total mutex groups size: 51
Translator operators: 2814
Translator axioms: 0
Translator task size: 26997
Translator peak memory: 48136 KB
Writing output... [0.020s CPU, 0.018s wall-clock]
Done! [0.360s CPU, 0.353s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119958s, 11736 KB] done reading input!
[t=0.0119958s, 12792 KB] Simplifying 10410 unary operators... done! [8834 unary operators]
[t=0.0199911s, 13452 KB] time to simplify: 0.0079953s
[t=0.0199911s, 13452 KB] Initializing additive heuristic...
[t=0.0199911s, 13452 KB] Initializing FF heuristic...
[t=0.0199911s, 13452 KB] Building successor generator...done!
[t=0.0199911s, 13452 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0199911s, 13452 KB] time for successor generation creation: 0s
[t=0.0199911s, 13452 KB] Variables: 408
[t=0.0199911s, 13452 KB] FactPairs: 849
[t=0.0199911s, 13452 KB] Bytes per state: 56
[t=0.0199911s, 13452 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0199911s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 39
[t=0.0199911s, 13452 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199911s, 13452 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 39
[t=0.0199911s, 13452 KB] pruning method: none
[t=0.0199911s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 37
[t=0.0199911s, 13452 KB] g=1, 10 evaluated, 1 expanded
[t=0.0359857s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 36
[t=0.0359857s, 13452 KB] g=4, 160 evaluated, 23 expanded
[t=0.0399885s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 35
[t=0.0399885s, 13452 KB] g=5, 200 evaluated, 25 expanded
[t=0.0919556s, 13452 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 34
[t=0.0919556s, 13452 KB] g=9, 764 evaluated, 94 expanded
[t=1.9787s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=1.9787s, 14772 KB] g=20, 19582 evaluated, 2981 expanded
[t=2.00668s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 32
[t=2.01067s, 14772 KB] g=23, 19885 evaluated, 3009 expanded
[t=2.01067s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=2.01067s, 14772 KB] g=24, 19901 evaluated, 3010 expanded
[t=2.05862s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 30
[t=2.05862s, 14772 KB] g=27, 20420 evaluated, 3036 expanded
[t=2.05862s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=2.05862s, 14772 KB] g=28, 20442 evaluated, 3037 expanded
[t=2.06262s, 14772 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=2.06262s, 14772 KB] g=30, 20463 evaluated, 3039 expanded
[t=518.492s, 487784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 27
[t=518.492s, 487784 KB] g=42, 5251285 evaluated, 870394 expanded
[t=518.496s, 487784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 26
[t=518.496s, 487784 KB] g=44, 5251307 evaluated, 870396 expanded
[t=867.574s, 829556 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 25
[t=867.574s, 829556 KB] g=56, 8798333 evaluated, 1442144 expanded
[t=867.606s, 829692 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 24
[t=867.606s, 829692 KB] g=57, 8798689 evaluated, 1442172 expanded
[t=867.61s, 829692 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 23
[t=867.61s, 829692 KB] g=59, 8798712 evaluated, 1442174 expanded
[t=994.514s, 937128 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 22
[t=994.514s, 937128 KB] g=75, 10174902 evaluated, 1662278 expanded
[t=994.542s, 937264 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 21
[t=994.542s, 937264 KB] g=76, 10175217 evaluated, 1662302 expanded
[t=994.542s, 937264 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 20
[t=994.542s, 937264 KB] g=78, 10175240 evaluated, 1662304 expanded
[t=1088.04s, 1016744 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 19
[t=1088.04s, 1016744 KB] g=94, 11197572 evaluated, 1825974 expanded
[t=1088.04s, 1016744 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 18
[t=1088.04s, 1016744 KB] g=95, 11197592 evaluated, 1825975 expanded
[t=1088.05s, 1016744 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 17
[t=1088.05s, 1016744 KB] g=97, 11197615 evaluated, 1825977 expanded
[t=1130.93s, 1055052 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 16
[t=1130.93s, 1055052 KB] g=110, 11690397 evaluated, 1906754 expanded
[t=1131.72s, 1055724 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=1131.72s, 1055724 KB] g=122, 11699114 evaluated, 1907818 expanded
[t=1131.72s, 1055724 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=1131.72s, 1055724 KB] g=123, 11699134 evaluated, 1907819 expanded
[t=1131.72s, 1055724 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=1131.72s, 1055724 KB] g=124, 11699139 evaluated, 1907820 expanded
[t=1131.73s, 1055724 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 12
[t=1131.73s, 1055724 KB] g=126, 11699244 evaluated, 1907827 expanded
[t=1145.09s, 1067864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 11
[t=1145.09s, 1067864 KB] g=162, 11856237 evaluated, 1933803 expanded
[t=1145.09s, 1067864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 10
[t=1145.09s, 1067864 KB] g=164, 11856323 evaluated, 1933820 expanded
[t=1145.1s, 1067864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 9
[t=1145.1s, 1067864 KB] g=165, 11856339 evaluated, 1933821 expanded
[t=1145.1s, 1067864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 8
[t=1145.1s, 1067864 KB] g=166, 11856343 evaluated, 1933822 expanded
[t=1145.1s, 1067864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 7
[t=1145.1s, 1067864 KB] g=167, 11856364 evaluated, 1933823 expanded
[t=1206.22s, 1129780 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=1206.22s, 1129780 KB] g=186, 12660999 evaluated, 2108484 expanded
[t=1206.22s, 1129780 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=1206.22s, 1129780 KB] g=187, 12661020 evaluated, 2108485 expanded
[t=1235.42s, 1160512 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=1235.42s, 1160512 KB] g=209, 13062584 evaluated, 2206090 expanded
[t=1235.42s, 1160512 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 3
[t=1235.42s, 1160512 KB] g=210, 13062602 evaluated, 2206091 expanded
[t=1235.42s, 1160512 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 1
[t=1235.42s, 1160512 KB] g=211, 13062621 evaluated, 2206092 expanded
[t=1235.42s, 1160512 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=1235.42s, 1160512 KB] g=212, 13062640 evaluated, 2206093 expanded
[t=1235.42s, 1160512 KB] Solution found!
[t=1235.42s, 1160512 KB] Actual search time: 1235.4s
grasp right shot12 (1)
fill-shot shot12 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot12 ingredient3 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient3 right left dispenser3 (1)
leave right shot12 (1)
grasp right shot16 (1)
fill-shot shot16 ingredient1 right left dispenser1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail10 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot10 left shaker1 l2 l1 (1)
grasp right shot16 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot16 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail6 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient2 right left (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail1 ingredient5 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot15 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail1 shot4 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail1 l0 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail8 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot13 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail8 shot5 left shaker1 l1 l0 (1)
grasp right shot16 (1)
empty-shaker left shaker1 cocktail8 l0 l0 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail11 ingredient3 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot14 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail11 shot8 left shaker1 l1 l0 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot16 (1)
empty-shaker left shaker1 cocktail11 l0 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient4 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 (1)
refill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail7 ingredient5 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient4 right left dispenser4 (1)
pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient4 right left (1)
grasp left shaker1 (1)
leave right shot16 (1)
shake cocktail9 ingredient4 ingredient5 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 (1)
grasp right shot16 (1)
leave left shaker1 (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shaker1 (1)
leave right shot16 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient3 right left dispenser3 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient3 right left (1)
fill-shot shot16 ingredient5 right left dispenser5 (1)
grasp left shot1 (1)
leave right shot16 (1)
fill-shot shot1 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
leave left shot1 (1)
shake cocktail3 ingredient3 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot2 right shaker1 l2 l1 (1)
grasp left shot1 (1)
leave right shaker1 (1)
grasp right shot16 (1)
leave left shot1 (1)
grasp left shaker1 (1)
leave right shot16 (1)
grasp right shot1 (1)
leave left shaker1 (1)
empty-shot right shot1 ingredient2 (1)
clean-shot shot1 ingredient2 right left (1)
grasp left shot16 (1)
leave right shot1 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
leave right shaker1 (1)
grasp right shot1 (1)
fill-shot shot1 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot1 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot1 ingredient2 right left (1)
fill-shot shot1 ingredient5 right left dispenser5 (1)
leave right shot1 (1)
grasp right shot16 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 (1)
clean-shot shot16 ingredient5 right left (1)
fill-shot shot16 ingredient2 right left dispenser2 (1)
leave right shot16 (1)
grasp right shaker1 (1)
shake cocktail2 ingredient5 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 (1)
leave left shot16 (1)
grasp left shot1 (1)
pour-shot-to-used-shaker shot1 ingredient5 shaker1 left l1 l2 (1)
leave right shaker1 (1)
clean-shot shot1 ingredient5 left right (1)
leave left shot1 (1)
grasp left shot16 (1)
clean-shot shot16 ingredient2 left right (1)
fill-shot shot16 ingredient5 left right dispenser5 (1)
leave left shot16 (1)
grasp left shot12 (1)
empty-shot left shot12 ingredient3 (1)
clean-shot shot12 ingredient3 left right (1)
grasp right shaker1 (1)
leave left shot12 (1)
shake cocktail4 ingredient2 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
leave right shaker1 (1)
grasp right shot16 (1)
grasp left shot12 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 (1)
leave right shot16 (1)
fill-shot shot12 ingredient2 left right dispenser2 (1)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 left l1 l2 (1)
clean-shot shot12 ingredient2 left right (1)
fill-shot shot12 ingredient3 left right dispenser3 (1)
grasp right shaker1 (1)
leave left shot12 (1)
shake cocktail5 ingredient5 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot11 right shaker1 l2 l1 (1)
[t=1235.42s, 1160512 KB] Plan length: 200 step(s).
[t=1235.42s, 1160512 KB] Plan cost: 200
[t=1235.42s, 1160512 KB] Expanded 2206094 state(s).
[t=1235.42s, 1160512 KB] Reopened 0 state(s).
[t=1235.42s, 1160512 KB] Evaluated 13062641 state(s).
[t=1235.42s, 1160512 KB] Evaluations: 13062641
[t=1235.42s, 1160512 KB] Generated 19599509 state(s).
[t=1235.42s, 1160512 KB] Dead ends: 395941 state(s).
[t=1235.42s, 1160512 KB] Number of registered states: 13062641
[t=1235.42s, 1160512 KB] Int hash set load factor: 13062641/16777216 = 0.778594
[t=1235.42s, 1160512 KB] Int hash set resizes: 24
[t=1235.42s, 1160512 KB] Search time: 1235.4s
[t=1235.42s, 1160512 KB] Total time: 1235.42s
Solution found.
Peak memory: 1160512 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 200 

Successful plans:
Value: 200
 sas_plan 200 

validate exit code: 0

INFO     Planner time: 1235.92s
