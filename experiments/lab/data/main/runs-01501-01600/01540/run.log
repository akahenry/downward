INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.006s wall-clock]
741 relevant atoms
630 auxiliary atoms
1371 final queue length
1732 total queue pushes
Completing instantiation... [0.010s CPU, 0.005s wall-clock]
Instantiating: [0.020s CPU, 0.014s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
20 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.005s wall-clock]
10 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
0 of 1 mutex groups necessary.
400 of 400 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 60
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 400
Translator axioms: 0
Translator task size: 1311
Translator peak memory: 33128 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.027s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45992 KB] building causal graph...done! [t=0s]
[t=0s, 45992 KB] Found 30 SGA patterns.
[t=0s, 45992 KB] Found 30 interesting patterns.
[t=0s, 45992 KB] systematic pattern collection generator number of patterns: 30
[t=0s, 45992 KB] systematic pattern collection generator total PDB size: 460
[t=0s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0s, 45992 KB] Computing PDBs for pattern collection...
[t=0.00398318s, 45992 KB] Done computing PDBs for pattern collection: 0.00398318s
[t=0.00398318s, 45992 KB] Tie breaking: 2
[t=0.00398318s, 45992 KB] Building successor generator...done!
[t=0.00398318s, 45992 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00398318s, 45992 KB] time for successor generation creation: 0s
[t=0.00398318s, 45992 KB] Variables: 21
[t=0.00398318s, 45992 KB] FactPairs: 60
[t=0.00398318s, 45992 KB] Bytes per state: 4
[t=0.00398318s, 45992 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.00398318s, 45992 KB] g=0, 1 evaluated, 0 expanded
[t=0.00398318s, 45992 KB] Initial heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.00398318s, 45992 KB] pruning method: none
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.00398318s, 45992 KB] g=2, 21 evaluated, 3 expanded
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.00398318s, 45992 KB] g=4, 41 evaluated, 7 expanded
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.00398318s, 45992 KB] g=6, 61 evaluated, 12 expanded
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.00398318s, 45992 KB] g=7, 63 evaluated, 13 expanded
[t=0.00398318s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.00798334s, 45992 KB] g=9, 102 evaluated, 20 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.00798334s, 45992 KB] g=11, 122 evaluated, 28 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.00798334s, 45992 KB] g=13, 143 evaluated, 37 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=0.00798334s, 45992 KB] g=15, 164 evaluated, 47 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.00798334s, 45992 KB] g=17, 185 evaluated, 58 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=0.00798334s, 45992 KB] g=18, 206 evaluated, 59 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=0.00798334s, 45992 KB] g=20, 228 evaluated, 71 expanded
[t=0.00798334s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=0.00798334s, 45992 KB] g=22, 251 evaluated, 84 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=0.0119887s, 45992 KB] g=24, 275 evaluated, 98 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=0.0119887s, 45992 KB] g=26, 300 evaluated, 113 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=0.0119887s, 45992 KB] g=27, 322 evaluated, 114 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=0.0119887s, 45992 KB] g=28, 343 evaluated, 115 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=0.0119887s, 45992 KB] g=30, 364 evaluated, 120 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=0.0119887s, 45992 KB] g=31, 377 evaluated, 121 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=0.0119887s, 45992 KB] g=32, 385 evaluated, 122 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=0.0119887s, 45992 KB] g=34, 423 evaluated, 124 expanded
[t=0.0119887s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=0.0119887s, 45992 KB] g=35, 426 evaluated, 125 expanded
[t=0.0119887s, 45992 KB] Solution found!
[t=0.0119887s, 45992 KB] Actual search time: 0.00800556s
up f0 f10 (1)
board f10 p9 (1)
down f10 f2 (1)
board f2 p7 (1)
up f2 f11 (1)
board f11 p4 (1)
board f11 p5 (1)
down f11 f4 (1)
board f4 p6 (1)
up f4 f12 (1)
depart f12 p4 (1)
down f12 f5 (1)
board f5 p3 (1)
up f5 f13 (1)
board f13 p0 (1)
down f13 f6 (1)
board f6 p1 (1)
depart f6 p6 (1)
up f6 f14 (1)
depart f14 p5 (1)
down f14 f7 (1)
depart f7 p7 (1)
up f7 f15 (1)
depart f15 p0 (1)
down f15 f8 (1)
board f8 p8 (1)
depart f8 p9 (1)
depart f8 p3 (1)
down f8 f3 (1)
depart f3 p8 (1)
up f3 f19 (1)
depart f19 p1 (1)
board f19 p2 (1)
down f19 f8 (1)
depart f8 p2 (1)
[t=0.0119887s, 45992 KB] Plan length: 35 step(s).
[t=0.0119887s, 45992 KB] Plan cost: 35
[t=0.0119887s, 45992 KB] Expanded 126 state(s).
[t=0.0119887s, 45992 KB] Reopened 0 state(s).
[t=0.0119887s, 45992 KB] Evaluated 426 state(s).
[t=0.0119887s, 45992 KB] Evaluations: 426
[t=0.0119887s, 45992 KB] Generated 2471 state(s).
[t=0.0119887s, 45992 KB] Dead ends: 0 state(s).
[t=0.0119887s, 45992 KB] Number of registered states: 426
[t=0.0119887s, 45992 KB] Int hash set load factor: 426/512 = 0.832031
[t=0.0119887s, 45992 KB] Int hash set resizes: 9
[t=0.0119887s, 45992 KB] Search time: 0.00800556s
[t=0.0119887s, 45992 KB] Total time: 0.0119887s
Solution found.
Peak memory: 45992 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 35 

Successful plans:
Value: 35
 sas_plan 35 

validate exit code: 0

INFO     Planner time: 0.09s
