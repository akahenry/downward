INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
613 relevant atoms
531 auxiliary atoms
1144 final queue length
1433 total queue pushes
Completing instantiation... [0.010s CPU, 0.007s wall-clock]
Instantiating: [0.030s CPU, 0.018s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.007s wall-clock]
9 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
19 of 19 variables necessary.
0 of 1 mutex groups necessary.
324 of 324 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 19
Translator derived variables: 0
Translator facts: 54
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 324
Translator axioms: 0
Translator task size: 1072
Translator peak memory: 32628 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.038s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00167218s, 45596 KB] done reading input!
[t=0.00317904s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00334359s, 45992 KB] building causal graph...done! [t=1.773e-05s]
[t=0.00339377s, 45992 KB] Found 36 SGA patterns.
[t=0.00343774s, 45992 KB] Found 228 interesting patterns.
[t=0.00365835s, 45992 KB] systematic pattern collection generator number of patterns: 228
[t=0.00370792s, 45992 KB] systematic pattern collection generator total PDB size: 26082
[t=0.00372756s, 45992 KB] systematic pattern collection generator computation time: 0.00031476s
[t=0.00374129s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0276857s, 45992 KB] Done computing PDBs for pattern collection: 0.0239444s
[t=0.0293968s, 47180 KB] Building successor generator...done!
[t=0.0318633s, 47180 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0319015s, 47180 KB] time for successor generation creation: 0s
[t=0.0319194s, 47180 KB] Variables: 19
[t=0.0319414s, 47180 KB] FactPairs: 54
[t=0.0319574s, 47180 KB] Bytes per state: 4
[t=0.0319758s, 47180 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 36
[t=0.0320283s, 47180 KB] g=0, 1 evaluated, 0 expanded
[t=0.0320283s, 47180 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 36
[t=0.0320283s, 47180 KB] pruning method: none
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 35
[t=0.0320283s, 47180 KB] g=1, 2 evaluated, 1 expanded
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 34
[t=0.0320283s, 47180 KB] g=1, 7 evaluated, 1 expanded
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 33
[t=0.0320283s, 47180 KB] g=2, 19 evaluated, 2 expanded
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 32
[t=0.0320283s, 47180 KB] g=3, 21 evaluated, 3 expanded
[t=0.0320283s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 31
[t=0.0325117s, 47180 KB] g=4, 40 evaluated, 4 expanded
[t=0.0325307s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 30
[t=0.0325972s, 47180 KB] g=4, 48 evaluated, 4 expanded
[t=0.0325972s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 29
[t=0.0325972s, 47180 KB] g=5, 56 evaluated, 5 expanded
[t=0.0325972s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 28
[t=0.0325972s, 47180 KB] g=6, 58 evaluated, 6 expanded
[t=0.0325972s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 27
[t=0.0328654s, 47180 KB] g=7, 77 evaluated, 7 expanded
[t=0.0328853s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.0329766s, 47180 KB] g=7, 90 evaluated, 7 expanded
[t=0.032994s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=0.0330374s, 47180 KB] g=8, 93 evaluated, 8 expanded
[t=0.0330559s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.0331787s, 47180 KB] g=9, 112 evaluated, 9 expanded
[t=0.0331973s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.033236s, 47180 KB] g=10, 114 evaluated, 10 expanded
[t=0.0332543s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.0333675s, 47180 KB] g=11, 130 evaluated, 11 expanded
[t=0.0333854s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.0334213s, 47180 KB] g=12, 132 evaluated, 12 expanded
[t=0.0334389s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.0335407s, 47180 KB] g=13, 148 evaluated, 13 expanded
[t=0.0335588s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.0336088s, 47180 KB] g=14, 153 evaluated, 14 expanded
[t=0.0337056s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.0337455s, 47180 KB] g=15, 166 evaluated, 15 expanded
[t=0.0337689s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.0338337s, 47180 KB] g=16, 173 evaluated, 16 expanded
[t=0.0338517s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.0339288s, 47180 KB] g=17, 184 evaluated, 17 expanded
[t=0.0339465s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.0340122s, 47180 KB] g=18, 193 evaluated, 18 expanded
[t=0.0340666s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.0341064s, 47180 KB] g=19, 202 evaluated, 19 expanded
[t=0.0341282s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.0341601s, 47180 KB] g=20, 203 evaluated, 20 expanded
[t=0.0341776s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.0342832s, 47180 KB] g=21, 220 evaluated, 21 expanded
[t=0.0343022s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.0343568s, 47180 KB] g=22, 225 evaluated, 22 expanded
[t=0.0343759s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.0344611s, 47180 KB] g=23, 238 evaluated, 23 expanded
[t=0.0344826s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.0345658s, 47180 KB] g=24, 251 evaluated, 24 expanded
[t=0.0345855s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.0346334s, 47180 KB] g=25, 256 evaluated, 25 expanded
[t=0.0346525s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.0347485s, 47180 KB] g=26, 264 evaluated, 26 expanded
[t=0.0347679s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.0348383s, 47180 KB] g=27, 274 evaluated, 27 expanded
[t=0.0348569s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.0349389s, 47180 KB] g=28, 287 evaluated, 28 expanded
[t=0.0349581s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.0350094s, 47180 KB] g=29, 292 evaluated, 29 expanded
[t=0.0350288s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.0350646s, 47180 KB] g=30, 294 evaluated, 30 expanded
[t=0.0350839s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.0351805s, 47180 KB] g=31, 310 evaluated, 31 expanded
[t=0.0351992s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.0352553s, 47180 KB] g=32, 318 evaluated, 32 expanded
[t=0.0352764s, 47180 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.0353478s, 47180 KB] g=33, 328 evaluated, 33 expanded
[t=0.0353676s, 47180 KB] Solution found!
[t=0.0353882s, 47180 KB] Actual search time: 0.00335995s
up f0 f14 (1)
board f14 p5 (1)
board f14 p6 (1)
down f14 f5 (1)
board f5 p2 (1)
board f5 p7 (1)
up f5 f7 (1)
depart f7 p6 (1)
depart f7 p2 (1)
down f7 f1 (1)
board f1 p0 (1)
up f1 f10 (1)
board f10 p3 (1)
down f10 f4 (1)
depart f4 p7 (1)
up f4 f12 (1)
depart f12 p3 (1)
down f12 f6 (1)
board f6 p8 (1)
down f6 f0 (1)
depart f0 p8 (1)
up f0 f13 (1)
depart f13 p5 (1)
down f13 f9 (1)
board f9 p1 (1)
down f9 f7 (1)
depart f7 p1 (1)
up f7 f15 (1)
board f15 p4 (1)
down f15 f1 (1)
depart f1 p4 (1)
up f1 f16 (1)
depart f16 p0 (1)
[t=0.0354117s, 47180 KB] Plan length: 33 step(s).
[t=0.0354117s, 47180 KB] Plan cost: 33
[t=0.0354117s, 47180 KB] Expanded 34 state(s).
[t=0.0354117s, 47180 KB] Reopened 0 state(s).
[t=0.0354117s, 47180 KB] Evaluated 328 state(s).
[t=0.0354117s, 47180 KB] Evaluations: 328
[t=0.0354117s, 47180 KB] Generated 595 state(s).
[t=0.0354117s, 47180 KB] Dead ends: 0 state(s).
[t=0.0354117s, 47180 KB] Number of registered states: 328
[t=0.0354117s, 47180 KB] Int hash set load factor: 328/512 = 0.640625
[t=0.0354117s, 47180 KB] Int hash set resizes: 9
[t=0.0354117s, 47180 KB] Search time: 0.00343592s
[t=0.0354117s, 47180 KB] Total time: 0.0354117s
Solution found.
Peak memory: 47180 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 33 

Successful plans:
Value: 33
 sas_plan 33 

validate exit code: 0

INFO     Planner time: 0.15s
