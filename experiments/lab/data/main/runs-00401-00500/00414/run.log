INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
2025 relevant atoms
2105 auxiliary atoms
4130 final queue length
7122 total queue pushes
Completing instantiation... [0.040s CPU, 0.040s wall-clock]
Instantiating: [0.060s CPU, 0.066s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
207 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2326 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
210 of 210 variables necessary.
11 of 14 mutex groups necessary.
1390 of 1390 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 210
Translator derived variables: 0
Translator facts: 441
Translator goal facts: 9
Translator mutex groups: 11
Translator total mutex groups size: 33
Translator operators: 1390
Translator axioms: 0
Translator task size: 13333
Translator peak memory: 40168 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.170s CPU, 0.177s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00701179s, 11072 KB] done reading input!
[t=0.00701179s, 11468 KB] Generating patterns using: systematic pattern collection generator
[t=0.00701179s, 11468 KB] building causal graph...done! [t=0.00400016s]
[t=0.0350099s, 23372 KB] Found 43438 SGA patterns.
[t=0.350844s, 23900 KB] Found 48744 interesting patterns.
[t=0.366828s, 23900 KB] systematic pattern collection generator number of patterns: 48744
[t=0.366828s, 23900 KB] systematic pattern collection generator total PDB size: 1693632
[t=0.366828s, 23900 KB] systematic pattern collection generator computation time: 0.359816s
[t=0.366828s, 23900 KB] Computing PDBs for pattern collection...
[t=17.7176s, 34908 KB] Done computing PDBs for pattern collection: 17.3508s
[t=19.5283s, 405592 KB] Building successor generator...done!
[t=19.5283s, 405592 KB] peak memory difference for successor generator creation: 0 KB
[t=19.5283s, 405592 KB] time for successor generation creation: 0s
[t=19.5283s, 405592 KB] Variables: 210
[t=19.5283s, 405592 KB] FactPairs: 441
[t=19.5283s, 405592 KB] Bytes per state: 28
[t=19.5283s, 405592 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=19.5323s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 35
[t=19.5323s, 405592 KB] g=0, 1 evaluated, 0 expanded
[t=19.5323s, 405592 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 35
[t=19.5323s, 405592 KB] pruning method: none
[t=19.5323s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 34
[t=19.5323s, 405592 KB] g=1, 2 evaluated, 1 expanded
[t=20.5754s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 33
[t=20.5754s, 405592 KB] g=13, 358 evaluated, 57 expanded
[t=20.5953s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 29
[t=20.5953s, 405592 KB] g=14, 364 evaluated, 58 expanded
[t=25.3709s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 28
[t=25.3709s, 405592 KB] g=25, 1995 evaluated, 341 expanded
[t=30.0951s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=30.0951s, 405592 KB] g=26, 3547 evaluated, 726 expanded
[t=38.9911s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=38.9911s, 405592 KB] g=58, 6809 evaluated, 1083 expanded
[t=60.6713s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=60.6713s, 405592 KB] g=89, 14883 evaluated, 1997 expanded
[t=72.6366s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=72.6406s, 405592 KB] g=109, 19368 evaluated, 2538 expanded
[t=76.3813s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=76.3813s, 405592 KB] g=120, 20777 evaluated, 2690 expanded
[t=89.4288s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=89.4288s, 405592 KB] g=151, 25768 evaluated, 3274 expanded
[t=185.873s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=185.873s, 405592 KB] g=181, 57652 evaluated, 8180 expanded
[t=185.913s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=185.913s, 405592 KB] g=182, 57665 evaluated, 8181 expanded
[t=185.981s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=185.981s, 405592 KB] g=184, 57686 evaluated, 8183 expanded
[t=186.017s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=186.017s, 405592 KB] g=185, 57698 evaluated, 8184 expanded
[t=191.944s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=191.944s, 405592 KB] g=202, 59571 evaluated, 8437 expanded
[t=196.727s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=196.727s, 405592 KB] g=213, 61076 evaluated, 8686 expanded
[t=196.979s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=196.979s, 405592 KB] g=216, 61156 evaluated, 8691 expanded
[t=197.003s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=197.003s, 405592 KB] g=216, 61163 evaluated, 8691 expanded
[t=235.776s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=235.776s, 405592 KB] g=244, 73638 evaluated, 12207 expanded
[t=235.804s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=235.804s, 405592 KB] g=245, 73648 evaluated, 12208 expanded
[t=235.836s, 405592 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=235.836s, 405592 KB] g=246, 73660 evaluated, 12209 expanded
[t=235.844s, 405592 KB] Solution found!
[t=235.844s, 405592 KB] Actual search time: 216.312s
grasp left shot10 (1)
fill-shot shot10 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot10 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot10 ingredient1 left right (1)
fill-shot shot10 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot10 ingredient2 shaker1 left l1 l2 (1)
leave left shot10 (1)
shake cocktail8 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot7 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail8 shot9 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail8 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot10 (1)
leave right shaker1 (1)
refill-shot shot10 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot10 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot10 ingredient2 left right (1)
fill-shot shot10 ingredient3 left right dispenser3 (10)
pour-shot-to-used-shaker shot10 ingredient3 shaker1 left l1 l2 (1)
grasp right shaker1 (1)
leave left shot10 (1)
shake cocktail3 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot10 (1)
leave right shaker1 (1)
refill-shot shot10 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot10 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot10 ingredient3 left right (1)
fill-shot shot10 ingredient2 left right dispenser2 (10)
pour-shot-to-used-shaker shot10 ingredient2 shaker1 left l1 l2 (1)
grasp right shaker1 (1)
leave left shot10 (1)
shake cocktail5 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot1 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot10 (1)
leave right shaker1 (1)
refill-shot shot10 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot10 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot10 ingredient2 left right (1)
fill-shot shot10 ingredient1 left right dispenser1 (10)
pour-shot-to-used-shaker shot10 ingredient1 shaker1 left l1 l2 (1)
leave left shot10 (1)
grasp left shaker1 (1)
shake cocktail4 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot10 (1)
leave left shaker1 (1)
refill-shot shot10 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot10 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot10 ingredient1 right left (1)
fill-shot shot10 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot10 ingredient4 shaker1 right l1 l2 (1)
grasp left shaker1 (1)
leave right shot10 (1)
shake cocktail2 ingredient1 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot10 (1)
leave left shaker1 (1)
refill-shot shot10 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot10 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot10 ingredient4 right left (1)
fill-shot shot10 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot10 ingredient1 shaker1 right l1 l2 (1)
grasp left shaker1 (1)
leave right shot10 (1)
shake cocktail7 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot10 (1)
leave left shaker1 (1)
refill-shot shot10 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot10 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot10 ingredient1 right left (1)
fill-shot shot10 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot10 ingredient2 shaker1 right l1 l2 (1)
leave right shot10 (1)
grasp left shaker1 (1)
shake cocktail1 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot10 (1)
leave left shaker1 (1)
refill-shot shot10 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot10 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot10 ingredient2 right left (1)
fill-shot shot10 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot10 ingredient3 shaker1 right l1 l2 (1)
leave right shot10 (1)
shake cocktail6 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 (1)
[t=235.844s, 405592 KB] Plan length: 102 step(s).
[t=235.844s, 405592 KB] Plan cost: 246
[t=235.844s, 405592 KB] Expanded 12210 state(s).
[t=235.844s, 405592 KB] Reopened 0 state(s).
[t=235.844s, 405592 KB] Evaluated 73663 state(s).
[t=235.844s, 405592 KB] Evaluations: 73663
[t=235.844s, 405592 KB] Generated 122300 state(s).
[t=235.844s, 405592 KB] Dead ends: 0 state(s).
[t=235.844s, 405592 KB] Number of registered states: 73663
[t=235.844s, 405592 KB] Int hash set load factor: 73663/131072 = 0.562004
[t=235.844s, 405592 KB] Int hash set resizes: 17
[t=235.844s, 405592 KB] Search time: 216.316s
[t=235.844s, 405592 KB] Total time: 235.844s
Solution found.
Peak memory: 405592 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 246 

Successful plans:
Value: 246
 sas_plan 246 

validate exit code: 0

INFO     Planner time: 236.11s
