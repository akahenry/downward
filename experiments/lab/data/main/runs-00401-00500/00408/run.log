INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.005s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.005s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 258 rules.
Computing model... [0.350s CPU, 0.350s wall-clock]
59140 relevant atoms
1704 auxiliary atoms
60844 final queue length
221347 total queue pushes
Completing instantiation... [2.620s CPU, 2.627s wall-clock]
Instantiating: [3.000s CPU, 2.996s wall-clock]
Computing fact groups...
Finding invariants...
44 initial candidates
Finding invariants: [0.060s CPU, 0.061s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
126 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.060s CPU, 0.062s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.094s wall-clock]
Translating task: [2.530s CPU, 2.531s wall-clock]
63383 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
33 propositions removed
Detecting unreachable propositions: [1.390s CPU, 1.391s wall-clock]
Reordering and filtering variables...
115 of 120 variables necessary.
0 of 7 mutex groups necessary.
58457 of 58457 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.440s CPU, 0.439s wall-clock]
Translator variables: 115
Translator derived variables: 0
Translator facts: 261
Translator goal facts: 2
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 58457
Translator axioms: 0
Translator task size: 615672
Translator peak memory: 381232 KB
Writing output... [0.380s CPU, 0.383s wall-clock]
Done! [7.920s CPU, 7.923s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1792s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.263934s, 34508 KB] done reading input!
[t=0.263934s, 34904 KB] Generating patterns using: systematic pattern collection generator
[t=0.263934s, 34904 KB] building causal graph...done! [t=0.0279891s]
[t=0.295923s, 35620 KB] Found 3528 SGA patterns.
[t=0.307919s, 35620 KB] Found 3528 interesting patterns.
[t=0.307919s, 35620 KB] systematic pattern collection generator number of patterns: 3528
[t=0.307919s, 35620 KB] systematic pattern collection generator total PDB size: 295902
[t=0.307919s, 35620 KB] systematic pattern collection generator computation time: 0.0439853s
[t=0.307919s, 35620 KB] Computing PDBs for pattern collection...
[t=48.1152s, 43684 KB] Done computing PDBs for pattern collection: 47.8073s
[t=55.9654s, 878996 KB] Building successor generator...done!
[t=55.9853s, 885536 KB] peak memory difference for successor generator creation: 6540 KB
[t=55.9853s, 885536 KB] time for successor generation creation: 0.0199864s
[t=55.9853s, 885536 KB] Variables: 115
[t=55.9853s, 885536 KB] FactPairs: 261
[t=55.9853s, 885536 KB] Bytes per state: 16
[t=55.9853s, 885536 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=55.9853s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 388
[t=55.9853s, 885536 KB] g=0, 1 evaluated, 0 expanded
[t=55.9853s, 885536 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 388
[t=55.9853s, 885536 KB] pruning method: none
[t=55.9853s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 328
[t=55.9853s, 885536 KB] g=60, 2 evaluated, 1 expanded
[t=55.9893s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 327
[t=55.9893s, 885536 KB] g=60, 12 evaluated, 1 expanded
[t=55.9893s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 281
[t=55.9893s, 885536 KB] g=120, 13 evaluated, 2 expanded
[t=56.0213s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 280
[t=56.0213s, 885536 KB] g=243, 146 evaluated, 85 expanded
[t=56.7012s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 170
[t=56.7012s, 885536 KB] g=366, 2827 evaluated, 2001 expanded
[t=56.7012s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 169
[t=56.7012s, 885536 KB] g=367, 2836 evaluated, 2002 expanded
[t=56.7012s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 168
[t=56.7012s, 885536 KB] g=368, 2837 evaluated, 2003 expanded
[t=56.7052s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 108
[t=56.7052s, 885536 KB] g=429, 2850 evaluated, 2006 expanded
[t=57.341s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 98
[t=57.341s, 885536 KB] g=619, 6066 evaluated, 4472 expanded
[t=57.341s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 79
[t=57.341s, 885536 KB] g=649, 6076 evaluated, 4473 expanded
[t=57.341s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 78
[t=57.341s, 885536 KB] g=650, 6085 evaluated, 4474 expanded
[t=57.341s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 77
[t=57.341s, 885536 KB] g=651, 6086 evaluated, 4475 expanded
[t=57.341s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 66
[t=57.341s, 885536 KB] g=667, 6088 evaluated, 4477 expanded
[t=57.345s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 51
[t=57.345s, 885536 KB] g=682, 6098 evaluated, 4478 expanded
[t=57.345s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 36
[t=57.345s, 885536 KB] g=697, 6107 evaluated, 4479 expanded
[t=57.357s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=57.357s, 885536 KB] g=712, 6215 evaluated, 4499 expanded
[t=57.421s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=57.421s, 885536 KB] g=713, 6761 evaluated, 4658 expanded
[t=58.8488s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=58.8488s, 885536 KB] g=807, 17749 evaluated, 15784 expanded
[t=58.8488s, 885536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=58.8488s, 885536 KB] g=813, 17760 evaluated, 15785 expanded
[t=171.559s, 937384 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=171.559s, 937384 KB] g=1049, 928309 evaluated, 625386 expanded
[t=171.635s, 937384 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=171.635s, 937384 KB] g=1077, 929562 evaluated, 626403 expanded
[t=171.635s, 937384 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=171.635s, 937384 KB] g=1078, 929563 evaluated, 626404 expanded
[t=171.635s, 937384 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=171.635s, 937384 KB] g=1079, 929564 evaluated, 626405 expanded
[t=171.635s, 937384 KB] Solution found!
[t=171.635s, 937384 KB] Actual search time: 115.65s
take_food worker2 worker1 worker2 round1 num3 num4 (60)
collect_resource worker1 noworker worker2 round1 act_clay clay (60)
ag__finish_round_backhome round1 worker2 (1)
ag__finish_round_renew round1 noworker (1)
ag__advance_round_normal round1 round2 act_family (1)
collect_resource worker2 worker1 worker2 round2 act_reed reed (60)
collect_resource worker1 noworker worker2 round2 act_wood wood (60)
ag__finish_round_backhome round2 worker2 (1)
ag__finish_round_renew round2 noworker (1)
ag__advance_round_normal round2 round3 act_sheep (1)
build_room worker2 worker1 worker2 worker3 round3 room3 (60)
family_growth worker1 noworker worker2 worker3 round3 clay room3 (60)
ag__finish_round_backhome_withchild round3 worker2 worker3 (1)
ag__finish_round_renew round3 noworker (1)
ag__advance_round_normal round3 round4 act_sow (1)
plow_field worker3 worker2 worker3 round4 (30)
take_grain worker2 worker1 worker3 round4 carrot (30)
sow worker1 noworker worker3 round4 carrot (30)
ag__finish_round_backhome round4 worker3 (1)
ag__finish_round_renew round4 noworker (1)
ag__harvest_collecting_veg round4 stage1 carrot num4 num6 num7 (1)
ag__harvest_collect_end round4 stage1 (1)
ag__harvest_feed round4 stage1 worker3 num7 num6 num1 (1)
ag__harvest_breed_end round4 stage1 (1)
ag__finish_stage stage1 stage2 round4 round5 act_improve (1)
collect_resource worker3 worker2 worker3 round5 act_reed reed (30)
collect_resource worker2 worker1 worker3 round5 act_wood wood (30)
build_room worker1 noworker worker3 worker4 round5 room4 (30)
ag__finish_round_backhome round5 worker3 (1)
ag__finish_round_renew round5 noworker (1)
ag__advance_round_normal round5 round6 act_boar (1)
family_growth worker3 worker2 worker3 worker4 round6 clay room4 (30)
collect_resource worker2 worker1 worker3 round6 act_clay clay (30)
take_grain worker1 noworker worker3 round6 carrot (30)
ag__finish_round_backhome_withchild round6 worker3 worker4 (1)
ag__finish_round_renew round6 noworker (1)
ag__advance_round_normal round6 round7 act_cattle (1)
sow worker4 worker3 worker4 round7 carrot (15)
take_grain worker3 worker2 worker4 round7 grain (15)
sow worker2 worker1 worker4 round7 grain (15)
take_food worker1 noworker worker4 round7 num1 num2 (15)
ag__finish_round_backhome round7 worker4 (1)
ag__finish_round_renew round7 noworker (1)
ag__harvest_collecting_veg round7 stage2 carrot num2 num4 num5 (1)
ag__harvest_collecting_veg round7 stage2 grain num5 num7 num8 (1)
ag__harvest_collect_end round7 stage2 (1)
ag__harvest_feed round7 stage2 worker4 num8 num8 num0 (1)
ag__harvest_breed_end round7 stage2 (1)
ag__finish_stage stage2 stage3 round7 round8 act_carrot (1)
collect_resource worker4 worker3 worker4 round8 act_stone stone (15)
improve_home worker3 worker2 worker4 round8 fireplace (15)
collect_cook_animal boar act_sheep worker2 worker1 worker4 round8 num0 num2 (15)
collect_cook_animal boar act_cattle worker1 noworker worker4 round8 num2 num4 (15)
ag__finish_round_backhome round8 worker4 (1)
ag__finish_round_renew round8 noworker (1)
ag__advance_round_normal round8 round9 void (1)
collect_cook_animal boar act_sheep worker4 worker3 worker4 round9 num4 num6 (15)
collect_cook_animal boar act_boar worker3 worker2 worker4 round9 num6 num8 (15)
collect_resource worker2 worker1 worker4 round9 act_clay clay (15)
take_food worker1 noworker worker4 round9 num8 num9 (15)
ag__finish_round_backhome round9 worker4 (1)
ag__finish_round_renew round9 noworker (1)
ag__harvest_collect_end round9 stage3 (1)
ag__harvest_feed round9 stage3 worker4 num9 num8 num1 (1)
ag__harvest_breed_end round9 stage3 (1)
ag__finish_stage stage3 stage4 round9 round10 void (1)
collect_cook_animal boar act_sheep worker4 worker3 worker4 round10 num1 num3 (15)
take_food worker3 worker2 worker4 round10 num3 num4 (15)
collect_resource worker2 worker1 worker4 round10 act_clay clay (15)
take_grain worker1 noworker worker4 round10 carrot (15)
ag__finish_round_backhome round10 worker4 (1)
ag__finish_round_renew round10 noworker (1)
ag__advance_round_normal round10 round11 void (1)
sow worker4 worker3 worker4 round11 carrot (15)
collect_cook_animal boar act_sheep worker3 worker2 worker4 round11 num4 num6 (15)
take_grain worker2 worker1 worker4 round11 grain (15)
sow worker1 noworker worker4 round11 grain (15)
ag__finish_round_backhome round11 worker4 (1)
ag__finish_round_renew round11 noworker (1)
ag__harvest_collecting_veg round11 stage4 carrot num6 num8 num9 (1)
ag__harvest_collecting_veg round11 stage4 grain num9 num11 num12 (1)
ag__harvest_collect_end round11 stage4 (1)
ag__harvest_feed round11 stage4 worker4 num12 num8 num4 (1)
ag__harvest_breed_end round11 stage4 (1)
ag__finish_stage stage4 stage5 round11 round12 void (1)
collect_resource worker4 worker3 worker4 round12 act_reed reed (15)
collect_resource worker3 worker2 worker4 round12 act_wood wood (15)
build_room worker2 worker1 worker4 worker5 round12 room5 (15)
family_growth worker1 noworker worker4 worker5 round12 clay room5 (15)
ag__finish_round_backhome_withchild round12 worker4 worker5 (1)
ag__finish_round_renew round12 noworker (1)
ag__advance_round_normal round12 round13 void (1)
collect_cook_animal boar act_sheep worker5 worker4 worker5 round13 num4 num6 (6)
collect_resource worker4 worker3 worker5 round13 act_clay clay (6)
take_grain worker3 worker2 worker5 round13 carrot (6)
sow worker2 worker1 worker5 round13 carrot (6)
take_food worker1 noworker worker5 round13 num6 num7 (6)
ag__finish_round_backhome round13 worker5 (1)
ag__finish_round_renew round13 noworker (1)
ag__harvest_collecting_veg round13 stage5 carrot num7 num9 num10 (1)
ag__harvest_collect_end round13 stage5 (1)
ag__harvest_feed round13 stage5 worker5 num10 num10 num0 (1)
ag__harvest_breed_end round13 stage5 (1)
[t=171.635s, 937384 KB] Plan length: 103 step(s).
[t=171.635s, 937384 KB] Plan cost: 1079
[t=171.635s, 937384 KB] Expanded 626406 state(s).
[t=171.635s, 937384 KB] Reopened 0 state(s).
[t=171.635s, 937384 KB] Evaluated 929564 state(s).
[t=171.635s, 937384 KB] Evaluations: 929564
[t=171.635s, 937384 KB] Generated 2914849 state(s).
[t=171.635s, 937384 KB] Dead ends: 0 state(s).
[t=171.635s, 937384 KB] Number of registered states: 929564
[t=171.635s, 937384 KB] Int hash set load factor: 929564/2097152 = 0.443251
[t=171.635s, 937384 KB] Int hash set resizes: 21
[t=171.635s, 937384 KB] Search time: 115.65s
[t=171.635s, 937384 KB] Total time: 171.635s
Solution found.
Peak memory: 937384 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 1079 

Successful plans:
Value: 1079
 sas_plan 1079 

validate exit code: 0

INFO     Planner time: 179.72s
