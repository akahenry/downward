INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.032s wall-clock]
3094 relevant atoms
3221 auxiliary atoms
6315 final queue length
10878 total queue pushes
Completing instantiation... [0.080s CPU, 0.070s wall-clock]
Instantiating: [0.120s CPU, 0.109s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.083s wall-clock]
3672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.043s wall-clock]
Reordering and filtering variables...
331 of 331 variables necessary.
15 of 18 mutex groups necessary.
2194 of 2194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.037s wall-clock]
Translator variables: 331
Translator derived variables: 0
Translator facts: 691
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 45
Translator operators: 2194
Translator axioms: 0
Translator task size: 21018
Translator peak memory: 44796 KB
Writing output... [0.010s CPU, 0.016s wall-clock]
Done! [0.300s CPU, 0.306s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0111738s, 11412 KB] done reading input!
[t=0.0111738s, 11808 KB] Generating patterns using: systematic pattern collection generator
[t=0.0111738s, 11808 KB] building causal graph...done! [t=0.00399046s]
[t=0.138986s, 40176 KB] Found 112486 SGA patterns.
[t=1.65777s, 41628 KB] Found 126142 interesting patterns.
[t=1.74566s, 41628 KB] systematic pattern collection generator number of patterns: 126142
[t=1.74566s, 41628 KB] systematic pattern collection generator total PDB size: 4814868
[t=1.75366s, 41628 KB] systematic pattern collection generator computation time: 1.73449s
[t=1.75366s, 41628 KB] Computing PDBs for pattern collection...
[t=71.9529s, 72160 KB] Done computing PDBs for pattern collection: 70.1992s
[t=79.8752s, 1527972 KB] Building successor generator...done!
[t=79.8832s, 1527972 KB] peak memory difference for successor generator creation: 0 KB
[t=79.8832s, 1527972 KB] time for successor generation creation: 0.00400561s
[t=79.8832s, 1527972 KB] Variables: 331
[t=79.8832s, 1527972 KB] FactPairs: 691
[t=79.8832s, 1527972 KB] Bytes per state: 44
[t=79.8832s, 1527972 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=79.8952s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 51
[t=79.8952s, 1527972 KB] g=0, 1 evaluated, 0 expanded
[t=79.8952s, 1527972 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 51
[t=79.8952s, 1527972 KB] pruning method: none
[t=79.9032s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 49
[t=79.9032s, 1527972 KB] g=1, 2 evaluated, 1 expanded
[t=80.1948s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 48
[t=80.1948s, 1527972 KB] g=2, 32 evaluated, 2 expanded
[t=83.511s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 44
[t=83.511s, 1527972 KB] g=14, 367 evaluated, 59 expanded
[t=83.9784s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 39
[t=83.9784s, 1527972 KB] g=14, 414 evaluated, 75 expanded
[t=95.2888s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 38
[t=95.2888s, 1527972 KB] g=41, 1554 evaluated, 248 expanded
[t=98.8565s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 33
[t=98.8565s, 1527972 KB] g=42, 1917 evaluated, 335 expanded
[t=189.592s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 31
[t=189.592s, 1527972 KB] g=73, 11228 evaluated, 1495 expanded
[t=258.793s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 29
[t=258.793s, 1527972 KB] g=104, 18413 evaluated, 2371 expanded
[t=313.354s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 28
[t=313.354s, 1527972 KB] g=135, 24183 evaluated, 3035 expanded
[t=323.77s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 27
[t=323.77s, 1527972 KB] g=135, 25278 evaluated, 3218 expanded
[t=324.928s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=324.928s, 1527972 KB] g=135, 25399 evaluated, 3239 expanded
[t=367.132s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=367.132s, 1527972 KB] g=165, 29866 evaluated, 3700 expanded
[t=389.04s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=389.04s, 1527972 KB] g=166, 32198 evaluated, 4090 expanded
[t=390.21s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=390.21s, 1527972 KB] g=166, 32318 evaluated, 4111 expanded
[t=480.256s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=480.256s, 1527972 KB] g=198, 41861 evaluated, 5017 expanded
[t=624.369s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=624.369s, 1527972 KB] g=229, 57502 evaluated, 6424 expanded
[t=700.789s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=700.789s, 1527972 KB] g=249, 65993 evaluated, 7202 expanded
[t=717.11s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=717.11s, 1527972 KB] g=260, 67693 evaluated, 7353 expanded
[t=741.971s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=741.971s, 1527972 KB] g=263, 70433 evaluated, 7630 expanded
[t=1160.46s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=1160.46s, 1527972 KB] g=279, 118735 evaluated, 14178 expanded
[t=1176.48s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=1176.48s, 1527972 KB] g=291, 120567 evaluated, 14335 expanded
[t=1176.85s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=1176.85s, 1527972 KB] g=294, 120611 evaluated, 14338 expanded
[t=1204.07s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=1204.07s, 1527972 KB] g=311, 123813 evaluated, 14685 expanded
[t=1232.48s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=1232.48s, 1527972 KB] g=323, 127174 evaluated, 15135 expanded
[t=1233.5s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=1233.5s, 1527972 KB] g=326, 127295 evaluated, 15140 expanded
[t=1418.85s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=1418.85s, 1527972 KB] g=354, 149117 evaluated, 21174 expanded
[t=1418.95s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=1418.95s, 1527972 KB] g=355, 149129 evaluated, 21175 expanded
[t=1419.08s, 1527972 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=1419.08s, 1527972 KB] g=356, 149145 evaluated, 21176 expanded
[t=1419.1s, 1527972 KB] Solution found!
[t=1419.1s, 1527972 KB] Actual search time: 1339.21s
grasp left shot14 (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
leave left shot14 (1)
grasp left shot12 (1)
leave right shaker1 (1)
fill-shot shot12 ingredient2 left right dispenser2 (10)
leave left shot12 (1)
grasp left shot14 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail11 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot11 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail3 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot2 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail4 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot10 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient3 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail5 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot13 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot4 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail5 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
grasp left shaker1 (1)
shake cocktail10 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
leave right shot14 (1)
grasp left shaker1 (1)
shake cocktail6 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 (1)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail2 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient4 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail8 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 (1)
leave right shot14 (1)
grasp left shaker1 (1)
shake cocktail1 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail9 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 (1)
[t=1419.1s, 1527972 KB] Plan length: 149 step(s).
[t=1419.1s, 1527972 KB] Plan cost: 356
[t=1419.1s, 1527972 KB] Expanded 21177 state(s).
[t=1419.1s, 1527972 KB] Reopened 0 state(s).
[t=1419.1s, 1527972 KB] Evaluated 149148 state(s).
[t=1419.1s, 1527972 KB] Evaluations: 149148
[t=1419.1s, 1527972 KB] Generated 247353 state(s).
[t=1419.1s, 1527972 KB] Dead ends: 0 state(s).
[t=1419.1s, 1527972 KB] Number of registered states: 149148
[t=1419.1s, 1527972 KB] Int hash set load factor: 149148/262144 = 0.568954
[t=1419.1s, 1527972 KB] Int hash set resizes: 18
[t=1419.1s, 1527972 KB] Search time: 1339.22s
[t=1419.1s, 1527972 KB] Total time: 1419.1s
Solution found.
Peak memory: 1527972 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 356 

Successful plans:
Value: 356
 sas_plan 356 

validate exit code: 0

INFO     Planner time: 1419.59s
