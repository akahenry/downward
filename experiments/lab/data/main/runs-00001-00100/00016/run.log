INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.025s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.008s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.050s CPU, 0.054s wall-clock]
Generated 23 rules.
Computing model... [0.150s CPU, 0.153s wall-clock]
14411 relevant atoms
24285 auxiliary atoms
38696 final queue length
47795 total queue pushes
Completing instantiation... [0.160s CPU, 0.153s wall-clock]
Instantiating: [0.380s CPU, 0.375s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.010s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.006s wall-clock]
Translating task: [0.090s CPU, 0.094s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.080s CPU, 0.077s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
0 of 15 mutex groups necessary.
4874 of 4874 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.016s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 326
Translator goal facts: 13
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4874
Translator axioms: 0
Translator task size: 24386
Translator peak memory: 55444 KB
Writing output... [0.020s CPU, 0.019s wall-clock]
Done! [0.630s CPU, 0.627s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0145778s, 11928 KB] done reading input!
[t=0.0145778s, 12192 KB] Generating patterns using: systematic pattern collection generator
[t=0.0145778s, 12192 KB] building causal graph...done! [t=0s]
[t=0.0145778s, 12192 KB] Found 26 SGA patterns.
[t=0.0145778s, 12192 KB] Found 26 interesting patterns.
[t=0.0145778s, 12192 KB] systematic pattern collection generator number of patterns: 26
[t=0.0145778s, 12192 KB] systematic pattern collection generator total PDB size: 2548
[t=0.0145778s, 12192 KB] systematic pattern collection generator computation time: 0s
[t=0.0145778s, 12192 KB] Computing PDBs for pattern collection...
[t=0.0385614s, 12892 KB] Done computing PDBs for pattern collection: 0.0239836s
[t=0.0385614s, 13016 KB] Building successor generator...done!
[t=0.0385614s, 13448 KB] peak memory difference for successor generator creation: 432 KB
[t=0.0385614s, 13448 KB] time for successor generation creation: 0s
[t=0.0385614s, 13448 KB] Variables: 15
[t=0.0385614s, 13448 KB] FactPairs: 326
[t=0.0385614s, 13448 KB] Bytes per state: 8
[t=0.0385614s, 13448 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 32
[t=0.0385614s, 13448 KB] g=0, 1 evaluated, 0 expanded
[t=0.0385614s, 13448 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 32
[t=0.0385614s, 13448 KB] pruning method: none
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 31
[t=0.0385614s, 13448 KB] g=1, 2 evaluated, 1 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 30
[t=0.0385614s, 13448 KB] g=2, 8 evaluated, 2 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 29
[t=0.0385614s, 13448 KB] g=4, 13 evaluated, 4 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 28
[t=0.0385614s, 13448 KB] g=5, 23 evaluated, 5 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 27
[t=0.0385614s, 13448 KB] g=6, 29 evaluated, 6 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 26
[t=0.0385614s, 13448 KB] g=9, 91 evaluated, 17 expanded
[t=0.0385614s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0385614s, 13448 KB] g=11, 106 evaluated, 20 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.0425736s, 13448 KB] g=14, 357 evaluated, 82 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0425736s, 13448 KB] g=15, 382 evaluated, 86 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.0425736s, 13448 KB] g=16, 409 evaluated, 90 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.0425736s, 13448 KB] g=17, 422 evaluated, 91 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.0425736s, 13448 KB] g=18, 569 evaluated, 115 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.0425736s, 13448 KB] g=19, 577 evaluated, 116 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.0425736s, 13448 KB] g=22, 743 evaluated, 143 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.0425736s, 13448 KB] g=23, 750 evaluated, 144 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.0425736s, 13448 KB] g=24, 798 evaluated, 150 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.0425736s, 13448 KB] g=25, 845 evaluated, 155 expanded
[t=0.0425736s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.0425736s, 13448 KB] g=28, 879 evaluated, 159 expanded
[t=0.0465776s, 13448 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.0465776s, 13448 KB] g=31, 3590 evaluated, 929 expanded
[t=0.0745338s, 13728 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.0745338s, 13728 KB] g=32, 14175 evaluated, 4831 expanded
[t=0.0785347s, 14128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=0.0785347s, 14128 KB] g=33, 16552 evaluated, 5713 expanded
[t=0.14649s, 15040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=0.14649s, 15040 KB] g=36, 43656 evaluated, 19031 expanded
[t=5.97366s, 113268 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=5.97366s, 113268 KB] g=38, 2284548 evaluated, 1206110 expanded
Failed to allocate memory.
Memory limit has been reached.
Peak memory: 2039740 KB
Remove intermediate file output.sas
search exit code: 22

Driver aborting after search
INFO     Planner time: 139.98s
