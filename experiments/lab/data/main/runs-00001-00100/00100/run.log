INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.006s wall-clock]
501 relevant atoms
606 auxiliary atoms
1107 final queue length
1409 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
11 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.006s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
24 of 24 variables necessary.
40 of 44 mutex groups necessary.
256 of 256 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.001s wall-clock]
Translator variables: 24
Translator derived variables: 0
Translator facts: 124
Translator goal facts: 16
Translator mutex groups: 40
Translator total mutex groups size: 160
Translator operators: 256
Translator axioms: 0
Translator task size: 1720
Translator peak memory: 32884 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.032s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0s, 10544 KB] done reading input!
[t=0s, 10940 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 10940 KB] building causal graph...done! [t=0s]
[t=0s, 10940 KB] Found 108 SGA patterns.
[t=0s, 10940 KB] Found 108 interesting patterns.
[t=0s, 10940 KB] systematic pattern collection generator number of patterns: 108
[t=0s, 10940 KB] systematic pattern collection generator total PDB size: 3328
[t=0s, 10940 KB] systematic pattern collection generator computation time: 0s
[t=0s, 10940 KB] Computing PDBs for pattern collection...
[t=0.00798822s, 10940 KB] Done computing PDBs for pattern collection: 0.00798822s
[t=0.00798822s, 10940 KB] Building successor generator...done!
[t=0.00798822s, 10940 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00798822s, 10940 KB] time for successor generation creation: 0s
[t=0.00798822s, 10940 KB] Variables: 24
[t=0.00798822s, 10940 KB] FactPairs: 124
[t=0.00798822s, 10940 KB] Bytes per state: 8
[t=0.00798822s, 10940 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 29
[t=0.00798822s, 10940 KB] g=0, 1 evaluated, 0 expanded
[t=0.00798822s, 10940 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 29
[t=0.00798822s, 10940 KB] pruning method: none
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 28
[t=0.00798822s, 10940 KB] g=2, 3 evaluated, 1 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 27
[t=0.00798822s, 10940 KB] g=2, 5 evaluated, 1 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 26
[t=0.00798822s, 10940 KB] g=4, 14 evaluated, 2 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.00798822s, 10940 KB] g=6, 61 evaluated, 9 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.00798822s, 10940 KB] g=8, 66 evaluated, 10 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.00798822s, 10940 KB] g=10, 75 evaluated, 11 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.00798822s, 10940 KB] g=11, 83 evaluated, 12 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.00798822s, 10940 KB] g=18, 102 evaluated, 15 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.00798822s, 10940 KB] g=20, 110 evaluated, 16 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.00798822s, 10940 KB] g=24, 139 evaluated, 24 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.00798822s, 10940 KB] g=30, 185 evaluated, 35 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.00798822s, 10940 KB] g=32, 191 evaluated, 36 expanded
[t=0.00798822s, 10940 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.00798822s, 10940 KB] g=41, 226 evaluated, 57 expanded
[t=0.0159796s, 11084 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.0159796s, 11084 KB] g=44, 3051 evaluated, 2739 expanded
[t=0.0279755s, 11352 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.0279755s, 11352 KB] g=49, 8649 evaluated, 7811 expanded
[t=0.131923s, 12824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=0.131923s, 12824 KB] g=54, 49633 evaluated, 45839 expanded
[t=0.159903s, 14124 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=0.16389s, 14124 KB] g=71, 60774 evaluated, 56146 expanded
[t=3.0214s, 60272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=3.0214s, 60272 KB] g=66, 1060432 evaluated, 1001077 expanded
[t=3.02938s, 60272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=3.02938s, 60272 KB] g=64, 1063751 evaluated, 1004090 expanded
[t=96.5487s, 1515740 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=96.5487s, 1515740 KB] g=84, 32817771 evaluated, 31084779 expanded
[t=96.6206s, 1515740 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=96.6206s, 1515740 KB] g=82, 32844017 evaluated, 31109273 expanded
Failed to allocate memory.
Memory limit has been reached.
Peak memory: 1981804 KB
Remove intermediate file output.sas
search exit code: 22

Driver aborting after search
INFO     Planner time: 153.60s
