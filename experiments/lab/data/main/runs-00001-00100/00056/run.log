INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.004s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.027s wall-clock]
2300 relevant atoms
2393 auxiliary atoms
4693 final queue length
8087 total queue pushes
Completing instantiation... [0.050s CPU, 0.051s wall-clock]
Instantiating: [0.090s CPU, 0.085s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
238 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.055s wall-clock]
2672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
241 of 241 variables necessary.
12 of 15 mutex groups necessary.
1596 of 1596 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.015s wall-clock]
Translator variables: 241
Translator derived variables: 0
Translator facts: 505
Translator goal facts: 10
Translator mutex groups: 12
Translator total mutex groups size: 36
Translator operators: 1596
Translator axioms: 0
Translator task size: 15302
Translator peak memory: 41584 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.210s CPU, 0.210s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00798513s, 11224 KB] done reading input!
[t=0.00798513s, 11488 KB] Generating patterns using: systematic pattern collection generator
[t=0.00798513s, 11488 KB] building causal graph...done! [t=0s]
[t=0.00798513s, 12016 KB] Found 80 SGA patterns.
[t=0.00798513s, 12016 KB] Found 80 interesting patterns.
[t=0.0119924s, 12016 KB] systematic pattern collection generator number of patterns: 80
[t=0.0119924s, 12016 KB] systematic pattern collection generator total PDB size: 760
[t=0.0119924s, 12016 KB] systematic pattern collection generator computation time: 0.00400722s
[t=0.0119924s, 12016 KB] Computing PDBs for pattern collection...
[t=0.0279737s, 12016 KB] Done computing PDBs for pattern collection: 0.0159814s
[t=0.0319847s, 12016 KB] Building successor generator...done!
[t=0.0319847s, 12016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0319847s, 12016 KB] time for successor generation creation: 0s
[t=0.0319847s, 12016 KB] Variables: 241
[t=0.0319847s, 12016 KB] FactPairs: 505
[t=0.0319847s, 12016 KB] Bytes per state: 32
[t=0.0319847s, 12016 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0319847s, 12016 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.0319847s, 12016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0319847s, 12016 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.0319847s, 12016 KB] pruning method: none
[t=0.0679406s, 12688 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.0679406s, 12688 KB] g=27, 11091 evaluated, 4921 expanded
[t=0.0679406s, 12688 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.0679406s, 12688 KB] g=28, 11110 evaluated, 4922 expanded
[t=0.16786s, 14964 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.16786s, 14964 KB] g=58, 48214 evaluated, 19048 expanded
[t=0.16786s, 14964 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.16786s, 14964 KB] g=59, 48230 evaluated, 19049 expanded
[t=0.179851s, 15232 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.179851s, 15232 KB] g=60, 52664 evaluated, 20464 expanded
[t=0.227807s, 16680 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.227807s, 16680 KB] g=90, 70061 evaluated, 28106 expanded
[t=0.227807s, 16680 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.227807s, 16680 KB] g=91, 70077 evaluated, 28107 expanded
[t=0.339728s, 20892 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=0.339728s, 20892 KB] g=121, 111994 evaluated, 43647 expanded
[t=0.339728s, 20892 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=0.339728s, 20892 KB] g=122, 112010 evaluated, 43648 expanded
[t=0.451652s, 22156 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=0.451652s, 22156 KB] g=152, 153584 evaluated, 59604 expanded
[t=0.451652s, 22156 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=0.451652s, 22156 KB] g=153, 153600 evaluated, 59605 expanded
[t=0.611567s, 25528 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=0.611567s, 25528 KB] g=183, 215898 evaluated, 83788 expanded
[t=0.611567s, 25528 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=0.611567s, 25528 KB] g=184, 215915 evaluated, 83789 expanded
[t=0.759453s, 30404 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=0.759453s, 30404 KB] g=215, 269374 evaluated, 104026 expanded
[t=0.759453s, 30404 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=0.759453s, 30404 KB] g=216, 269389 evaluated, 104027 expanded
[t=0.851387s, 32428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=0.851387s, 32428 KB] g=246, 306914 evaluated, 118256 expanded
[t=0.851387s, 32428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=0.851387s, 32428 KB] g=247, 306930 evaluated, 118257 expanded
[t=1.03523s, 36196 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=1.03523s, 36196 KB] g=277, 376835 evaluated, 144527 expanded
[t=1.03523s, 36196 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=1.03523s, 36196 KB] g=278, 376849 evaluated, 144528 expanded
[t=1.03523s, 36196 KB] Solution found!
[t=1.03523s, 36196 KB] Actual search time: 1.00724s
grasp left shot11 (1)
fill-shot shot11 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot11 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient1 left right (1)
fill-shot shot11 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient2 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail4 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot11 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient2 left right (1)
fill-shot shot11 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient3 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail5 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot10 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot6 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail5 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot11 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient3 left right (1)
fill-shot shot11 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient2 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail7 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot2 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot11 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient2 left right (1)
fill-shot shot11 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient3 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail1 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot1 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail1 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot11 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient3 left right (1)
fill-shot shot11 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail8 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot9 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot11 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient4 left right (1)
fill-shot shot11 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient1 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail3 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
clean-shot shot11 ingredient1 left right (1)
fill-shot shot11 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot11 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient2 left right (1)
fill-shot shot11 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail6 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot4 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot11 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient4 left right (1)
fill-shot shot11 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient3 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail2 ingredient3 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot3 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot11 (1)
leave right shaker1 (1)
refill-shot shot11 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot11 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot11 ingredient3 left right (1)
fill-shot shot11 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 (1)
leave left shot11 (1)
shake cocktail9 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot7 right shaker1 l2 l1 (1)
[t=1.03922s, 36196 KB] Plan length: 116 step(s).
[t=1.03922s, 36196 KB] Plan cost: 278
[t=1.03922s, 36196 KB] Expanded 144529 state(s).
[t=1.03922s, 36196 KB] Reopened 0 state(s).
[t=1.03922s, 36196 KB] Evaluated 376849 state(s).
[t=1.03922s, 36196 KB] Evaluations: 376849
[t=1.03922s, 36196 KB] Generated 801199 state(s).
[t=1.03922s, 36196 KB] Dead ends: 0 state(s).
[t=1.03922s, 36196 KB] Number of registered states: 376849
[t=1.03922s, 36196 KB] Int hash set load factor: 376849/524288 = 0.718782
[t=1.03922s, 36196 KB] Int hash set resizes: 19
[t=1.03922s, 36196 KB] Search time: 1.00724s
[t=1.03922s, 36196 KB] Total time: 1.03922s
Solution found.
Peak memory: 36196 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 278 

Successful plans:
Value: 278
 sas_plan 278 

validate exit code: 0

INFO     Planner time: 1.31s
