INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.030s wall-clock]
3094 relevant atoms
3221 auxiliary atoms
6315 final queue length
10878 total queue pushes
Completing instantiation... [0.060s CPU, 0.061s wall-clock]
Instantiating: [0.100s CPU, 0.097s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.080s CPU, 0.071s wall-clock]
3672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.032s wall-clock]
Reordering and filtering variables...
331 of 331 variables necessary.
15 of 18 mutex groups necessary.
2194 of 2194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.027s wall-clock]
Translator variables: 331
Translator derived variables: 0
Translator facts: 691
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 45
Translator operators: 2194
Translator axioms: 0
Translator task size: 21018
Translator peak memory: 44796 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.260s CPU, 0.255s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0.00349397s, 10544 KB] reading input...
[t=0.0154763s, 11412 KB] done reading input!
[t=0.0154763s, 11808 KB] Generating patterns using: systematic pattern collection generator
[t=0.0154763s, 11808 KB] building causal graph...done! [t=0.0039902s]
[t=0.0194665s, 12600 KB] Found 108 SGA patterns.
[t=0.0194665s, 12600 KB] Found 108 interesting patterns.
[t=0.0194665s, 12600 KB] systematic pattern collection generator number of patterns: 108
[t=0.0194665s, 12600 KB] systematic pattern collection generator total PDB size: 1160
[t=0.0194665s, 12600 KB] systematic pattern collection generator computation time: 0.0039902s
[t=0.0194665s, 12600 KB] Computing PDBs for pattern collection...
[t=0.0554543s, 12600 KB] Done computing PDBs for pattern collection: 0.0359877s
[t=0.0594544s, 12600 KB] Building successor generator...done!
[t=0.0594544s, 12600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0594544s, 12600 KB] time for successor generation creation: 0s
[t=0.0594544s, 12600 KB] Variables: 331
[t=0.0594544s, 12600 KB] FactPairs: 691
[t=0.0594544s, 12600 KB] Bytes per state: 44
[t=0.0594544s, 12600 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0594544s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0594544s, 12600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0594544s, 12600 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0594544s, 12600 KB] pruning method: none
[t=0.0594544s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0594544s, 12600 KB] g=11, 164 evaluated, 10 expanded
[t=0.119441s, 13824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.119441s, 13824 KB] g=39, 16861 evaluated, 7082 expanded
[t=0.119441s, 13824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.119441s, 13824 KB] g=40, 16881 evaluated, 7083 expanded
[t=0.299402s, 18204 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.299402s, 18204 KB] g=70, 72698 evaluated, 28076 expanded
[t=0.299402s, 18204 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.299402s, 18204 KB] g=71, 72718 evaluated, 28077 expanded
[t=0.479366s, 22828 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.479366s, 22828 KB] g=101, 128924 evaluated, 49070 expanded
[t=0.479366s, 22828 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.479366s, 22828 KB] g=102, 128940 evaluated, 49071 expanded
[t=0.663277s, 26556 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.663277s, 26556 KB] g=132, 186247 evaluated, 70334 expanded
[t=0.663277s, 26556 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.663277s, 26556 KB] g=133, 186272 evaluated, 70335 expanded
[t=0.867228s, 33596 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.867228s, 33596 KB] g=163, 249815 evaluated, 93498 expanded
[t=0.867228s, 33596 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.867228s, 33596 KB] g=164, 249831 evaluated, 93499 expanded
[t=1.0472s, 36608 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=1.0472s, 36608 KB] g=194, 308756 evaluated, 115032 expanded
[t=1.0472s, 36740 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=1.0472s, 36740 KB] g=195, 308775 evaluated, 115033 expanded
[t=1.22716s, 40468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=1.22716s, 40468 KB] g=225, 367309 evaluated, 136296 expanded
[t=1.22716s, 40468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=1.22716s, 40468 KB] g=226, 367326 evaluated, 136297 expanded
[t=1.40313s, 44332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=1.40313s, 44332 KB] g=256, 426224 evaluated, 157560 expanded
[t=1.40313s, 44332 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=1.40313s, 44332 KB] g=257, 426246 evaluated, 157561 expanded
[t=1.42312s, 44736 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=1.42312s, 44736 KB] g=258, 432549 evaluated, 159732 expanded
[t=1.53109s, 54128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=1.53109s, 54128 KB] g=288, 463887 evaluated, 171055 expanded
[t=1.53109s, 54128 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=1.53109s, 54128 KB] g=289, 463907 evaluated, 171056 expanded
[t=1.72699s, 55240 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=1.72699s, 55240 KB] g=319, 530139 evaluated, 194489 expanded
[t=1.72699s, 55240 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=1.72699s, 55240 KB] g=320, 530159 evaluated, 194490 expanded
[t=1.96694s, 60436 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=1.96694s, 60436 KB] g=350, 610714 evaluated, 223791 expanded
[t=1.96694s, 60436 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=1.96694s, 60436 KB] g=351, 610730 evaluated, 223792 expanded
[t=1.96694s, 60436 KB] Solution found!
[t=1.96694s, 60436 KB] Actual search time: 1.90749s
grasp left shot12 (1)
fill-shot shot12 ingredient2 left right dispenser2 (10)
grasp right shot14 (1)
leave left shot12 (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail11 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot11 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail3 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail4 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail10 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot10 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail8 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient4 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail2 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail5 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot13 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot4 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail5 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail6 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient2 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail1 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 (1)
leave right shot14 (1)
shake cocktail9 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 (1)
[t=1.96694s, 60436 KB] Plan length: 144 step(s).
[t=1.96694s, 60436 KB] Plan cost: 351
[t=1.96694s, 60436 KB] Expanded 223793 state(s).
[t=1.96694s, 60436 KB] Reopened 0 state(s).
[t=1.96694s, 60436 KB] Evaluated 610733 state(s).
[t=1.96694s, 60436 KB] Evaluations: 610733
[t=1.96694s, 60436 KB] Generated 1274385 state(s).
[t=1.96694s, 60436 KB] Dead ends: 0 state(s).
[t=1.96694s, 60436 KB] Number of registered states: 610733
[t=1.96694s, 60436 KB] Int hash set load factor: 610733/1048576 = 0.58244
[t=1.96694s, 60436 KB] Int hash set resizes: 20
[t=1.96694s, 60436 KB] Search time: 1.90749s
[t=1.96694s, 60436 KB] Total time: 1.96694s
Solution found.
Peak memory: 60436 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 351 

Successful plans:
Value: 351
 sas_plan 351 

validate exit code: 0

INFO     Planner time: 2.29s
