INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.020s CPU, 0.029s wall-clock]
2784 relevant atoms
2893 auxiliary atoms
5677 final queue length
9793 total queue pushes
Completing instantiation... [0.050s CPU, 0.059s wall-clock]
Instantiating: [0.090s CPU, 0.094s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
292 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.080s CPU, 0.081s wall-clock]
3276 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.036s wall-clock]
Reordering and filtering variables...
295 of 295 variables necessary.
14 of 17 mutex groups necessary.
1958 of 1958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.020s wall-clock]
Translator variables: 295
Translator derived variables: 0
Translator facts: 617
Translator goal facts: 12
Translator mutex groups: 14
Translator total mutex groups size: 42
Translator operators: 1958
Translator axioms: 0
Translator task size: 18764
Translator peak memory: 43512 KB
Writing output... [0.010s CPU, 0.017s wall-clock]
Done! [0.260s CPU, 0.267s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0114615s, 11388 KB] done reading input!
[t=0.0154678s, 11652 KB] Generating patterns using: systematic pattern collection generator
[t=0.0154678s, 11652 KB] building causal graph...done! [t=0s]
[t=0.0154678s, 12324 KB] Found 100 SGA patterns.
[t=0.019488s, 12324 KB] Found 100 interesting patterns.
[t=0.019488s, 12324 KB] systematic pattern collection generator number of patterns: 100
[t=0.019488s, 12324 KB] systematic pattern collection generator total PDB size: 1024
[t=0.019488s, 12324 KB] systematic pattern collection generator computation time: 0.00402016s
[t=0.019488s, 12324 KB] Computing PDBs for pattern collection...
[t=0.0514168s, 12324 KB] Done computing PDBs for pattern collection: 0.0319289s
[t=0.0554241s, 12324 KB] Building successor generator...done!
[t=0.0554241s, 12324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0554241s, 12324 KB] time for successor generation creation: 0s
[t=0.0554241s, 12324 KB] Variables: 295
[t=0.0554241s, 12324 KB] FactPairs: 617
[t=0.0554241s, 12324 KB] Bytes per state: 40
[t=0.0554241s, 12324 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0554241s, 12324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0554241s, 12324 KB] g=0, 1 evaluated, 0 expanded
[t=0.0554241s, 12324 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.0554241s, 12324 KB] pruning method: none
[t=0.0554241s, 12324 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.0554241s, 12324 KB] g=11, 155 evaluated, 10 expanded
[t=0.115364s, 13716 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.115364s, 13716 KB] g=39, 19160 evaluated, 7011 expanded
[t=0.115364s, 13716 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.115364s, 13716 KB] g=40, 19183 evaluated, 7012 expanded
[t=0.291234s, 17692 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.291234s, 17692 KB] g=70, 72455 evaluated, 26184 expanded
[t=0.291234s, 17692 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.291234s, 17692 KB] g=71, 72472 evaluated, 26185 expanded
[t=0.291234s, 17692 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.291234s, 17692 KB] g=72, 72502 evaluated, 26186 expanded
[t=0.379135s, 19428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.379135s, 19428 KB] g=102, 100978 evaluated, 37144 expanded
[t=0.379135s, 19428 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.379135s, 19428 KB] g=103, 100999 evaluated, 37145 expanded
[t=0.551032s, 23796 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.555037s, 23796 KB] g=133, 156012 evaluated, 56563 expanded
[t=0.555037s, 23796 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=0.555037s, 23796 KB] g=134, 156030 evaluated, 56564 expanded
[t=0.718917s, 27276 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=0.718917s, 27276 KB] g=164, 211425 evaluated, 75982 expanded
[t=0.718917s, 27276 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=0.718917s, 27276 KB] g=165, 211446 evaluated, 75983 expanded
[t=0.918751s, 33068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=0.918751s, 33068 KB] g=195, 272757 evaluated, 97301 expanded
[t=0.918751s, 33068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=0.918751s, 33068 KB] g=196, 272778 evaluated, 97302 expanded
[t=1.11054s, 36812 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=1.11054s, 36812 KB] g=226, 334358 evaluated, 118620 expanded
[t=1.11054s, 36812 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=1.11054s, 36812 KB] g=227, 334378 evaluated, 118621 expanded
[t=1.29438s, 40684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=1.29438s, 40684 KB] g=257, 396220 evaluated, 139939 expanded
[t=1.29438s, 40684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=1.29438s, 40684 KB] g=258, 396240 evaluated, 139940 expanded
[t=1.5222s, 51016 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=1.5222s, 51016 KB] g=288, 458351 evaluated, 161258 expanded
[t=1.5222s, 51016 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=1.5222s, 51016 KB] g=289, 458371 evaluated, 161259 expanded
[t=1.8858s, 55048 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=1.88978s, 55048 KB] g=324, 564161 evaluated, 201654 expanded
[t=1.88978s, 55048 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=1.88978s, 55048 KB] g=325, 564176 evaluated, 201655 expanded
[t=1.88978s, 55048 KB] Solution found!
[t=1.88978s, 55048 KB] Actual search time: 1.83436s
grasp left shot12 (1)
fill-shot shot12 ingredient4 left right dispenser4 (10)
grasp right shot13 (1)
leave left shot12 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail6 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail7 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot9 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail7 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail2 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient4 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail10 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail3 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail4 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail5 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail5 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail1 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot3 left shaker1 l2 l1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot13 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 (1)
leave right shot13 (1)
shake cocktail9 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot10 left shaker1 l2 l1 (1)
[t=1.88978s, 55048 KB] Plan length: 136 step(s).
[t=1.88978s, 55048 KB] Plan cost: 325
[t=1.88978s, 55048 KB] Expanded 201656 state(s).
[t=1.88978s, 55048 KB] Reopened 0 state(s).
[t=1.88978s, 55048 KB] Evaluated 564179 state(s).
[t=1.88978s, 55048 KB] Evaluations: 564179
[t=1.88978s, 55048 KB] Generated 1155047 state(s).
[t=1.88978s, 55048 KB] Dead ends: 0 state(s).
[t=1.88978s, 55048 KB] Number of registered states: 564179
[t=1.88978s, 55048 KB] Int hash set load factor: 564179/1048576 = 0.538043
[t=1.88978s, 55048 KB] Int hash set resizes: 20
[t=1.88978s, 55048 KB] Search time: 1.83436s
[t=1.88978s, 55048 KB] Total time: 1.88978s
Solution found.
Peak memory: 55048 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 325 

Successful plans:
Value: 325
 sas_plan 325 

validate exit code: 0

INFO     Planner time: 2.22s
