INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.037s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.070s CPU, 0.076s wall-clock]
Instantiating: [0.110s CPU, 0.119s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.080s CPU, 0.088s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.052s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.026s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45200 KB
Writing output... [0.010s CPU, 0.016s wall-clock]
Done! [0.320s CPU, 0.324s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0109441s, 11556 KB] done reading input!
[t=0.0149497s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.0149497s, 11820 KB] building causal graph...done! [t=0s]
[t=0.0149497s, 12752 KB] Found 112 SGA patterns.
[t=0.0189389s, 12752 KB] Found 112 interesting patterns.
[t=0.0189389s, 12752 KB] systematic pattern collection generator number of patterns: 112
[t=0.0189389s, 12752 KB] systematic pattern collection generator total PDB size: 1288
[t=0.0189389s, 12752 KB] systematic pattern collection generator computation time: 0.00398917s
[t=0.0189389s, 12752 KB] Computing PDBs for pattern collection...
[t=0.054912s, 12752 KB] Done computing PDBs for pattern collection: 0.0359731s
[t=0.0629002s, 12752 KB] Building successor generator...done!
[t=0.0629002s, 12752 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0629002s, 12752 KB] time for successor generation creation: 0s
[t=0.0629002s, 12752 KB] Variables: 353
[t=0.0629002s, 12752 KB] FactPairs: 737
[t=0.0629002s, 12752 KB] Bytes per state: 48
[t=0.0629002s, 12752 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0629002s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0629002s, 12752 KB] g=0, 1 evaluated, 0 expanded
[t=0.0629002s, 12752 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 25
[t=0.0629002s, 12752 KB] pruning method: none
[t=0.126873s, 13964 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 24
[t=0.126873s, 13964 KB] g=27, 17327 evaluated, 7873 expanded
[t=0.126873s, 13964 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 23
[t=0.126873s, 13964 KB] g=28, 17346 evaluated, 7874 expanded
[t=0.358654s, 19012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 22
[t=0.358654s, 19012 KB] g=58, 79746 evaluated, 31840 expanded
[t=0.358654s, 19012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 21
[t=0.358654s, 19012 KB] g=59, 79768 evaluated, 31841 expanded
[t=0.614414s, 24956 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 20
[t=0.614414s, 24956 KB] g=89, 149562 evaluated, 57961 expanded
[t=0.614414s, 24956 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 19
[t=0.614414s, 24956 KB] g=90, 149582 evaluated, 57962 expanded
[t=0.614414s, 24956 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 18
[t=0.614414s, 24956 KB] g=91, 149612 evaluated, 57963 expanded
[t=0.722316s, 26944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 17
[t=0.722316s, 26944 KB] g=121, 178821 evaluated, 70977 expanded
[t=0.722316s, 26944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 16
[t=0.722316s, 26944 KB] g=122, 178844 evaluated, 70978 expanded
[t=0.958088s, 33840 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 15
[t=0.958088s, 33840 KB] g=152, 242291 evaluated, 94640 expanded
[t=0.958088s, 33840 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 14
[t=0.958088s, 33840 KB] g=153, 242309 evaluated, 94641 expanded
[t=0.958088s, 33840 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 13
[t=0.958088s, 33840 KB] g=154, 242335 evaluated, 94642 expanded
[t=1.08197s, 35768 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 12
[t=1.08197s, 35768 KB] g=185, 277671 evaluated, 109092 expanded
[t=1.08197s, 35768 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 11
[t=1.08197s, 35768 KB] g=186, 277692 evaluated, 109093 expanded
[t=1.10595s, 36300 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 10
[t=1.10595s, 36300 KB] g=187, 284979 evaluated, 111552 expanded
[t=1.21786s, 38560 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 9
[t=1.21786s, 38560 KB] g=217, 318029 evaluated, 124262 expanded
[t=1.21786s, 38560 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 8
[t=1.21786s, 38560 KB] g=218, 318050 evaluated, 124263 expanded
[t=1.47363s, 43756 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 7
[t=1.47363s, 43756 KB] g=248, 391797 evaluated, 150687 expanded
[t=1.47363s, 43756 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 6
[t=1.47363s, 43756 KB] g=249, 391818 evaluated, 150688 expanded
[t=1.80131s, 55536 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 5
[t=1.80131s, 55536 KB] g=279, 482060 evaluated, 183738 expanded
[t=1.80131s, 55536 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 4
[t=1.80131s, 55536 KB] g=280, 482078 evaluated, 183739 expanded
[t=2.02111s, 58608 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 3
[t=2.02111s, 58608 KB] g=310, 547282 evaluated, 207476 expanded
[t=2.02111s, 58608 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 2
[t=2.02511s, 58608 KB] g=311, 547302 evaluated, 207477 expanded
[t=2.49663s, 68180 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 1
[t=2.49663s, 68180 KB] g=341, 686519 evaluated, 257757 expanded
[t=2.49663s, 68180 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=normal)): 0
[t=2.49663s, 68180 KB] g=342, 686537 evaluated, 257758 expanded
[t=2.49663s, 68180 KB] Solution found!
[t=2.49663s, 68180 KB] Actual search time: 2.43373s
grasp left shot15 (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail8 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot10 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail2 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail9 ingredient1 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot12 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail9 shot2 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail9 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail11 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot3 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail6 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot1 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail6 shot13 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail6 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail3 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot14 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail3 shot4 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail3 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail7 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot6 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail1 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot11 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail1 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail10 ingredient3 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail4 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot9 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail5 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot7 right shaker1 l2 l1 (1)
[t=2.49663s, 68180 KB] Plan length: 144 step(s).
[t=2.49663s, 68180 KB] Plan cost: 342
[t=2.49663s, 68180 KB] Expanded 257759 state(s).
[t=2.49663s, 68180 KB] Reopened 0 state(s).
[t=2.49663s, 68180 KB] Evaluated 686537 state(s).
[t=2.49663s, 68180 KB] Evaluations: 686537
[t=2.49663s, 68180 KB] Generated 1459076 state(s).
[t=2.49663s, 68180 KB] Dead ends: 0 state(s).
[t=2.49663s, 68180 KB] Number of registered states: 686537
[t=2.49663s, 68180 KB] Int hash set load factor: 686537/1048576 = 0.654733
[t=2.49663s, 68180 KB] Int hash set resizes: 20
[t=2.49663s, 68180 KB] Search time: 2.43373s
[t=2.49663s, 68180 KB] Total time: 2.49663s
Solution found.
Peak memory: 68180 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 342 

Successful plans:
Value: 342
 sas_plan 342 

validate exit code: 0

INFO     Planner time: 2.89s
