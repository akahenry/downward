INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.029s wall-clock]
2784 relevant atoms
2893 auxiliary atoms
5677 final queue length
9793 total queue pushes
Completing instantiation... [0.070s CPU, 0.066s wall-clock]
Instantiating: [0.100s CPU, 0.102s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
292 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.078s wall-clock]
3276 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.041s wall-clock]
Reordering and filtering variables...
295 of 295 variables necessary.
14 of 17 mutex groups necessary.
1958 of 1958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.019s wall-clock]
Translator variables: 295
Translator derived variables: 0
Translator facts: 617
Translator goal facts: 12
Translator mutex groups: 14
Translator total mutex groups size: 42
Translator operators: 1958
Translator axioms: 0
Translator task size: 18764
Translator peak memory: 43516 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.270s CPU, 0.271s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.00772983s, 11388 KB] done reading input!
[t=0.0117152s, 12320 KB] Simplifying 7194 unary operators... done! [6166 unary operators]
[t=0.0157243s, 12584 KB] time to simplify: 0.004009s
[t=0.0157243s, 12584 KB] Initializing additive heuristic...
[t=0.0157243s, 12584 KB] Initializing FF heuristic...
[t=0.0157243s, 12584 KB] Building successor generator...done!
[t=0.0157243s, 12584 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0157243s, 12584 KB] time for successor generation creation: 0s
[t=0.0157243s, 12584 KB] Variables: 295
[t=0.0157243s, 12584 KB] FactPairs: 617
[t=0.0157243s, 12584 KB] Bytes per state: 40
[t=0.0157243s, 12584 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0157243s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.0157243s, 12584 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157243s, 12584 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.0157243s, 12584 KB] pruning method: none
[t=0.0157243s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.0157243s, 12584 KB] g=1, 10 evaluated, 1 expanded
[t=0.0316981s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.0316981s, 12584 KB] g=13, 131 evaluated, 20 expanded
[t=0.0357049s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.0357049s, 12584 KB] g=23, 164 evaluated, 22 expanded
[t=0.0836575s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=0.0836575s, 12584 KB] g=36, 544 evaluated, 78 expanded
[t=37.1337s, 34172 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=37.1337s, 34172 KB] g=47, 286016 evaluated, 59547 expanded
[t=37.1337s, 34172 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=37.1337s, 34172 KB] g=49, 286035 evaluated, 59549 expanded
[t=301.959s, 194880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=301.959s, 194880 KB] g=78, 2411925 evaluated, 481342 expanded
[t=301.959s, 194880 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=301.959s, 194880 KB] g=80, 2411944 evaluated, 481344 expanded
[t=513.398s, 335652 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=513.398s, 335652 KB] g=110, 4151753 evaluated, 823523 expanded
[t=513.398s, 335652 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=513.398s, 335652 KB] g=112, 4151773 evaluated, 823525 expanded
[t=634.692s, 398732 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=634.692s, 398732 KB] g=142, 5167901 evaluated, 1021879 expanded
[t=634.696s, 398732 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=634.696s, 398732 KB] g=144, 5167921 evaluated, 1021881 expanded
[t=704.191s, 435148 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=704.191s, 435148 KB] g=176, 5755236 evaluated, 1133875 expanded
[t=740.037s, 454204 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=740.037s, 454204 KB] g=196, 6062583 evaluated, 1190986 expanded
[t=741.012s, 454744 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=741.012s, 454744 KB] g=208, 6071160 evaluated, 1192788 expanded
[t=769.242s, 470292 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=769.242s, 470292 KB] g=216, 6322111 evaluated, 1239834 expanded
[t=769.277s, 470292 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=769.277s, 470292 KB] g=228, 6322429 evaluated, 1239855 expanded
[t=769.277s, 470292 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=769.277s, 470292 KB] g=238, 6322446 evaluated, 1239856 expanded
[t=769.277s, 470292 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=769.277s, 470292 KB] g=239, 6322450 evaluated, 1239857 expanded
[t=962.843s, 644088 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=962.843s, 644088 KB] g=276, 8072594 evaluated, 1623788 expanded
[t=962.843s, 644088 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=962.843s, 644088 KB] g=277, 8072598 evaluated, 1623789 expanded
[t=1088.92s, 714388 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=1088.92s, 714388 KB] g=316, 9211842 evaluated, 1884899 expanded
[t=1088.92s, 714388 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=1088.92s, 714388 KB] g=317, 9211846 evaluated, 1884900 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=1092.26s, 716268 KB] g=338, 9242251 evaluated, 1891184 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=1092.26s, 716268 KB] g=340, 9242267 evaluated, 1891186 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=1092.26s, 716268 KB] g=342, 9242283 evaluated, 1891188 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=1092.26s, 716268 KB] g=343, 9242287 evaluated, 1891189 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=1092.26s, 716268 KB] g=345, 9242312 evaluated, 1891191 expanded
[t=1092.26s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=1092.26s, 716268 KB] g=346, 9242317 evaluated, 1891192 expanded
[t=1092.27s, 716268 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=1092.27s, 716268 KB] g=347, 9242335 evaluated, 1891193 expanded
[t=1092.27s, 716268 KB] Solution found!
[t=1092.27s, 716268 KB] Actual search time: 1092.25s
grasp right shot12 (1)
fill-shot shot12 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient4 right left dispenser4 (10)
leave right shot12 (1)
grasp right shot13 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail2 ingredient1 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail4 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail10 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail3 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail5 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail5 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient4 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail1 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail6 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot10 (1)
leave left shaker1 (1)
fill-shot shot10 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot10 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot10 ingredient1 right left (1)
leave right shot10 (1)
grasp right shot13 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail9 ingredient1 ingredient3 shaker1 left right (1)
grasp right shot10 (1)
pour-shaker-to-shot cocktail9 shot2 left shaker1 l2 l1 (1)
leave left shaker1 (1)
grasp left shot13 (1)
leave right shot10 (1)
grasp right shaker1 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
leave left shot13 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 (1)
leave left shot13 (1)
leave right shaker1 (1)
grasp right shot13 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shot10 (1)
leave right shot13 (1)
fill-shot shot10 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
leave left shot10 (1)
shake cocktail8 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot11 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail8 shot6 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail8 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp left shot10 (1)
pour-shot-to-used-shaker shot10 ingredient3 shaker1 left l1 l2 (1)
leave left shot10 (1)
shake cocktail7 ingredient3 ingredient2 shaker1 right left (1)
grasp left shot10 (1)
leave right shaker1 (1)
clean-shot shot10 ingredient3 left right (1)
grasp right shaker1 (1)
pour-shaker-to-shot cocktail7 shot10 right shaker1 l2 l1 (1)
[t=1092.27s, 716268 KB] Plan length: 154 step(s).
[t=1092.27s, 716268 KB] Plan cost: 343
[t=1092.27s, 716268 KB] Expanded 1891194 state(s).
[t=1092.27s, 716268 KB] Reopened 0 state(s).
[t=1092.27s, 716268 KB] Evaluated 9242336 state(s).
[t=1092.27s, 716268 KB] Evaluations: 9242336
[t=1092.27s, 716268 KB] Generated 14119653 state(s).
[t=1092.27s, 716268 KB] Dead ends: 310339 state(s).
[t=1092.27s, 716268 KB] Number of registered states: 9242336
[t=1092.27s, 716268 KB] Int hash set load factor: 9242336/16777216 = 0.550886
[t=1092.27s, 716268 KB] Int hash set resizes: 24
[t=1092.27s, 716268 KB] Search time: 1092.25s
[t=1092.27s, 716268 KB] Total time: 1092.27s
Solution found.
Peak memory: 716268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 343 

Successful plans:
Value: 343
 sas_plan 343 

validate exit code: 0

INFO     Planner time: 1092.65s
