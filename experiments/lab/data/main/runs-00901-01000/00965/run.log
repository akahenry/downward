INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.006s wall-clock]
741 relevant atoms
630 auxiliary atoms
1371 final queue length
1732 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.014s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
20 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.005s wall-clock]
10 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
0 of 1 mutex groups necessary.
400 of 400 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 60
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 400
Translator axioms: 0
Translator task size: 1311
Translator peak memory: 33128 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.027s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45992 KB] building causal graph...done! [t=0s]
[t=0s, 45992 KB] Found 40 SGA patterns.
[t=0.00400093s, 45992 KB] Found 295 interesting patterns.
[t=0.00400093s, 45992 KB] systematic pattern collection generator number of patterns: 295
[t=0.00400093s, 45992 KB] systematic pattern collection generator total PDB size: 38460
[t=0.00400093s, 45992 KB] systematic pattern collection generator computation time: 0.00400093s
[t=0.00400093s, 45992 KB] Computing PDBs for pattern collection...
[t=0.027974s, 46124 KB] Done computing PDBs for pattern collection: 0.0239731s
[t=0.0319568s, 48064 KB] Building successor generator...done!
[t=0.0319568s, 48064 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0319568s, 48064 KB] time for successor generation creation: 0s
[t=0.0319568s, 48064 KB] Variables: 21
[t=0.0319568s, 48064 KB] FactPairs: 60
[t=0.0319568s, 48064 KB] Bytes per state: 4
[t=0.0319568s, 48064 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 39
[t=0.0319568s, 48064 KB] g=0, 1 evaluated, 0 expanded
[t=0.0319568s, 48064 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 39
[t=0.0319568s, 48064 KB] pruning method: none
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 38
[t=0.0319568s, 48064 KB] g=1, 2 evaluated, 1 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 37
[t=0.0319568s, 48064 KB] g=2, 23 evaluated, 2 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 36
[t=0.0319568s, 48064 KB] g=2, 34 evaluated, 2 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 35
[t=0.0319568s, 48064 KB] g=3, 41 evaluated, 3 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 34
[t=0.0319568s, 48064 KB] g=4, 43 evaluated, 4 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 33
[t=0.0319568s, 48064 KB] g=5, 63 evaluated, 5 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 32
[t=0.0319568s, 48064 KB] g=6, 82 evaluated, 6 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 31
[t=0.0319568s, 48064 KB] g=7, 84 evaluated, 7 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 30
[t=0.0319568s, 48064 KB] g=8, 102 evaluated, 8 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 29
[t=0.0319568s, 48064 KB] g=9, 105 evaluated, 9 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 28
[t=0.0319568s, 48064 KB] g=9, 116 evaluated, 9 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 27
[t=0.0319568s, 48064 KB] g=10, 122 evaluated, 10 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 26
[t=0.0319568s, 48064 KB] g=11, 133 evaluated, 11 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 25
[t=0.0319568s, 48064 KB] g=12, 144 evaluated, 12 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 24
[t=0.0319568s, 48064 KB] g=13, 165 evaluated, 13 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 23
[t=0.0319568s, 48064 KB] g=14, 168 evaluated, 14 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 22
[t=0.0319568s, 48064 KB] g=15, 185 evaluated, 15 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 21
[t=0.0319568s, 48064 KB] g=16, 189 evaluated, 16 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.0319568s, 48064 KB] g=17, 205 evaluated, 17 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 19
[t=0.0319568s, 48064 KB] g=18, 211 evaluated, 18 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 18
[t=0.0319568s, 48064 KB] g=19, 225 evaluated, 19 expanded
[t=0.0319568s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 17
[t=0.0319568s, 48064 KB] g=20, 228 evaluated, 20 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.0359641s, 48064 KB] g=21, 245 evaluated, 21 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0359641s, 48064 KB] g=22, 251 evaluated, 22 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.0359641s, 48064 KB] g=23, 265 evaluated, 23 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.0359641s, 48064 KB] g=24, 275 evaluated, 24 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.0359641s, 48064 KB] g=24, 279 evaluated, 24 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.0359641s, 48064 KB] g=25, 286 evaluated, 25 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.0359641s, 48064 KB] g=26, 308 evaluated, 26 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.0359641s, 48064 KB] g=27, 320 evaluated, 27 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.0359641s, 48064 KB] g=28, 329 evaluated, 28 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.0359641s, 48064 KB] g=29, 341 evaluated, 29 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.0359641s, 48064 KB] g=30, 349 evaluated, 30 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.0359641s, 48064 KB] g=31, 359 evaluated, 31 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.0359641s, 48064 KB] g=32, 370 evaluated, 32 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.0359641s, 48064 KB] g=33, 385 evaluated, 33 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.0359641s, 48064 KB] g=34, 391 evaluated, 34 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.0359641s, 48064 KB] g=35, 394 evaluated, 35 expanded
[t=0.0359641s, 48064 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.0359641s, 48064 KB] g=36, 412 evaluated, 36 expanded
[t=0.0359641s, 48064 KB] Solution found!
[t=0.0359641s, 48064 KB] Actual search time: 0.00400729s
board f0 p9 (1)
up f0 f3 (1)
board f3 p0 (1)
board f3 p5 (1)
down f3 f0 (1)
depart f0 p0 (1)
up f0 f10 (1)
board f10 p3 (1)
up f10 f14 (1)
board f14 p7 (1)
down f14 f5 (1)
depart f5 p9 (1)
depart f5 p7 (1)
down f5 f2 (1)
board f2 p6 (1)
up f2 f11 (1)
depart f11 p5 (1)
down f11 f4 (1)
board f4 p1 (1)
down f4 f2 (1)
depart f2 p1 (1)
up f2 f13 (1)
board f13 p2 (1)
up f13 f14 (1)
depart f14 p3 (1)
depart f14 p2 (1)
down f14 f6 (1)
depart f6 p6 (1)
up f6 f15 (1)
board f15 p8 (1)
down f15 f4 (1)
depart f4 p8 (1)
up f4 f19 (1)
board f19 p4 (1)
down f19 f10 (1)
depart f10 p4 (1)
[t=0.0359641s, 48064 KB] Plan length: 36 step(s).
[t=0.0359641s, 48064 KB] Plan cost: 36
[t=0.0359641s, 48064 KB] Expanded 37 state(s).
[t=0.0359641s, 48064 KB] Reopened 0 state(s).
[t=0.0359641s, 48064 KB] Evaluated 412 state(s).
[t=0.0359641s, 48064 KB] Evaluations: 412
[t=0.0359641s, 48064 KB] Generated 730 state(s).
[t=0.0359641s, 48064 KB] Dead ends: 0 state(s).
[t=0.0359641s, 48064 KB] Number of registered states: 412
[t=0.0359641s, 48064 KB] Int hash set load factor: 412/512 = 0.804688
[t=0.0359641s, 48064 KB] Int hash set resizes: 9
[t=0.0359641s, 48064 KB] Search time: 0.00400729s
[t=0.0359641s, 48064 KB] Total time: 0.0359641s
Solution found.
Peak memory: 48064 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 36 

Successful plans:
Value: 36
 sas_plan 36 

validate exit code: 0

INFO     Planner time: 0.12s
