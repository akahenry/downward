INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
881 relevant atoms
737 auxiliary atoms
1618 final queue length
2059 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.010s wall-clock]
11 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.005s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
0 of 1 mutex groups necessary.
484 of 484 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 484
Translator axioms: 0
Translator task size: 1574
Translator peak memory: 33388 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.050s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00400075s, 45596 KB] done reading input!
[t=0.00400075s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00400075s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00400075s, 45992 KB] Found 44 SGA patterns.
[t=0.00400075s, 45992 KB] Found 374 interesting patterns.
[t=0.00400075s, 45992 KB] systematic pattern collection generator number of patterns: 374
[t=0.00400075s, 45992 KB] systematic pattern collection generator total PDB size: 54758
[t=0.00400075s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0.00400075s, 45992 KB] Computing PDBs for pattern collection...
[t=0.063936s, 46240 KB] Done computing PDBs for pattern collection: 0.0599352s
[t=0.0719208s, 48588 KB] Building successor generator...done!
[t=0.0719208s, 48588 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0719208s, 48588 KB] time for successor generation creation: 0s
[t=0.0719208s, 48588 KB] Variables: 23
[t=0.0719208s, 48588 KB] FactPairs: 66
[t=0.0719208s, 48588 KB] Bytes per state: 4
[t=0.0719208s, 48588 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0719208s, 48588 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 44
[t=0.0719208s, 48588 KB] g=0, 1 evaluated, 0 expanded
[t=0.0719208s, 48720 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 44
[t=0.0719208s, 48720 KB] pruning method: none
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 43
[t=0.0719208s, 48720 KB] g=1, 5 evaluated, 1 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 42
[t=0.0719208s, 48720 KB] g=1, 9 evaluated, 1 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 41
[t=0.0719208s, 48720 KB] g=2, 23 evaluated, 2 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 40
[t=0.0719208s, 48720 KB] g=3, 25 evaluated, 3 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 39
[t=0.0719208s, 48720 KB] g=4, 48 evaluated, 4 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 38
[t=0.0719208s, 48720 KB] g=4, 67 evaluated, 4 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 37
[t=0.0719208s, 48720 KB] g=5, 68 evaluated, 5 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 36
[t=0.0719208s, 48720 KB] g=6, 70 evaluated, 6 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 35
[t=0.0719208s, 48720 KB] g=7, 93 evaluated, 7 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 34
[t=0.0719208s, 48720 KB] g=7, 96 evaluated, 7 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 33
[t=0.0719208s, 48720 KB] g=8, 113 evaluated, 8 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 32
[t=0.0719208s, 48720 KB] g=9, 136 evaluated, 9 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 31
[t=0.0719208s, 48720 KB] g=10, 138 evaluated, 10 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 30
[t=0.0719208s, 48720 KB] g=11, 158 evaluated, 11 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 29
[t=0.0719208s, 48720 KB] g=12, 167 evaluated, 12 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 28
[t=0.0719208s, 48720 KB] g=13, 180 evaluated, 13 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 27
[t=0.0719208s, 48720 KB] g=14, 190 evaluated, 14 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 26
[t=0.0719208s, 48720 KB] g=15, 202 evaluated, 15 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 25
[t=0.0719208s, 48720 KB] g=16, 203 evaluated, 16 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 24
[t=0.0719208s, 48720 KB] g=17, 224 evaluated, 17 expanded
[t=0.0719208s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 23
[t=0.0719208s, 48720 KB] g=18, 234 evaluated, 18 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 22
[t=0.0759185s, 48720 KB] g=19, 246 evaluated, 19 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 21
[t=0.0759185s, 48720 KB] g=20, 249 evaluated, 20 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.0759185s, 48720 KB] g=21, 268 evaluated, 21 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 19
[t=0.0759185s, 48720 KB] g=22, 272 evaluated, 22 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 18
[t=0.0759185s, 48720 KB] g=23, 290 evaluated, 23 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 17
[t=0.0759185s, 48720 KB] g=24, 304 evaluated, 24 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.0759185s, 48720 KB] g=24, 309 evaluated, 24 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0759185s, 48720 KB] g=25, 312 evaluated, 25 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.0759185s, 48720 KB] g=26, 335 evaluated, 26 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.0759185s, 48720 KB] g=27, 340 evaluated, 27 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.0759185s, 48720 KB] g=28, 357 evaluated, 28 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.0759185s, 48720 KB] g=29, 362 evaluated, 29 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.0759185s, 48720 KB] g=30, 379 evaluated, 30 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.0759185s, 48720 KB] g=31, 388 evaluated, 31 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.0759185s, 48720 KB] g=32, 401 evaluated, 32 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.0759185s, 48720 KB] g=33, 414 evaluated, 33 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.0759185s, 48720 KB] g=34, 423 evaluated, 34 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.0759185s, 48720 KB] g=35, 437 evaluated, 35 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.0759185s, 48720 KB] g=36, 445 evaluated, 36 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.0759185s, 48720 KB] g=37, 447 evaluated, 37 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.0759185s, 48720 KB] g=38, 467 evaluated, 38 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.0759185s, 48720 KB] g=39, 480 evaluated, 39 expanded
[t=0.0759185s, 48720 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.0759185s, 48720 KB] g=40, 489 evaluated, 40 expanded
[t=0.0759185s, 48720 KB] Solution found!
[t=0.0759185s, 48720 KB] Actual search time: 0.00399763s
up f0 f16 (1)
board f16 p5 (1)
board f16 p9 (1)
up f16 f21 (1)
board f21 p0 (1)
board f21 p2 (1)
down f21 f12 (1)
board f12 p3 (1)
depart f12 p0 (1)
down f12 f1 (1)
depart f1 p5 (1)
up f1 f17 (1)
depart f17 p9 (1)
down f17 f2 (1)
board f2 p1 (1)
down f2 f0 (1)
depart f0 p1 (1)
up f0 f18 (1)
board f18 p7 (1)
down f18 f10 (1)
depart f10 p7 (1)
down f10 f3 (1)
board f3 p4 (1)
up f3 f7 (1)
board f7 p6 (1)
depart f7 p4 (1)
down f7 f4 (1)
board f4 p10 (1)
up f4 f10 (1)
depart f10 p6 (1)
down f10 f8 (1)
depart f8 p2 (1)
up f8 f14 (1)
depart f14 p10 (1)
down f14 f9 (1)
board f9 p8 (1)
down f9 f1 (1)
depart f1 p8 (1)
up f1 f20 (1)
depart f20 p3 (1)
[t=0.0759185s, 48720 KB] Plan length: 40 step(s).
[t=0.0759185s, 48720 KB] Plan cost: 40
[t=0.0759185s, 48720 KB] Expanded 41 state(s).
[t=0.0759185s, 48720 KB] Reopened 0 state(s).
[t=0.0759185s, 48720 KB] Evaluated 489 state(s).
[t=0.0759185s, 48720 KB] Evaluations: 489
[t=0.0759185s, 48720 KB] Generated 881 state(s).
[t=0.0759185s, 48720 KB] Dead ends: 0 state(s).
[t=0.0759185s, 48720 KB] Number of registered states: 489
[t=0.0759185s, 48720 KB] Int hash set load factor: 489/512 = 0.955078
[t=0.0759185s, 48720 KB] Int hash set resizes: 9
[t=0.0759185s, 48720 KB] Search time: 0.00399763s
[t=0.0759185s, 48720 KB] Total time: 0.0759185s
Solution found.
Peak memory: 48720 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 40 

Successful plans:
Value: 40
 sas_plan 40 

validate exit code: 0

INFO     Planner time: 0.21s
