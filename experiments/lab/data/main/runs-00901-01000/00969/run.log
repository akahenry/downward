INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.007s wall-clock]
881 relevant atoms
737 auxiliary atoms
1618 final queue length
2059 total queue pushes
Completing instantiation... [0.010s CPU, 0.007s wall-clock]
Instantiating: [0.020s CPU, 0.016s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.006s wall-clock]
11 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
0 of 1 mutex groups necessary.
484 of 484 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 484
Translator axioms: 0
Translator task size: 1574
Translator peak memory: 33388 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45992 KB] building causal graph...done! [t=0s]
[t=0s, 45992 KB] Found 44 SGA patterns.
[t=0s, 45992 KB] Found 374 interesting patterns.
[t=0s, 45992 KB] systematic pattern collection generator number of patterns: 374
[t=0s, 45992 KB] systematic pattern collection generator total PDB size: 54758
[t=0s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0479693s, 47244 KB] Done computing PDBs for pattern collection: 0.0479693s
[t=0.0559625s, 48936 KB] Building successor generator...done!
[t=0.0559625s, 48936 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0559625s, 48936 KB] time for successor generation creation: 0s
[t=0.0559625s, 48936 KB] Variables: 23
[t=0.0559625s, 48936 KB] FactPairs: 66
[t=0.0559625s, 48936 KB] Bytes per state: 4
[t=0.0559625s, 48936 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 43
[t=0.0559625s, 48936 KB] g=0, 1 evaluated, 0 expanded
[t=0.0559625s, 48936 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 43
[t=0.0559625s, 48936 KB] pruning method: none
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 42
[t=0.0559625s, 48936 KB] g=1, 2 evaluated, 1 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 41
[t=0.0559625s, 48936 KB] g=2, 24 evaluated, 2 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 40
[t=0.0559625s, 48936 KB] g=2, 29 evaluated, 2 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 39
[t=0.0559625s, 48936 KB] g=3, 45 evaluated, 3 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 38
[t=0.0559625s, 48936 KB] g=4, 47 evaluated, 4 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 37
[t=0.0559625s, 48936 KB] g=5, 70 evaluated, 5 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 36
[t=0.0559625s, 48936 KB] g=5, 77 evaluated, 5 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 35
[t=0.0559625s, 48936 KB] g=6, 90 evaluated, 6 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 34
[t=0.0559625s, 48936 KB] g=7, 92 evaluated, 7 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 33
[t=0.0559625s, 48936 KB] g=7, 104 evaluated, 7 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 32
[t=0.0559625s, 48936 KB] g=8, 114 evaluated, 8 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 31
[t=0.0559625s, 48936 KB] g=9, 138 evaluated, 9 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 30
[t=0.0559625s, 48936 KB] g=10, 161 evaluated, 10 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 29
[t=0.0559625s, 48936 KB] g=11, 163 evaluated, 11 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 28
[t=0.0559625s, 48936 KB] g=12, 183 evaluated, 12 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 27
[t=0.0559625s, 48936 KB] g=13, 186 evaluated, 13 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 26
[t=0.0559625s, 48936 KB] g=14, 205 evaluated, 14 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 25
[t=0.0559625s, 48936 KB] g=15, 209 evaluated, 15 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 24
[t=0.0559625s, 48936 KB] g=15, 221 evaluated, 15 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 23
[t=0.0559625s, 48936 KB] g=16, 227 evaluated, 16 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 22
[t=0.0559625s, 48936 KB] g=17, 234 evaluated, 17 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 21
[t=0.0559625s, 48936 KB] g=18, 251 evaluated, 18 expanded
[t=0.0559625s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.0559625s, 48936 KB] g=19, 274 evaluated, 19 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 19
[t=0.0599621s, 48936 KB] g=20, 280 evaluated, 20 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 18
[t=0.0599621s, 48936 KB] g=21, 296 evaluated, 21 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 17
[t=0.0599621s, 48936 KB] g=22, 304 evaluated, 22 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.0599621s, 48936 KB] g=23, 318 evaluated, 23 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0599621s, 48936 KB] g=24, 328 evaluated, 24 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.0599621s, 48936 KB] g=25, 341 evaluated, 25 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.0599621s, 48936 KB] g=26, 352 evaluated, 26 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.0599621s, 48936 KB] g=27, 364 evaluated, 27 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.0599621s, 48936 KB] g=28, 377 evaluated, 28 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.0599621s, 48936 KB] g=29, 386 evaluated, 29 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.0599621s, 48936 KB] g=30, 400 evaluated, 30 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.0599621s, 48936 KB] g=31, 409 evaluated, 31 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.0599621s, 48936 KB] g=32, 427 evaluated, 32 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.0599621s, 48936 KB] g=33, 433 evaluated, 33 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.0599621s, 48936 KB] g=34, 452 evaluated, 34 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.0599621s, 48936 KB] g=35, 456 evaluated, 35 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.0599621s, 48936 KB] g=36, 476 evaluated, 36 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.0599621s, 48936 KB] g=37, 478 evaluated, 37 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.0599621s, 48936 KB] g=38, 491 evaluated, 38 expanded
[t=0.0599621s, 48936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.0599621s, 48936 KB] g=39, 500 evaluated, 39 expanded
[t=0.0599621s, 48936 KB] Solution found!
[t=0.0599621s, 48936 KB] Actual search time: 0.00399968s
board f0 p0 (1)
up f0 f14 (1)
board f14 p8 (1)
board f14 p9 (1)
down f14 f4 (1)
board f4 p2 (1)
up f4 f17 (1)
board f17 p4 (1)
depart f17 p9 (1)
depart f17 p2 (1)
down f17 f1 (1)
depart f1 p0 (1)
up f1 f11 (1)
board f11 p1 (1)
up f11 f16 (1)
board f16 p10 (1)
down f16 f13 (1)
board f13 p3 (1)
depart f13 p10 (1)
down f13 f2 (1)
depart f2 p8 (1)
up f2 f15 (1)
board f15 p6 (1)
down f15 f4 (1)
board f4 p7 (1)
up f4 f15 (1)
depart f15 p7 (1)
down f15 f7 (1)
depart f7 p4 (1)
up f7 f16 (1)
depart f16 p1 (1)
up f16 f17 (1)
depart f17 p6 (1)
up f17 f18 (1)
depart f18 p3 (1)
up f18 f20 (1)
board f20 p5 (1)
down f20 f2 (1)
depart f2 p5 (1)
[t=0.0599621s, 48936 KB] Plan length: 39 step(s).
[t=0.0599621s, 48936 KB] Plan cost: 39
[t=0.0599621s, 48936 KB] Expanded 40 state(s).
[t=0.0599621s, 48936 KB] Reopened 0 state(s).
[t=0.0599621s, 48936 KB] Evaluated 500 state(s).
[t=0.0599621s, 48936 KB] Evaluations: 500
[t=0.0599621s, 48936 KB] Generated 873 state(s).
[t=0.0599621s, 48936 KB] Dead ends: 0 state(s).
[t=0.0599621s, 48936 KB] Number of registered states: 500
[t=0.0599621s, 48936 KB] Int hash set load factor: 500/512 = 0.976562
[t=0.0599621s, 48936 KB] Int hash set resizes: 9
[t=0.0599621s, 48936 KB] Search time: 0.00399968s
[t=0.0599621s, 48936 KB] Total time: 0.0599621s
Solution found.
Peak memory: 48936 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 39 

Successful plans:
Value: 39
 sas_plan 39 

validate exit code: 0

INFO     Planner time: 0.14s
