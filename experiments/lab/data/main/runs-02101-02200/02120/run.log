INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 26 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
881 relevant atoms
737 auxiliary atoms
1618 final queue length
2059 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.011s wall-clock]
11 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.005s wall-clock]
Reordering and filtering variables...
23 of 23 variables necessary.
0 of 1 mutex groups necessary.
484 of 484 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 23
Translator derived variables: 0
Translator facts: 66
Translator goal facts: 11
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 484
Translator axioms: 0
Translator task size: 1574
Translator peak memory: 33388 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.050s CPU, 0.053s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0.00398091s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00398091s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00398091s, 45992 KB] Found 44 SGA patterns.
[t=0.00398091s, 45992 KB] Found 374 interesting patterns.
[t=0.00578188s, 45992 KB] systematic pattern collection generator number of patterns: 374
[t=0.00587645s, 45992 KB] systematic pattern collection generator total PDB size: 54758
[t=0.00590542s, 45992 KB] systematic pattern collection generator computation time: 0.00180097s
[t=0.00592401s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0714575s, 46228 KB] Done computing PDBs for pattern collection: 0.0655335s
[t=0.0753276s, 48584 KB] Tie breaking: 2
[t=0.0777487s, 48584 KB] Building successor generator...done!
[t=0.0779287s, 48716 KB] peak memory difference for successor generator creation: 132 KB
[t=0.0779796s, 48716 KB] time for successor generation creation: 0s
[t=0.0780023s, 48716 KB] Variables: 23
[t=0.0780023s, 48716 KB] FactPairs: 66
[t=0.0780437s, 48716 KB] Bytes per state: 4
[t=0.078062s, 48716 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0792165s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 26
[t=0.0792165s, 48716 KB] g=0, 1 evaluated, 0 expanded
[t=0.0792165s, 48716 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 26
[t=0.0792165s, 48716 KB] pruning method: none
[t=0.115188s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 25
[t=0.115188s, 48716 KB] g=2, 23 evaluated, 7 expanded
[t=0.155162s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 24
[t=0.155162s, 48716 KB] g=4, 45 evaluated, 9 expanded
[t=0.202127s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 23
[t=0.202375s, 48716 KB] g=6, 68 evaluated, 17 expanded
[t=0.238053s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 22
[t=0.238053s, 48716 KB] g=8, 91 evaluated, 29 expanded
[t=0.274031s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 21
[t=0.274031s, 48716 KB] g=10, 114 evaluated, 42 expanded
[t=0.310002s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.311214s, 48716 KB] g=12, 137 evaluated, 58 expanded
[t=0.355376s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 19
[t=0.357008s, 48716 KB] g=14, 159 evaluated, 68 expanded
[t=0.395279s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 18
[t=0.399277s, 48716 KB] g=16, 182 evaluated, 79 expanded
[t=0.442747s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 17
[t=0.442965s, 48716 KB] g=18, 207 evaluated, 97 expanded
[t=0.488348s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.490872s, 48716 KB] g=20, 232 evaluated, 114 expanded
[t=0.54822s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.54822s, 48716 KB] g=22, 279 evaluated, 133 expanded
[t=0.58819s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.589188s, 48716 KB] g=24, 304 evaluated, 147 expanded
[t=0.62413s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.627645s, 48716 KB] g=26, 330 evaluated, 162 expanded
[t=0.628061s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.628061s, 48716 KB] g=27, 332 evaluated, 163 expanded
[t=0.672041s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.672041s, 48716 KB] g=28, 362 evaluated, 164 expanded
[t=0.692017s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.694064s, 48716 KB] g=29, 375 evaluated, 165 expanded
[t=0.71997s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.721226s, 48716 KB] g=30, 397 evaluated, 166 expanded
[t=0.723918s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.724686s, 48716 KB] g=31, 399 evaluated, 167 expanded
[t=0.755663s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.756948s, 48716 KB] g=32, 425 evaluated, 168 expanded
[t=0.783566s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.784812s, 48716 KB] g=33, 449 evaluated, 169 expanded
[t=0.811508s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.813825s, 48716 KB] g=35, 479 evaluated, 171 expanded
[t=0.823451s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.827386s, 48716 KB] g=36, 494 evaluated, 172 expanded
[t=0.835406s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.836098s, 48716 KB] g=37, 505 evaluated, 173 expanded
[t=0.843339s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.847004s, 48716 KB] g=38, 517 evaluated, 174 expanded
[t=0.851295s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.85319s, 48716 KB] g=39, 528 evaluated, 175 expanded
[t=0.859222s, 48716 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.861172s, 48716 KB] g=40, 540 evaluated, 176 expanded
[t=0.8612s, 48716 KB] Solution found!
[t=0.861228s, 48716 KB] Actual search time: 0.782012s
up f0 f14 (1)
board f14 p1 (1)
down f14 f0 (1)
depart f0 p1 (1)
up f0 f15 (1)
board f15 p0 (1)
down f15 f5 (1)
board f5 p9 (1)
up f5 f16 (1)
board f16 p3 (1)
down f16 f8 (1)
board f8 p5 (1)
up f8 f10 (1)
depart f10 p5 (1)
down f10 f9 (1)
depart f9 p0 (1)
up f9 f17 (1)
board f17 p6 (1)
down f17 f8 (1)
depart f8 p6 (1)
up f8 f18 (1)
board f18 p2 (1)
down f18 f4 (1)
depart f4 p2 (1)
up f4 f19 (1)
board f19 p10 (1)
board f19 p8 (1)
down f19 f16 (1)
depart f16 p8 (1)
up f16 f21 (1)
board f21 p4 (1)
depart f21 p9 (1)
depart f21 p3 (1)
board f21 p7 (1)
down f21 f15 (1)
depart f15 p4 (1)
down f15 f4 (1)
depart f4 p7 (1)
up f4 f16 (1)
depart f16 p10 (1)
[t=0.861256s, 48716 KB] Plan length: 40 step(s).
[t=0.861256s, 48716 KB] Plan cost: 40
[t=0.861256s, 48716 KB] Expanded 177 state(s).
[t=0.861256s, 48716 KB] Reopened 0 state(s).
[t=0.861256s, 48716 KB] Evaluated 540 state(s).
[t=0.861256s, 48716 KB] Evaluations: 540
[t=0.861256s, 48716 KB] Generated 3783 state(s).
[t=0.861256s, 48716 KB] Dead ends: 0 state(s).
[t=0.861256s, 48716 KB] Number of registered states: 540
[t=0.861256s, 48716 KB] Int hash set load factor: 540/1024 = 0.527344
[t=0.861256s, 48716 KB] Int hash set resizes: 10
[t=0.861256s, 48716 KB] Search time: 0.783194s
[t=0.861256s, 48716 KB] Total time: 0.861256s
Solution found.
Peak memory: 48716 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 40 

Successful plans:
Value: 40
 sas_plan 40 

validate exit code: 0

INFO     Planner time: 0.99s
