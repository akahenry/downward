INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.002s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 311 rules.
Computing model... [0.000s CPU, 0.001s wall-clock]
153 relevant atoms
0 auxiliary atoms
153 final queue length
323 total queue pushes
Completing instantiation... [0.000s CPU, 0.002s wall-clock]
Instantiating: [0.010s CPU, 0.010s wall-clock]
Computing fact groups...
Finding invariants...
37 initial candidates
Finding invariants: [0.310s CPU, 0.307s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
10 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.310s CPU, 0.307s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
30 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
7 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.001s wall-clock]
Reordering and filtering variables...
17 of 17 variables necessary.
0 of 12 mutex groups necessary.
115 of 115 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 17
Translator derived variables: 0
Translator facts: 47
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 115
Translator axioms: 0
Translator task size: 774
Translator peak memory: 34808 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.340s CPU, 0.334s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45860 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45860 KB] building causal graph...done! [t=0s]
[t=0s, 45996 KB] Found 307 SGA patterns.
[t=0s, 45996 KB] Found 307 interesting patterns.
[t=0s, 45996 KB] systematic pattern collection generator number of patterns: 307
[t=0s, 45996 KB] systematic pattern collection generator total PDB size: 26127
[t=0s, 45996 KB] systematic pattern collection generator computation time: 0s
[t=0s, 45996 KB] Computing PDBs for pattern collection...
[t=0.0134218s, 45996 KB] Done computing PDBs for pattern collection: 0.0134218s
[t=0.0159391s, 46384 KB] Tie breaking: 2
[t=0.0159391s, 46384 KB] Building successor generator...done!
[t=0.0159391s, 46384 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0159391s, 46384 KB] time for successor generation creation: 0s
[t=0.0159391s, 46384 KB] Variables: 17
[t=0.0159391s, 46384 KB] FactPairs: 47
[t=0.0159391s, 46384 KB] Bytes per state: 4
[t=0.0159391s, 46384 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0159391s, 46384 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.0159391s, 46384 KB] g=0, 1 evaluated, 0 expanded
[t=0.0159391s, 46516 KB] Initial heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.0159391s, 46516 KB] pruning method: none
[t=0.0159391s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0159391s, 46516 KB] g=1, 2 evaluated, 1 expanded
[t=0.0159391s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.0159391s, 46516 KB] g=2, 14 evaluated, 7 expanded
[t=0.027933s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.0319438s, 46516 KB] g=4, 72 evaluated, 33 expanded
[t=0.0399236s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.0399236s, 46516 KB] g=6, 118 evaluated, 55 expanded
[t=0.0399236s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.0399236s, 46516 KB] g=8, 129 evaluated, 57 expanded
[t=0.0439327s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.0439327s, 46516 KB] g=10, 152 evaluated, 61 expanded
[t=0.0479199s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.0479199s, 46516 KB] g=12, 169 evaluated, 64 expanded
[t=0.0559208s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.0559208s, 46516 KB] g=16, 211 evaluated, 74 expanded
[t=0.0559208s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.0559208s, 46516 KB] g=17, 212 evaluated, 75 expanded
[t=0.0559208s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.0559208s, 46516 KB] g=19, 220 evaluated, 77 expanded
[t=0.0559208s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.0559208s, 46516 KB] g=20, 221 evaluated, 78 expanded
[t=0.0599041s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.0599041s, 46516 KB] g=21, 225 evaluated, 79 expanded
[t=0.0599041s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.0599041s, 46516 KB] g=22, 228 evaluated, 80 expanded
[t=0.0599041s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.0599041s, 46516 KB] g=23, 231 evaluated, 81 expanded
[t=0.0599041s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.0599041s, 46516 KB] g=24, 232 evaluated, 82 expanded
[t=0.0599041s, 46516 KB] New best heuristic value for ilsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.0599041s, 46516 KB] g=25, 235 evaluated, 83 expanded
[t=0.0599041s, 46516 KB] Solution found!
[t=0.0599041s, 46516 KB] Actual search time: 0.0439651s
open-new-stack-n0-n1  (1)
open-new-stack-n1-n2  (1)
start-order-o2-n2-n1  (1)
start-order-o5-n1-n0  (1)
setup-machine-p3-n0  (1)
make-product-p3-n0  (1)
open-new-stack-n0-n1  (1)
start-order-o1-n1-n0  (1)
open-new-stack-n0-n1  (1)
start-order-o3-n1-n0  (1)
open-new-stack-n0-n1  (1)
start-order-o4-n1-n0  (1)
setup-machine-p1-n0  (1)
make-product-p1-n0  (1)
setup-machine-p5-n0  (1)
make-product-p5-n0  (1)
ship-order-o3-n0-n1  (1)
setup-machine-p4-n1  (1)
make-product-p4-n1  (1)
ship-order-o2-n1-n2  (1)
ship-order-o5-n2-n3  (1)
setup-machine-p2-n3  (1)
make-product-p2-n3  (1)
ship-order-o1-n3-n4  (1)
ship-order-o4-n4-n5  (1)
[t=0.0599041s, 46516 KB] Plan length: 25 step(s).
[t=0.0599041s, 46516 KB] Plan cost: 25
[t=0.0599041s, 46516 KB] Expanded 84 state(s).
[t=0.0599041s, 46516 KB] Reopened 0 state(s).
[t=0.0599041s, 46516 KB] Evaluated 236 state(s).
[t=0.0599041s, 46516 KB] Evaluations: 236
[t=0.0599041s, 46516 KB] Generated 256 state(s).
[t=0.0599041s, 46516 KB] Dead ends: 0 state(s).
[t=0.0599041s, 46516 KB] Number of registered states: 236
[t=0.0599041s, 46516 KB] Int hash set load factor: 236/256 = 0.921875
[t=0.0599041s, 46516 KB] Int hash set resizes: 8
[t=0.0599041s, 46516 KB] Search time: 0.0439651s
[t=0.0599041s, 46516 KB] Total time: 0.0599041s
Solution found.
Peak memory: 46516 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 25 

Successful plans:
Value: 25
 sas_plan 25 

validate exit code: 0

INFO     Planner time: 0.46s
