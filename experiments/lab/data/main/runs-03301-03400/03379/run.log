INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.000s CPU, 0.007s wall-clock]
607 relevant atoms
730 auxiliary atoms
1337 final queue length
1711 total queue pushes
Completing instantiation... [0.010s CPU, 0.006s wall-clock]
Instantiating: [0.020s CPU, 0.017s wall-clock]
Computing fact groups...
Finding invariants...
11 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.007s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
28 of 28 variables necessary.
48 of 52 mutex groups necessary.
316 of 316 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 28
Translator derived variables: 0
Translator facts: 148
Translator goal facts: 20
Translator mutex groups: 48
Translator total mutex groups size: 192
Translator operators: 316
Translator axioms: 0
Translator task size: 2112
Translator peak memory: 33404 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.039s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0s, 10676 KB] done reading input!
[t=0s, 10940 KB] Simplifying 620 unary operators... done! [620 unary operators]
[t=0s, 10940 KB] time to simplify: 0s
[t=0s, 10940 KB] Initializing additive heuristic...
[t=0s, 10940 KB] Initializing FF heuristic...
[t=0s, 10940 KB] Building successor generator...done!
[t=0s, 10940 KB] peak memory difference for successor generator creation: 0 KB
[t=0s, 10940 KB] time for successor generation creation: 0s
[t=0s, 10940 KB] Variables: 28
[t=0s, 10940 KB] FactPairs: 148
[t=0s, 10940 KB] Bytes per state: 8
[t=0s, 10940 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0s, 10940 KB] g=0, 1 evaluated, 0 expanded
[t=0s, 10940 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0s, 10940 KB] pruning method: none
[t=0s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0s, 10940 KB] g=2, 7 evaluated, 1 expanded
[t=0s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=0s, 10940 KB] g=1, 11 evaluated, 1 expanded
[t=0s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0s, 10940 KB] g=3, 30 evaluated, 3 expanded
[t=0.00400011s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.00400011s, 10940 KB] g=17, 120 evaluated, 15 expanded
[t=0.00400011s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=0.00400011s, 10940 KB] g=24, 155 evaluated, 20 expanded
[t=0.00400011s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=0.00400011s, 10940 KB] g=31, 182 evaluated, 23 expanded
[t=0.00400011s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=0.00400011s, 10940 KB] g=44, 290 evaluated, 39 expanded
[t=0.00400011s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=0.00400011s, 10940 KB] g=54, 502 evaluated, 72 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=0.00800152s, 10940 KB] g=63, 562 evaluated, 79 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=0.00800152s, 10940 KB] g=65, 570 evaluated, 80 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=0.00800152s, 10940 KB] g=66, 581 evaluated, 81 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=0.00800152s, 10940 KB] g=74, 617 evaluated, 88 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=0.00800152s, 10940 KB] g=81, 642 evaluated, 91 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=0.00800152s, 10940 KB] g=82, 652 evaluated, 92 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=0.00800152s, 10940 KB] g=89, 671 evaluated, 95 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=0.00800152s, 10940 KB] g=94, 678 evaluated, 96 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=0.00800152s, 10940 KB] g=95, 685 evaluated, 97 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=0.00800152s, 10940 KB] g=97, 691 evaluated, 98 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=0.00800152s, 10940 KB] g=107, 868 evaluated, 166 expanded
[t=0.00800152s, 10940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=0.00800152s, 10940 KB] g=115, 1099 evaluated, 251 expanded
[t=0.0479621s, 11364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=0.0479621s, 11364 KB] g=125, 10060 evaluated, 4141 expanded
[t=0.0479621s, 11364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=0.0479621s, 11364 KB] g=126, 10068 evaluated, 4142 expanded
[t=0.0479621s, 11364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=0.0479621s, 11364 KB] g=128, 10073 evaluated, 4143 expanded
[t=0.0479621s, 11364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=0.0479621s, 11364 KB] g=133, 10197 evaluated, 4194 expanded
[t=1.6265s, 24700 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=1.6265s, 24700 KB] g=143, 351833 evaluated, 140136 expanded
[t=1.6265s, 24700 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=1.6265s, 24700 KB] g=144, 351842 evaluated, 140137 expanded
[t=1.6265s, 24700 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=1.6265s, 24700 KB] g=146, 351844 evaluated, 140138 expanded
[t=1.6265s, 24700 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=1.6265s, 24700 KB] g=151, 351900 evaluated, 140156 expanded
[t=13.054s, 115968 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=13.054s, 115968 KB] g=187, 2632289 evaluated, 1022505 expanded
[t=13.054s, 115968 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=13.054s, 115968 KB] g=191, 2632305 evaluated, 1022510 expanded
[t=13.054s, 115968 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=13.054s, 115968 KB] g=196, 2632306 evaluated, 1022511 expanded
[t=13.054s, 115968 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=13.054s, 115968 KB] g=198, 2632310 evaluated, 1022512 expanded
[t=13.054s, 115968 KB] Solution found!
[t=13.054s, 115968 KB] Actual search time: 13.054s
right robot2 tile_3-2 tile_3-3 (1)
paint-up robot1 tile_5-3 tile_4-3 white (2)
change-color robot2 black white (5)
change-color robot1 white black (5)
right robot1 tile_4-3 tile_4-4 (1)
paint-up robot1 tile_5-4 tile_4-4 black (2)
down robot1 tile_4-4 tile_3-4 (1)
change-color robot2 white black (5)
paint-up robot2 tile_4-3 tile_3-3 black (2)
change-color robot1 black white (5)
paint-up robot1 tile_4-4 tile_3-4 white (2)
change-color robot2 black white (5)
change-color robot1 white black (5)
down robot1 tile_3-4 tile_2-4 (1)
paint-up robot1 tile_3-4 tile_2-4 black (2)
left robot2 tile_3-3 tile_3-2 (1)
change-color robot1 black white (5)
left robot2 tile_3-2 tile_3-1 (1)
down robot1 tile_2-4 tile_1-4 (1)
paint-up robot1 tile_2-4 tile_1-4 white (2)
change-color robot1 white black (5)
right robot2 tile_3-1 tile_3-2 (1)
down robot1 tile_1-4 tile_0-4 (1)
paint-up robot1 tile_1-4 tile_0-4 black (2)
change-color robot1 black white (5)
left robot2 tile_3-2 tile_3-1 (1)
left robot1 tile_0-4 tile_0-3 (1)
up robot1 tile_0-3 tile_1-3 (3)
up robot1 tile_1-3 tile_2-3 (3)
paint-up robot1 tile_3-3 tile_2-3 white (2)
up robot2 tile_3-1 tile_4-1 (3)
paint-up robot2 tile_5-1 tile_4-1 white (2)
change-color robot2 white black (5)
down robot2 tile_4-1 tile_3-1 (1)
paint-up robot2 tile_4-1 tile_3-1 black (2)
change-color robot1 white black (5)
down robot1 tile_2-3 tile_1-3 (1)
paint-up robot1 tile_2-3 tile_1-3 black (2)
down robot1 tile_1-3 tile_0-3 (1)
change-color robot1 black white (5)
paint-up robot1 tile_1-3 tile_0-3 white (2)
change-color robot1 white black (5)
change-color robot2 black white (5)
left robot1 tile_0-3 tile_0-2 (1)
left robot1 tile_0-2 tile_0-1 (1)
change-color robot2 white black (5)
change-color robot1 black white (5)
right robot2 tile_3-1 tile_3-2 (1)
up robot1 tile_0-1 tile_1-1 (3)
up robot1 tile_1-1 tile_2-1 (3)
paint-up robot1 tile_3-1 tile_2-1 white (2)
up robot2 tile_3-2 tile_4-2 (3)
paint-up robot2 tile_5-2 tile_4-2 black (2)
change-color robot2 black white (5)
change-color robot1 white black (5)
down robot2 tile_4-2 tile_3-2 (1)
paint-up robot2 tile_4-2 tile_3-2 white (2)
down robot1 tile_2-1 tile_1-1 (1)
paint-up robot1 tile_2-1 tile_1-1 black (2)
change-color robot1 black white (5)
change-color robot2 white black (5)
down robot1 tile_1-1 tile_0-1 (1)
paint-up robot1 tile_1-1 tile_0-1 white (2)
right robot1 tile_0-1 tile_0-2 (1)
down robot2 tile_3-2 tile_2-2 (1)
paint-up robot2 tile_3-2 tile_2-2 black (2)
down robot2 tile_2-2 tile_1-2 (1)
change-color robot2 black white (5)
change-color robot1 white black (5)
paint-up robot2 tile_2-2 tile_1-2 white (2)
left robot1 tile_0-2 tile_0-1 (1)
down robot2 tile_1-2 tile_0-2 (1)
change-color robot2 white black (5)
paint-up robot2 tile_1-2 tile_0-2 black (2)
[t=13.054s, 115968 KB] Plan length: 74 step(s).
[t=13.054s, 115968 KB] Plan cost: 198
[t=13.054s, 115968 KB] Expanded 1022513 state(s).
[t=13.054s, 115968 KB] Reopened 0 state(s).
[t=13.054s, 115968 KB] Evaluated 2632312 state(s).
[t=13.054s, 115968 KB] Evaluations: 2632312
[t=13.054s, 115968 KB] Generated 7674517 state(s).
[t=13.054s, 115968 KB] Dead ends: 1591261 state(s).
[t=13.054s, 115968 KB] Number of registered states: 2632312
[t=13.054s, 115968 KB] Int hash set load factor: 2632312/4194304 = 0.627592
[t=13.054s, 115968 KB] Int hash set resizes: 22
[t=13.054s, 115968 KB] Search time: 13.054s
[t=13.054s, 115968 KB] Total time: 13.054s
Solution found.
Peak memory: 115968 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 198 

Successful plans:
Value: 198
 sas_plan 198 

validate exit code: 0

INFO     Planner time: 13.15s
