INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 79 rules.
Computing model... [1.020s CPU, 1.029s wall-clock]
114681 relevant atoms
42304 auxiliary atoms
156985 final queue length
487215 total queue pushes
Completing instantiation... [2.900s CPU, 2.909s wall-clock]
Instantiating: [3.970s CPU, 3.974s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.070s CPU, 0.067s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
2576 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.008s wall-clock]
Computing fact groups: [0.090s CPU, 0.091s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.002s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.051s wall-clock]
Translating task: [1.770s CPU, 1.771s wall-clock]
101472 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [1.020s CPU, 1.013s wall-clock]
Reordering and filtering variables...
2580 of 2580 variables necessary.
0 of 4 mutex groups necessary.
40976 of 40976 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.980s CPU, 0.976s wall-clock]
Translator variables: 2580
Translator derived variables: 0
Translator facts: 5344
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 40976
Translator axioms: 0
Translator task size: 353532
Translator peak memory: 265936 KB
Writing output... [0.260s CPU, 0.259s wall-clock]
Done! [8.170s CPU, 8.172s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1791s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.183228s, 27004 KB] done reading input!
[t=0.203223s, 37068 KB] Simplifying 183424 unary operators... done! [132448 unary operators]
[t=0.32314s, 49132 KB] time to simplify: 0.119917s
[t=0.327129s, 49132 KB] Initializing additive heuristic...
[t=0.327129s, 49132 KB] Initializing FF heuristic...
[t=0.327129s, 49132 KB] Building successor generator...done!
[t=0.33912s, 49132 KB] peak memory difference for successor generator creation: 0 KB
[t=0.33912s, 49132 KB] time for successor generation creation: 0.0119906s
[t=0.33912s, 49132 KB] Variables: 2580
[t=0.33912s, 49132 KB] FactPairs: 5344
[t=0.33912s, 49132 KB] Bytes per state: 328
[t=0.33912s, 49132 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.33912s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=0.33912s, 49132 KB] g=0, 1 evaluated, 0 expanded
[t=0.33912s, 49132 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=normal)): 33
[t=0.33912s, 49132 KB] pruning method: none
[t=0.33912s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 31
[t=0.33912s, 49132 KB] g=2, 2 evaluated, 1 expanded
[t=0.347116s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 29
[t=0.347116s, 49132 KB] g=4, 8 evaluated, 2 expanded
[t=0.359109s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 28
[t=0.359109s, 49132 KB] g=7, 20 evaluated, 3 expanded
[t=0.363113s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 26
[t=0.363113s, 49132 KB] g=9, 26 evaluated, 4 expanded
[t=0.38708s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 25
[t=0.38708s, 49132 KB] g=10, 45 evaluated, 5 expanded
[t=0.862768s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 23
[t=0.862768s, 49132 KB] g=18, 476 evaluated, 61 expanded
[t=0.878765s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 21
[t=0.878765s, 49132 KB] g=20, 490 evaluated, 62 expanded
[t=2.98125s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 18
[t=2.98125s, 49132 KB] g=30, 2402 evaluated, 361 expanded
[t=3.47298s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 15
[t=3.47298s, 49132 KB] g=37, 2858 evaluated, 426 expanded
[t=5.00398s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 14
[t=5.00398s, 49132 KB] g=42, 4255 evaluated, 650 expanded
[t=12.9018s, 49132 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 13
[t=12.9018s, 49132 KB] g=47, 11564 evaluated, 1924 expanded
[t=48.1407s, 57676 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 11
[t=48.1407s, 57676 KB] g=66, 45295 evaluated, 7644 expanded
[t=48.3006s, 57676 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 10
[t=48.3006s, 57676 KB] g=70, 45450 evaluated, 7664 expanded
[t=49.3316s, 58072 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 7
[t=49.3316s, 58072 KB] g=80, 46511 evaluated, 7825 expanded
[t=118.632s, 85328 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 6
[t=118.632s, 85328 KB] g=88, 121054 evaluated, 25151 expanded
[t=160.223s, 101520 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 5
[t=160.223s, 101520 KB] g=109, 168334 evaluated, 36080 expanded
[t=160.227s, 101652 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 4
[t=160.227s, 101652 KB] g=110, 168341 evaluated, 36081 expanded
[t=160.247s, 101652 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 3
[t=160.247s, 101652 KB] g=115, 168362 evaluated, 36086 expanded
[t=160.251s, 101652 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=normal)): 0
[t=160.251s, 101652 KB] g=118, 168366 evaluated, 36087 expanded
[t=160.255s, 101652 KB] Solution found!
[t=160.255s, 101652 KB] Actual search time: 159.916s
move_two f4-0f f5-0f f6-0f straight1 (2)
move_two f5-0f f6-0f f7-0f straight1 (2)
move_l_down f5-1f f6-1f f6-2f f7-1f f7-2f rightl3 (3)
move_two f3-1f f4-1f f4-0f straight0 (2)
move_square f5-2f f6-2f square3 (1)
move_two f6-0f f7-0f f8-0f straight1 (2)
move_two f4-1f f4-0f f5-0f straight0 (2)
move_two f4-0f f5-0f f6-0f straight0 (2)
move_two f7-0f f8-0f f9-0f straight1 (2)
move_two f5-0f f6-0f f7-0f straight0 (2)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl2 (3)
move_l_down f6-1f f7-1f f7-2f f8-1f f8-2f rightl3 (3)
move_square f6-2f f7-2f square3 (1)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl2 (3)
move_l_down f7-1f f8-1f f8-2f f9-1f f9-2f rightl3 (3)
move_square f7-2f f8-2f square3 (1)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl2 (3)
move_two f6-0f f7-0f f7-1f straight0 (2)
move_square f3-0f f4-0f square2 (1)
move_square f4-0f f5-0f square2 (1)
move_square f5-0f f6-0f square2 (1)
move_square f2-0f f3-0f square1 (1)
move_square f3-0f f4-0f square1 (1)
move_square f4-0f f5-0f square1 (1)
move_square f5-0f f5-1f square1 (1)
move_square f5-1f f6-1f square1 (1)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl1 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl1 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl1 (3)
move_l_down f8-1f f9-1f f9-2f f10-1f f10-2f rightl3 (3)
move_square f8-2f f9-2f square3 (1)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl2 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl1 (3)
move_two f7-0f f7-1f f8-1f straight0 (2)
move_square f6-0f f7-0f square2 (1)
move_square f6-1f f6-0f square1 (1)
move_l_down f9-1f f10-1f f10-2f f11-1f f11-2f rightl3 (3)
move_square f9-2f f10-2f square3 (1)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl2 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl1 (3)
move_square f0-1f f0-2f square0 (1)
move_square f0-2f f0-3f square0 (1)
move_square f0-3f f1-3f square0 (1)
move_square f1-3f f2-3f square0 (1)
move_square f2-3f f3-3f square0 (1)
move_square f3-3f f4-3f square0 (1)
move_square f4-3f f5-3f square0 (1)
move_square f5-3f f6-3f square0 (1)
move_two f8-0f f9-0f f10-0f straight1 (2)
move_two f7-1f f8-1f f9-1f straight0 (2)
move_l_down f0-0f f1-0f f1-1f f2-0f f2-1f rightl0 (3)
move_l_down f1-0f f2-0f f2-1f f3-0f f3-1f rightl0 (3)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl0 (3)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl0 (3)
move_square f6-0f f6-1f square1 (1)
move_square f6-1f f7-1f square1 (1)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl0 (3)
move_square f7-0f f8-0f square2 (1)
move_two f9-0f f10-0f f11-0f straight1 (2)
move_two f8-1f f9-1f f9-0f straight0 (2)
move_square f7-1f f8-1f square1 (1)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl0 (3)
[t=160.255s, 101652 KB] Plan length: 62 step(s).
[t=160.255s, 101652 KB] Plan cost: 118
[t=160.255s, 101652 KB] Expanded 36088 state(s).
[t=160.255s, 101652 KB] Reopened 0 state(s).
[t=160.255s, 101652 KB] Evaluated 168370 state(s).
[t=160.255s, 101652 KB] Evaluations: 168370
[t=160.255s, 101652 KB] Generated 467301 state(s).
[t=160.255s, 101652 KB] Dead ends: 0 state(s).
[t=160.255s, 101652 KB] Number of registered states: 168370
[t=160.255s, 101652 KB] Int hash set load factor: 168370/262144 = 0.642281
[t=160.255s, 101652 KB] Int hash set resizes: 18
[t=160.255s, 101652 KB] Search time: 159.916s
[t=160.255s, 101652 KB] Total time: 160.255s
Solution found.
Peak memory: 101652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 118 

Successful plans:
Value: 118
 sas_plan 118 

validate exit code: 0

INFO     Planner time: 168.52s
