INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.028s wall-clock]
2784 relevant atoms
2893 auxiliary atoms
5677 final queue length
9793 total queue pushes
Completing instantiation... [0.060s CPU, 0.060s wall-clock]
Instantiating: [0.090s CPU, 0.094s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
292 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.069s wall-clock]
3276 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.031s wall-clock]
Reordering and filtering variables...
295 of 295 variables necessary.
14 of 17 mutex groups necessary.
1958 of 1958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.020s wall-clock]
Translator variables: 295
Translator derived variables: 0
Translator facts: 617
Translator goal facts: 12
Translator mutex groups: 14
Translator total mutex groups size: 42
Translator operators: 1958
Translator axioms: 0
Translator task size: 18764
Translator peak memory: 43512 KB
Writing output... [0.020s CPU, 0.013s wall-clock]
Done! [0.250s CPU, 0.246s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119873s, 11388 KB] done reading input!
[t=0.0119873s, 12320 KB] Simplifying 7194 unary operators... done! [6158 unary operators]
[t=0.0159736s, 12584 KB] time to simplify: 0.00398632s
[t=0.0159736s, 12584 KB] Initializing additive heuristic...
[t=0.0159736s, 12584 KB] Initializing FF heuristic...
[t=0.0159736s, 12584 KB] Building successor generator...done!
[t=0.0159736s, 12584 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0159736s, 12584 KB] time for successor generation creation: 0s
[t=0.0159736s, 12584 KB] Variables: 295
[t=0.0159736s, 12584 KB] FactPairs: 617
[t=0.0159736s, 12584 KB] Bytes per state: 40
[t=0.0159736s, 12584 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0159736s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.0159736s, 12584 KB] g=0, 1 evaluated, 0 expanded
[t=0.0159736s, 12584 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.0159736s, 12584 KB] pruning method: none
[t=0.019973s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.019973s, 12584 KB] g=1, 10 evaluated, 1 expanded
[t=0.0279643s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.0279643s, 12584 KB] g=13, 131 evaluated, 20 expanded
[t=0.0279643s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.0279643s, 12584 KB] g=23, 164 evaluated, 22 expanded
[t=0.071924s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=0.071924s, 12584 KB] g=36, 544 evaluated, 78 expanded
[t=30.9726s, 34196 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=30.9726s, 34196 KB] g=47, 286852 evaluated, 59547 expanded
[t=30.9726s, 34196 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=30.9726s, 34196 KB] g=49, 286871 evaluated, 59549 expanded
[t=217.557s, 170040 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=217.557s, 170040 KB] g=78, 1971159 evaluated, 398636 expanded
[t=217.561s, 170040 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=217.561s, 170040 KB] g=80, 1971178 evaluated, 398638 expanded
[t=347.151s, 247932 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=347.151s, 247932 KB] g=114, 3269176 evaluated, 656378 expanded
[t=347.151s, 247932 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=347.151s, 247932 KB] g=116, 3269196 evaluated, 656380 expanded
[t=391.064s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=391.064s, 322752 KB] g=148, 3684991 evaluated, 741237 expanded
[t=391.316s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=391.316s, 322752 KB] g=171, 3687398 evaluated, 741571 expanded
[t=391.324s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=391.324s, 322752 KB] g=174, 3687483 evaluated, 741576 expanded
[t=391.328s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=391.328s, 322752 KB] g=175, 3687499 evaluated, 741577 expanded
[t=391.376s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=391.376s, 322752 KB] g=189, 3687994 evaluated, 741652 expanded
[t=391.404s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=391.404s, 322752 KB] g=202, 3688229 evaluated, 741674 expanded
[t=391.404s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=391.404s, 322752 KB] g=203, 3688233 evaluated, 741675 expanded
[t=415.759s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=415.759s, 322752 KB] g=243, 3925010 evaluated, 786218 expanded
[t=415.759s, 322752 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=415.759s, 322752 KB] g=244, 3925014 evaluated, 786219 expanded
[t=422.065s, 325376 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=422.065s, 325376 KB] g=266, 3987734 evaluated, 799840 expanded
[t=422.069s, 325376 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=422.069s, 325376 KB] g=268, 3987765 evaluated, 799843 expanded
[t=422.069s, 325376 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=422.069s, 325376 KB] g=269, 3987770 evaluated, 799844 expanded
[t=422.069s, 325376 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=422.069s, 325376 KB] g=270, 3987787 evaluated, 799845 expanded
[t=469.736s, 360904 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=469.74s, 360904 KB] g=306, 4565226 evaluated, 932993 expanded
[t=469.74s, 360904 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=469.74s, 360904 KB] g=307, 4565243 evaluated, 932994 expanded
[t=498.643s, 382460 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=498.643s, 382460 KB] g=343, 4918935 evaluated, 1020032 expanded
[t=498.643s, 382460 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=498.643s, 382460 KB] g=344, 4918952 evaluated, 1020033 expanded
[t=515.021s, 394360 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=515.021s, 394360 KB] g=379, 5112678 evaluated, 1071409 expanded
[t=515.021s, 394360 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=515.021s, 394360 KB] g=380, 5112683 evaluated, 1071410 expanded
[t=515.021s, 394360 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=515.021s, 394360 KB] g=382, 5112709 evaluated, 1071412 expanded
[t=515.025s, 394360 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=515.025s, 394360 KB] g=383, 5112714 evaluated, 1071413 expanded
[t=515.025s, 394360 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=515.025s, 394360 KB] g=384, 5112732 evaluated, 1071414 expanded
[t=515.025s, 394360 KB] Solution found!
[t=515.025s, 394360 KB] Actual search time: 515.009s
grasp right shot12 (1)
fill-shot shot12 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient4 right left dispenser4 (10)
leave right shot12 (1)
grasp right shot13 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail2 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail6 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail1 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail7 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot9 left shaker1 l1 l0 (1)
grasp right shot13 (1)
leave left shaker1 (1)
empty-shot right shot13 ingredient3 (1)
clean-shot shot13 ingredient3 right left (1)
grasp left shaker1 (1)
empty-shaker left shaker1 cocktail7 l0 l0 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot13 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot12 (1)
pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient4 right left dispenser4 (10)
leave right shot12 (1)
grasp right shot13 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail9 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot10 left shaker1 l2 l1 (1)
grasp right shot13 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot13 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot12 (1)
pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient4 right left dispenser4 (10)
leave right shot12 (1)
grasp right shot13 (1)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
leave right shot13 (1)
grasp left shot1 (1)
fill-shot shot1 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot1 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot2 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp left shot1 (1)
pour-shot-to-used-shaker shot1 ingredient2 shaker1 left l1 l2 (1)
leave right shaker1 (1)
refill-shot shot1 ingredient2 left right dispenser2 (10)
grasp right shot13 (1)
leave left shot1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
leave right shot13 (1)
grasp right shaker1 (1)
shake cocktail10 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp left shot1 (1)
pour-shot-to-used-shaker shot1 ingredient2 shaker1 left l1 l2 (1)
leave right shaker1 (1)
refill-shot shot1 ingredient2 left right dispenser2 (10)
grasp right shot13 (1)
leave left shot1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
leave right shot13 (1)
grasp right shaker1 (1)
shake cocktail4 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp left shot1 (1)
pour-shot-to-used-shaker shot1 ingredient2 shaker1 left l1 l2 (1)
leave right shaker1 (1)
refill-shot shot1 ingredient2 left right dispenser2 (10)
grasp right shot13 (1)
leave left shot1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
leave right shot13 (1)
grasp right shaker1 (1)
shake cocktail5 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot4 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp left shot1 (1)
pour-shot-to-used-shaker shot1 ingredient2 shaker1 left l1 l2 (1)
leave left shot1 (1)
shake cocktail3 ingredient2 ingredient3 shaker1 right left (1)
grasp left shot1 (1)
leave right shaker1 (1)
clean-shot shot1 ingredient2 left right (1)
grasp right shaker1 (1)
pour-shaker-to-shot cocktail3 shot1 right shaker1 l2 l1 (1)
[t=515.025s, 394360 KB] Plan length: 165 step(s).
[t=515.025s, 394360 KB] Plan cost: 363
[t=515.025s, 394360 KB] Expanded 1071415 state(s).
[t=515.025s, 394360 KB] Reopened 0 state(s).
[t=515.025s, 394360 KB] Evaluated 5112733 state(s).
[t=515.025s, 394360 KB] Evaluations: 5112733
[t=515.025s, 394360 KB] Generated 8237177 state(s).
[t=515.025s, 394360 KB] Dead ends: 242187 state(s).
[t=515.025s, 394360 KB] Number of registered states: 5112733
[t=515.025s, 394360 KB] Int hash set load factor: 5112733/8388608 = 0.609485
[t=515.025s, 394360 KB] Int hash set resizes: 23
[t=515.025s, 394360 KB] Search time: 515.009s
[t=515.025s, 394360 KB] Total time: 515.025s
Solution found.
Peak memory: 394360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 363 

Successful plans:
Value: 363
 sas_plan 363 

validate exit code: 0

INFO     Planner time: 515.36s
