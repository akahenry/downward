INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.029s wall-clock]
2784 relevant atoms
2893 auxiliary atoms
5677 final queue length
9793 total queue pushes
Completing instantiation... [0.060s CPU, 0.060s wall-clock]
Instantiating: [0.090s CPU, 0.095s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
292 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.067s wall-clock]
3276 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.030s wall-clock]
Reordering and filtering variables...
295 of 295 variables necessary.
14 of 17 mutex groups necessary.
1958 of 1958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.019s wall-clock]
Translator variables: 295
Translator derived variables: 0
Translator facts: 617
Translator goal facts: 12
Translator mutex groups: 14
Translator total mutex groups size: 42
Translator operators: 1958
Translator axioms: 0
Translator task size: 18764
Translator peak memory: 43512 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.230s CPU, 0.241s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0103784s, 11388 KB] done reading input!
[t=0.0143616s, 12320 KB] Simplifying 7194 unary operators... done! [6166 unary operators]
[t=0.018378s, 12584 KB] time to simplify: 0.00401638s
[t=0.018378s, 12584 KB] Initializing additive heuristic...
[t=0.018378s, 12584 KB] Initializing FF heuristic...
[t=0.018378s, 12584 KB] Building successor generator...done!
[t=0.018378s, 12584 KB] peak memory difference for successor generator creation: 0 KB
[t=0.018378s, 12584 KB] time for successor generation creation: 0s
[t=0.018378s, 12584 KB] Variables: 295
[t=0.018378s, 12584 KB] FactPairs: 617
[t=0.018378s, 12584 KB] Bytes per state: 40
[t=0.018378s, 12584 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.018378s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=0.018378s, 12584 KB] g=0, 1 evaluated, 0 expanded
[t=0.018378s, 12584 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=0.018378s, 12584 KB] pruning method: none
[t=0.0503247s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.0503247s, 12584 KB] g=12, 331 evaluated, 56 expanded
[t=0.0503247s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.0503247s, 12584 KB] g=13, 344 evaluated, 57 expanded
[t=0.0902886s, 12584 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=0.0902886s, 12584 KB] g=25, 783 evaluated, 93 expanded
[t=189.046s, 172864 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=189.046s, 172864 KB] g=45, 2057615 evaluated, 411657 expanded
[t=189.082s, 173000 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=189.082s, 173000 KB] g=57, 2058045 evaluated, 411691 expanded
[t=316.537s, 321084 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=316.537s, 321084 KB] g=77, 3454457 evaluated, 685126 expanded
[t=316.573s, 321084 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=316.573s, 321084 KB] g=89, 3454876 evaluated, 685158 expanded
[t=399.284s, 350680 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=399.284s, 350680 KB] g=121, 4391616 evaluated, 864841 expanded
[t=410.018s, 358320 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=410.018s, 358320 KB] g=121, 4513671 evaluated, 885659 expanded
[t=450.336s, 386456 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=450.336s, 386456 KB] g=153, 4968357 evaluated, 972688 expanded
[t=451.087s, 387000 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=451.087s, 387000 KB] g=172, 4977343 evaluated, 973865 expanded
[t=451.998s, 387664 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=451.998s, 387664 KB] g=185, 4987803 evaluated, 976316 expanded
[t=459.711s, 393308 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=459.711s, 393308 KB] g=183, 5077998 evaluated, 992118 expanded
[t=459.715s, 393308 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=459.715s, 393308 KB] g=185, 5078056 evaluated, 992121 expanded
[t=459.719s, 393308 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=459.719s, 393308 KB] g=195, 5078074 evaluated, 992122 expanded
[t=459.719s, 393308 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=459.719s, 393308 KB] g=196, 5078077 evaluated, 992123 expanded
[t=493.626s, 417932 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=493.626s, 417932 KB] g=219, 5477574 evaluated, 1086110 expanded
[t=493.646s, 417932 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=493.646s, 417932 KB] g=234, 5477798 evaluated, 1086132 expanded
[t=493.646s, 417932 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=493.646s, 417932 KB] g=235, 5477802 evaluated, 1086133 expanded
[t=501.759s, 424364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=501.759s, 424364 KB] g=253, 5581767 evaluated, 1106083 expanded
[t=501.759s, 424364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=501.759s, 424364 KB] g=254, 5581769 evaluated, 1106084 expanded
[t=501.759s, 424364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=501.759s, 424364 KB] g=257, 5581798 evaluated, 1106087 expanded
[t=501.759s, 424364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=501.759s, 424364 KB] g=258, 5581801 evaluated, 1106088 expanded
[t=501.759s, 424364 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=501.759s, 424364 KB] g=259, 5581818 evaluated, 1106089 expanded
[t=535.152s, 450760 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=535.152s, 450760 KB] g=301, 6014764 evaluated, 1208962 expanded
[t=535.156s, 450760 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=535.156s, 450760 KB] g=302, 6014767 evaluated, 1208963 expanded
[t=535.156s, 450760 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=535.156s, 450760 KB] g=303, 6014784 evaluated, 1208964 expanded
[t=547.395s, 460668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=547.395s, 460668 KB] g=352, 6176849 evaluated, 1255229 expanded
[t=547.395s, 460668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=547.395s, 460668 KB] g=353, 6176866 evaluated, 1255230 expanded
[t=547.395s, 460668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=547.395s, 460668 KB] g=354, 6176876 evaluated, 1255231 expanded
[t=547.399s, 460668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=547.399s, 460668 KB] g=355, 6176893 evaluated, 1255232 expanded
[t=547.399s, 460668 KB] Solution found!
[t=547.399s, 460668 KB] Actual search time: 547.381s
grasp right shot13 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail1 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient3 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail4 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot10 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient4 right left (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail7 ingredient1 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail2 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient1 right left dispenser1 (10)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient1 right left (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail6 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot13 (1)
leave left shaker1 (1)
fill-shot shot13 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot13 ingredient2 right left (1)
fill-shot shot13 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot13 ingredient4 right left (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail3 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail3 shot4 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail3 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot12 (1)
leave left shaker1 (1)
fill-shot shot12 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot12 ingredient4 right left (1)
fill-shot shot12 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot12 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot12 (1)
shake cocktail9 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot5 left shaker1 l2 l1 (1)
grasp right shot7 (1)
leave left shaker1 (1)
fill-shot shot7 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
leave right shot7 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
grasp right shot7 (1)
pour-shot-to-used-shaker shot7 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot7 ingredient4 right left (1)
grasp left shaker1 (1)
leave right shot7 (1)
shake cocktail5 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot12 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot9 left shaker1 l1 l0 (1)
grasp right shot13 (1)
leave left shaker1 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
grasp right shot7 (1)
leave left shaker1 (1)
fill-shot shot7 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
empty-shaker left shaker1 cocktail5 l0 l0 (1)
leave right shot7 (1)
clean-shaker left right shaker1 (1)
grasp right shot7 (1)
pour-shot-to-clean-shaker shot7 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot7 ingredient4 right left (1)
leave right shot7 (1)
grasp right shot13 (1)
pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 (1)
refill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot13 (1)
shake cocktail8 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot7 left shaker1 l2 l1 (1)
grasp right shot6 (1)
leave left shaker1 (1)
fill-shot shot6 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
empty-shot right shot6 ingredient4 (1)
leave right shot6 (1)
clean-shaker left right shaker1 (1)
grasp right shot6 (1)
leave left shaker1 (1)
grasp left shot13 (1)
pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 (1)
leave left shot13 (1)
refill-shot shot6 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot6 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot6 ingredient4 right left (1)
grasp left shaker1 (1)
leave right shot6 (1)
shake cocktail10 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot6 left shaker1 l2 l1 (1)
[t=547.399s, 460668 KB] Plan length: 160 step(s).
[t=547.399s, 460668 KB] Plan cost: 349
[t=547.399s, 460668 KB] Expanded 1255233 state(s).
[t=547.399s, 460668 KB] Reopened 0 state(s).
[t=547.399s, 460668 KB] Evaluated 6176896 state(s).
[t=547.399s, 460668 KB] Evaluations: 6176896
[t=547.399s, 460668 KB] Generated 9846248 state(s).
[t=547.399s, 460668 KB] Dead ends: 200420 state(s).
[t=547.399s, 460668 KB] Number of registered states: 6176896
[t=547.399s, 460668 KB] Int hash set load factor: 6176896/8388608 = 0.736343
[t=547.399s, 460668 KB] Int hash set resizes: 23
[t=547.399s, 460668 KB] Search time: 547.381s
[t=547.399s, 460668 KB] Total time: 547.399s
Solution found.
Peak memory: 460668 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 349 

Successful plans:
Value: 349
 sas_plan 349 

validate exit code: 0

INFO     Planner time: 547.74s
