INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.031s wall-clock]
3094 relevant atoms
3221 auxiliary atoms
6315 final queue length
10878 total queue pushes
Completing instantiation... [0.070s CPU, 0.067s wall-clock]
Instantiating: [0.100s CPU, 0.105s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.011s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.090s CPU, 0.090s wall-clock]
3672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.034s wall-clock]
Reordering and filtering variables...
331 of 331 variables necessary.
15 of 18 mutex groups necessary.
2194 of 2194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.036s wall-clock]
Translator variables: 331
Translator derived variables: 0
Translator facts: 691
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 45
Translator operators: 2194
Translator axioms: 0
Translator task size: 21018
Translator peak memory: 44796 KB
Writing output... [0.020s CPU, 0.015s wall-clock]
Done! [0.310s CPU, 0.304s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0107846s, 11412 KB] done reading input!
[t=0.0107846s, 12432 KB] Simplifying 8034 unary operators... done! [6930 unary operators]
[t=0.0187753s, 12836 KB] time to simplify: 0.00799066s
[t=0.0187753s, 12836 KB] Initializing additive heuristic...
[t=0.0187753s, 12836 KB] Initializing FF heuristic...
[t=0.0187753s, 12836 KB] Building successor generator...done!
[t=0.0187753s, 12836 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0187753s, 12836 KB] time for successor generation creation: 0s
[t=0.0187753s, 12836 KB] Variables: 331
[t=0.0187753s, 12836 KB] FactPairs: 691
[t=0.0187753s, 12836 KB] Bytes per state: 44
[t=0.0187753s, 12836 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0187753s, 12836 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0.0187753s, 12836 KB] g=0, 1 evaluated, 0 expanded
[t=0.0187753s, 12836 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 35
[t=0.0187753s, 12836 KB] pruning method: none
[t=0.0187753s, 12836 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 33
[t=0.0187753s, 12836 KB] g=1, 10 evaluated, 1 expanded
[t=0.0307644s, 12836 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 32
[t=0.0307644s, 12836 KB] g=13, 140 evaluated, 21 expanded
[t=0.0347442s, 12836 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 31
[t=0.0347442s, 12836 KB] g=23, 175 evaluated, 23 expanded
[t=0.0667164s, 12836 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=0.0667164s, 12836 KB] g=36, 598 evaluated, 83 expanded
[t=39.9933s, 55056 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=39.9933s, 55056 KB] g=47, 520049 evaluated, 102097 expanded
[t=39.9933s, 55056 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 28
[t=39.9933s, 55056 KB] g=49, 520068 evaluated, 102099 expanded
[t=255.822s, 327692 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 27
[t=255.822s, 327692 KB] g=78, 3302769 evaluated, 618016 expanded
[t=255.826s, 327692 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=255.826s, 327692 KB] g=80, 3302788 evaluated, 618018 expanded
[t=448.468s, 457940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=448.468s, 457940 KB] g=110, 5753261 evaluated, 1071033 expanded
[t=448.472s, 457940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=448.472s, 457940 KB] g=112, 5753281 evaluated, 1071035 expanded
[t=567.114s, 657840 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=567.114s, 657840 KB] g=142, 7325553 evaluated, 1358987 expanded
[t=567.114s, 657840 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=567.114s, 657840 KB] g=144, 7325574 evaluated, 1358989 expanded
[t=643.925s, 694324 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=643.925s, 694324 KB] g=174, 8340554 evaluated, 1540898 expanded
[t=643.929s, 694324 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=643.929s, 694324 KB] g=176, 8340575 evaluated, 1540900 expanded
[t=699.053s, 744940 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=699.053s, 744940 KB] g=208, 9105712 evaluated, 1680602 expanded
[t=714.234s, 759164 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=714.234s, 759164 KB] g=208, 9321886 evaluated, 1718513 expanded
[t=714.646s, 759568 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=714.646s, 759568 KB] g=226, 9327865 evaluated, 1719410 expanded
[t=714.65s, 759568 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=714.65s, 759568 KB] g=227, 9327869 evaluated, 1719411 expanded
[t=714.654s, 759568 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=714.654s, 759568 KB] g=229, 9327962 evaluated, 1719418 expanded
[t=725.87s, 770668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=725.87s, 770668 KB] g=260, 9496814 evaluated, 1749953 expanded
[t=725.874s, 770668 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 13
[t=725.874s, 770668 KB] g=262, 9496907 evaluated, 1749960 expanded
[t=733.112s, 777784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 12
[t=733.112s, 777784 KB] g=278, 9606178 evaluated, 1769974 expanded
[t=733.116s, 777784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=733.116s, 777784 KB] g=280, 9606202 evaluated, 1769977 expanded
[t=733.116s, 777784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=733.116s, 777784 KB] g=281, 9606204 evaluated, 1769978 expanded
[t=733.12s, 777784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 9
[t=733.12s, 777784 KB] g=295, 9606321 evaluated, 1769997 expanded
[t=733.124s, 777784 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=733.124s, 777784 KB] g=296, 9606336 evaluated, 1769998 expanded
[t=733.499s, 778312 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=733.499s, 778312 KB] g=329, 9612877 evaluated, 1771251 expanded
[t=733.499s, 778312 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=733.499s, 778312 KB] g=330, 9612892 evaluated, 1771252 expanded
[t=733.839s, 778580 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=733.839s, 778580 KB] g=350, 9618969 evaluated, 1772456 expanded
[t=733.847s, 778716 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=733.847s, 778716 KB] g=364, 9619089 evaluated, 1772478 expanded
[t=733.847s, 778716 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=733.847s, 778716 KB] g=365, 9619104 evaluated, 1772479 expanded
[t=733.847s, 778716 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=733.847s, 778716 KB] g=366, 9619118 evaluated, 1772480 expanded
[t=733.847s, 778716 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=733.847s, 778716 KB] g=367, 9619134 evaluated, 1772481 expanded
[t=733.847s, 778716 KB] Solution found!
[t=733.847s, 778716 KB] Actual search time: 733.828s
grasp right shot12 (1)
fill-shot shot12 ingredient2 right left dispenser2 (10)
pour-shot-to-clean-shaker shot12 ingredient2 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
leave right shot12 (1)
grasp right shot14 (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail11 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot11 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot10 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient4 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail8 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot5 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail1 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail1 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient4 right left (1)
fill-shot shot14 ingredient2 right left dispenser2 (10)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient2 right left (1)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail2 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
leave left shaker1 (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient3 right left (1)
fill-shot shot14 ingredient4 right left dispenser4 (10)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 (1)
clean-shot shot14 ingredient4 right left (1)
fill-shot shot14 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail9 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 (1)
clean-shot shot14 ingredient1 right left (1)
fill-shot shot14 ingredient3 right left dispenser3 (10)
leave right shot14 (1)
grasp right shot12 (1)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot12 (1)
shake cocktail3 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
leave left shaker1 (1)
grasp right shot12 (1)
pour-shot-to-clean-shaker shot12 ingredient2 shaker1 right l0 l1 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
leave right shot12 (1)
grasp right shot1 (1)
fill-shot shot1 ingredient1 right left dispenser1 (10)
pour-shot-to-used-shaker shot1 ingredient1 shaker1 right l1 l2 (1)
clean-shot shot1 ingredient1 right left (1)
grasp left shaker1 (1)
leave right shot1 (1)
shake cocktail4 ingredient2 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot1 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
leave right shot14 (1)
grasp right shot12 (1)
leave left shaker1 (1)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
leave right shot12 (1)
grasp right shot14 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail10 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
leave right shot14 (1)
grasp right shot12 (1)
leave left shaker1 (1)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
leave right shot12 (1)
grasp right shot14 (1)
refill-shot shot14 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot14 (1)
shake cocktail5 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot13 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail5 shot4 left shaker1 l1 l0 (1)
empty-shaker left shaker1 cocktail5 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot14 (1)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 (1)
leave right shot14 (1)
grasp right shot12 (1)
leave left shaker1 (1)
pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 (1)
refill-shot shot12 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot12 (1)
shake cocktail6 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot9 left shaker1 l2 l1 (1)
[t=733.847s, 778716 KB] Plan length: 160 step(s).
[t=733.847s, 778716 KB] Plan cost: 367
[t=733.847s, 778716 KB] Expanded 1772482 state(s).
[t=733.847s, 778716 KB] Reopened 0 state(s).
[t=733.847s, 778716 KB] Evaluated 9619138 state(s).
[t=733.847s, 778716 KB] Evaluations: 9619138
[t=733.847s, 778716 KB] Generated 14333722 state(s).
[t=733.847s, 778716 KB] Dead ends: 102205 state(s).
[t=733.847s, 778716 KB] Number of registered states: 9619138
[t=733.847s, 778716 KB] Int hash set load factor: 9619138/16777216 = 0.573345
[t=733.847s, 778716 KB] Int hash set resizes: 24
[t=733.847s, 778716 KB] Search time: 733.828s
[t=733.847s, 778716 KB] Total time: 733.847s
Solution found.
Peak memory: 778716 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 367 

Successful plans:
Value: 367
 sas_plan 367 

validate exit code: 0

INFO     Planner time: 734.26s
