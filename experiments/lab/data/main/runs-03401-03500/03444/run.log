INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.003s wall-clock]
Generated 129 rules.
Computing model... [0.480s CPU, 0.488s wall-clock]
41023 relevant atoms
36458 auxiliary atoms
77481 final queue length
256931 total queue pushes
Completing instantiation... [2.230s CPU, 2.225s wall-clock]
Instantiating: [2.730s CPU, 2.732s wall-clock]
Computing fact groups...
Finding invariants...
28 initial candidates
Finding invariants: [0.020s CPU, 0.019s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
603 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.030s CPU, 0.028s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.130s CPU, 0.126s wall-clock]
Translating task: [2.430s CPU, 2.438s wall-clock]
59472 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
45 propositions removed
Detecting unreachable propositions: [1.660s CPU, 1.652s wall-clock]
Reordering and filtering variables...
628 of 630 variables necessary.
0 of 33 mutex groups necessary.
39089 of 39089 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.760s CPU, 0.760s wall-clock]
Translator variables: 628
Translator derived variables: 0
Translator facts: 1885
Translator goal facts: 40
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 39089
Translator axioms: 0
Translator task size: 545728
Translator peak memory: 295528 KB
Writing output... [0.380s CPU, 0.385s wall-clock]
Done! [8.080s CPU, 8.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1791s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([ff(transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.239881s, 29796 KB] done reading input!
[t=0.263859s, 51068 KB] Simplifying 199203 unary operators... done! [199203 unary operators]
[t=0.547612s, 69440 KB] time to simplify: 0.283753s
[t=0.559602s, 77712 KB] Initializing additive heuristic...
[t=0.559602s, 77712 KB] Initializing FF heuristic...
[t=0.559602s, 77712 KB] Building successor generator...done!
[t=0.579585s, 77712 KB] peak memory difference for successor generator creation: 0 KB
[t=0.579585s, 77712 KB] time for successor generation creation: 0.0199837s
[t=0.579585s, 77712 KB] Variables: 628
[t=0.579585s, 77712 KB] FactPairs: 1885
[t=0.579585s, 77712 KB] Bytes per state: 96
[t=0.579585s, 77712 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.583591s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 142
[t=0.583591s, 77712 KB] g=0, 1 evaluated, 0 expanded
[t=0.583591s, 77712 KB] Initial heuristic value for ff(transform=adapt_costs(cost_type=one)): 142
[t=0.583591s, 77712 KB] pruning method: none
[t=0.591577s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 140
[t=0.591577s, 77712 KB] g=1, 2 evaluated, 1 expanded
[t=0.615569s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 136
[t=0.615569s, 77712 KB] g=1, 6 evaluated, 1 expanded
[t=0.643544s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 135
[t=0.643544s, 77712 KB] g=1, 11 evaluated, 6 expanded
[t=0.73642s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 133
[t=0.73642s, 77712 KB] g=2, 26 evaluated, 16 expanded
[t=0.747424s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 132
[t=0.747424s, 77712 KB] g=2, 28 evaluated, 18 expanded
[t=0.891229s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 131
[t=0.891229s, 77712 KB] g=4, 53 evaluated, 34 expanded
[t=0.899219s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 130
[t=0.899219s, 77712 KB] g=4, 54 evaluated, 35 expanded
[t=0.943158s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 129
[t=0.943158s, 77712 KB] g=5, 62 evaluated, 38 expanded
[t=0.947161s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 128
[t=0.947161s, 77712 KB] g=5, 63 evaluated, 39 expanded
[t=0.96713s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 127
[t=0.96713s, 77712 KB] g=6, 66 evaluated, 40 expanded
[t=0.999111s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 126
[t=0.999111s, 77712 KB] g=6, 72 evaluated, 41 expanded
[t=1.05507s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 124
[t=1.05507s, 77712 KB] g=6, 82 evaluated, 44 expanded
[t=1.07504s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 122
[t=1.07504s, 77712 KB] g=7, 85 evaluated, 45 expanded
[t=1.10303s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 121
[t=1.10303s, 77712 KB] g=7, 91 evaluated, 46 expanded
[t=1.11101s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 120
[t=1.11501s, 77712 KB] g=7, 92 evaluated, 47 expanded
[t=1.14297s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 118
[t=1.14297s, 77712 KB] g=8, 97 evaluated, 48 expanded
[t=1.17096s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 117
[t=1.17096s, 77712 KB] g=8, 103 evaluated, 49 expanded
[t=1.17895s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 116
[t=1.17895s, 77712 KB] g=8, 104 evaluated, 50 expanded
[t=1.20294s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 115
[t=1.20294s, 77712 KB] g=9, 108 evaluated, 51 expanded
[t=1.22689s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 114
[t=1.22689s, 77712 KB] g=9, 113 evaluated, 52 expanded
[t=1.27886s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 113
[t=1.27886s, 77712 KB] g=10, 123 evaluated, 55 expanded
[t=1.28685s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 110
[t=1.28685s, 77712 KB] g=10, 124 evaluated, 56 expanded
[t=1.47069s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 109
[t=1.47069s, 77712 KB] g=12, 158 evaluated, 63 expanded
[t=1.47468s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 106
[t=1.47468s, 77712 KB] g=12, 159 evaluated, 64 expanded
[t=2.86206s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 105
[t=2.86206s, 77712 KB] g=19, 420 evaluated, 146 expanded
[t=2.86606s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 104
[t=2.86606s, 77712 KB] g=19, 421 evaluated, 147 expanded
[t=2.96203s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 103
[t=2.96203s, 77712 KB] g=21, 439 evaluated, 152 expanded
[t=3.00598s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 102
[t=3.00598s, 77712 KB] g=21, 448 evaluated, 154 expanded
[t=3.48178s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 101
[t=3.48178s, 77712 KB] g=23, 540 evaluated, 185 expanded
[t=4.32543s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 100
[t=4.32543s, 77712 KB] g=24, 704 evaluated, 241 expanded
[t=5.44881s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 88
[t=5.44881s, 77712 KB] g=30, 917 evaluated, 332 expanded
[t=5.47679s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 86
[t=5.47679s, 77712 KB] g=30, 923 evaluated, 334 expanded
[t=5.49277s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 84
[t=5.49277s, 77712 KB] g=30, 926 evaluated, 337 expanded
[t=5.50078s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 82
[t=5.50078s, 77712 KB] g=30, 927 evaluated, 338 expanded
[t=5.62069s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 78
[t=5.62069s, 77712 KB] g=33, 952 evaluated, 348 expanded
[t=5.7206s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 77
[t=5.7206s, 77712 KB] g=33, 972 evaluated, 349 expanded
[t=5.7246s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 76
[t=5.7246s, 77712 KB] g=33, 973 evaluated, 350 expanded
[t=5.73659s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 74
[t=5.73659s, 77712 KB] g=34, 975 evaluated, 352 expanded
[t=5.84846s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 73
[t=5.84846s, 77712 KB] g=35, 998 evaluated, 357 expanded
[t=5.85645s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 72
[t=5.85645s, 77712 KB] g=35, 999 evaluated, 358 expanded
[t=5.86045s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 69
[t=5.86045s, 77712 KB] g=35, 1000 evaluated, 359 expanded
[t=5.92038s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 68
[t=5.92038s, 77712 KB] g=36, 1012 evaluated, 361 expanded
[t=5.92439s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 67
[t=5.92439s, 77712 KB] g=36, 1013 evaluated, 362 expanded
[t=5.98829s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 66
[t=5.98829s, 77712 KB] g=37, 1025 evaluated, 364 expanded
[t=5.99629s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 65
[t=5.99629s, 77712 KB] g=37, 1026 evaluated, 365 expanded
[t=6.00028s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 64
[t=6.00028s, 77712 KB] g=37, 1027 evaluated, 366 expanded
[t=6.00828s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 63
[t=6.00828s, 77712 KB] g=37, 1028 evaluated, 367 expanded
[t=6.12416s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 62
[t=6.12416s, 77712 KB] g=38, 1054 evaluated, 373 expanded
[t=6.26004s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 61
[t=6.26004s, 77712 KB] g=39, 1082 evaluated, 375 expanded
[t=6.27601s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 58
[t=6.27601s, 77712 KB] g=39, 1085 evaluated, 378 expanded
[t=6.4479s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 57
[t=6.4479s, 77712 KB] g=41, 1122 evaluated, 386 expanded
[t=6.6398s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 56
[t=6.6398s, 77712 KB] g=42, 1163 evaluated, 400 expanded
[t=8.81024s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 55
[t=8.81024s, 77712 KB] g=45, 1632 evaluated, 548 expanded
[t=8.81423s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 54
[t=8.81423s, 77712 KB] g=45, 1633 evaluated, 549 expanded
[t=8.88619s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 52
[t=8.88619s, 77712 KB] g=46, 1648 evaluated, 553 expanded
[t=8.95416s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 51
[t=8.95416s, 77712 KB] g=47, 1662 evaluated, 555 expanded
[t=9.10602s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 50
[t=9.10602s, 77712 KB] g=48, 1693 evaluated, 559 expanded
[t=305.497s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 46
[t=305.497s, 77712 KB] g=55, 64131 evaluated, 13946 expanded
[t=305.701s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 43
[t=305.701s, 77712 KB] g=57, 64176 evaluated, 13961 expanded
[t=305.725s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 42
[t=305.725s, 77712 KB] g=58, 64181 evaluated, 13962 expanded
[t=305.729s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 40
[t=305.729s, 77712 KB] g=58, 64182 evaluated, 13962 expanded
[t=305.757s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 39
[t=305.757s, 77712 KB] g=58, 64188 evaluated, 13963 expanded
[t=305.761s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 37
[t=305.761s, 77712 KB] g=58, 64189 evaluated, 13964 expanded
[t=305.785s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 30
[t=305.785s, 77712 KB] g=58, 64194 evaluated, 13969 expanded
[t=305.789s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 29
[t=305.789s, 77712 KB] g=58, 64195 evaluated, 13970 expanded
[t=305.797s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 26
[t=305.797s, 77712 KB] g=58, 64196 evaluated, 13971 expanded
[t=305.869s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 25
[t=305.869s, 77712 KB] g=60, 64214 evaluated, 13975 expanded
[t=305.885s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 24
[t=305.885s, 77712 KB] g=60, 64218 evaluated, 13975 expanded
[t=305.973s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 23
[t=305.973s, 77712 KB] g=60, 64238 evaluated, 13979 expanded
[t=306.209s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 22
[t=306.209s, 77712 KB] g=61, 64294 evaluated, 13987 expanded
[t=309.344s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 21
[t=309.344s, 77712 KB] g=64, 65030 evaluated, 14090 expanded
[t=309.56s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 20
[t=309.56s, 77712 KB] g=64, 65080 evaluated, 14091 expanded
[t=309.564s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 19
[t=309.564s, 77712 KB] g=64, 65081 evaluated, 14092 expanded
[t=310.116s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 18
[t=310.116s, 77712 KB] g=65, 65210 evaluated, 14104 expanded
[t=310.391s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 17
[t=310.391s, 77712 KB] g=65, 65273 evaluated, 14105 expanded
[t=310.396s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 16
[t=310.396s, 77712 KB] g=65, 65274 evaluated, 14106 expanded
[t=310.399s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 15
[t=310.399s, 77712 KB] g=65, 65275 evaluated, 14107 expanded
[t=310.403s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 14
[t=310.403s, 77712 KB] g=65, 65276 evaluated, 14108 expanded
[t=310.435s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 11
[t=310.435s, 77712 KB] g=65, 65284 evaluated, 14116 expanded
[t=310.443s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 10
[t=310.443s, 77712 KB] g=65, 65286 evaluated, 14118 expanded
[t=310.543s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 8
[t=310.543s, 77712 KB] g=66, 65312 evaluated, 14119 expanded
[t=310.607s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 7
[t=310.607s, 77712 KB] g=66, 65329 evaluated, 14120 expanded
[t=310.611s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 6
[t=310.611s, 77712 KB] g=66, 65330 evaluated, 14121 expanded
[t=310.615s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 5
[t=310.615s, 77712 KB] g=66, 65331 evaluated, 14122 expanded
[t=310.619s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 4
[t=310.619s, 77712 KB] g=66, 65332 evaluated, 14123 expanded
[t=310.623s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 3
[t=310.623s, 77712 KB] g=66, 65333 evaluated, 14124 expanded
[t=310.623s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 2
[t=310.623s, 77712 KB] g=66, 65334 evaluated, 14125 expanded
[t=310.627s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 1
[t=310.627s, 77712 KB] g=66, 65335 evaluated, 14126 expanded
[t=310.627s, 77712 KB] New best heuristic value for ff(transform=adapt_costs(cost_type=one)): 0
[t=310.627s, 77712 KB] g=66, 65336 evaluated, 14127 expanded
[t=310.627s, 77712 KB] Solution found!
[t=310.627s, 77712 KB] Actual search time: 310.044s
start-dealing  (1)
deal-card card-d0-s0-v4 card-d0-s0-v1 deal-0 card-d2-s0-v7 pile-0 (0)
make-unmovable-and-stop-at-unmovable card-d2-s0-v7 card-d0-s0-v2 (0)
deal-card card-d0-s0-v1 card-d2-s0-v3 deal-0 card-d1-s0-v2 pile-1 (0)
deal-card card-d2-s0-v3 card-d2-s0-v5 deal-0 card-d3-s0-v7 pile-2 (0)
make-unmovable-and-stop-at-unmovable card-d3-s0-v7 card-d0-s0-v7 (0)
deal-card card-d2-s0-v5 card-d3-s0-v1 deal-0 card-d2-s0-v1 pile-3 (0)
make-unmovable-and-stop-at-unmovable card-d2-s0-v1 card-d3-s0-v0 (0)
deal-card card-d3-s0-v1 card-d2-s0-v4 deal-0 card-d0-s0-v6 pile-4 (0)
make-unmovable-and-stop-at-unmovable card-d0-s0-v6 card-d1-s0-v0 (0)
deal-card card-d2-s0-v4 deal-0 deal-0 card-d1-s0-v3 pile-5 (0)
make-unmovable-and-stop-at-unmovable card-d1-s0-v3 card-d1-s0-v6 (0)
finish-dealing deal-0 deal-1 (0)
start-dealing  (1)
deal-card card-d3-s0-v5 card-d3-s0-v3 deal-1 card-d0-s0-v4 pile-0 (0)
make-unmovable-and-stop-at-unmovable card-d0-s0-v4 card-d2-s0-v7 (0)
deal-card card-d3-s0-v3 card-d0-s0-v5 deal-1 card-d0-s0-v1 pile-1 (0)
make-unmovable-and-continue card-d0-s0-v1 card-d1-s0-v2 (0)
make-unmovable-and-stop-at-unmovable card-d1-s0-v2 card-d2-s0-v2 (0)
deal-card card-d0-s0-v5 card-d2-s0-v0 deal-1 card-d2-s0-v3 pile-2 (0)
make-unmovable-and-stop-at-unmovable card-d2-s0-v3 card-d3-s0-v7 (0)
deal-card card-d2-s0-v0 card-d1-s0-v7 deal-1 card-d2-s0-v5 pile-3 (0)
make-unmovable-and-stop-at-unmovable card-d2-s0-v5 card-d2-s0-v1 (0)
deal-card card-d1-s0-v7 card-d1-s0-v4 deal-1 card-d3-s0-v1 pile-4 (0)
make-unmovable-and-stop-at-unmovable card-d3-s0-v1 card-d0-s0-v6 (0)
deal-card card-d1-s0-v4 deal-1 deal-1 card-d2-s0-v4 pile-5 (0)
make-unmovable-and-stop-at-unmovable card-d2-s0-v4 card-d1-s0-v3 (0)
finish-dealing deal-1 deal-2 (0)
move-to-card card-d3-s0-v3 card-d0-s0-v1 card-d1-s0-v4 pile-5 (1)
change-tableau-and-stop card-d3-s0-v3 pile-1 pile-5 (0)
make-movable-and-continue card-d0-s0-v1 card-d1-s0-v2 (0)
make-movable-and-stop card-d1-s0-v2 card-d2-s0-v2 (0)
move-to-card card-d2-s0-v0 card-d2-s0-v5 card-d0-s0-v1 pile-1 (1)
change-tableau-and-stop card-d2-s0-v0 pile-3 pile-1 (0)
make-movable-and-stop card-d2-s0-v5 card-d2-s0-v1 (0)
move-to-card card-d1-s0-v4 card-d2-s0-v4 card-d0-s0-v5 pile-2 (1)
change-tableau-and-continue card-d1-s0-v4 pile-5 pile-2 card-d3-s0-v3 (0)
change-tableau-and-stop card-d3-s0-v3 pile-5 pile-2 (0)
make-movable-and-stop card-d2-s0-v4 card-d1-s0-v3 (0)
move-to-card card-d2-s0-v4 card-d1-s0-v3 card-d3-s0-v5 pile-0 (1)
change-tableau-and-stop card-d2-s0-v4 pile-5 pile-0 (0)
make-movable-and-stop card-d1-s0-v3 card-d1-s0-v6 (0)
move-to-card card-d1-s0-v3 card-d1-s0-v6 card-d2-s0-v4 pile-0 (1)
change-tableau-and-stop card-d1-s0-v3 pile-5 pile-0 (0)
make-movable-and-stop card-d1-s0-v6 card-d2-s0-v6 (0)
move-to-card card-d2-s0-v5 card-d2-s0-v1 card-d1-s0-v6 pile-5 (1)
change-tableau-and-stop card-d2-s0-v5 pile-3 pile-5 (0)
make-movable-and-stop card-d2-s0-v1 card-d3-s0-v0 (0)
move-to-card card-d2-s0-v0 card-d0-s0-v1 card-d2-s0-v1 pile-3 (1)
change-tableau-and-stop card-d2-s0-v0 pile-1 pile-3 (0)
move-to-card card-d1-s0-v2 card-d2-s0-v2 card-d1-s0-v3 pile-0 (1)
change-tableau-and-continue card-d1-s0-v2 pile-1 pile-0 card-d0-s0-v1 (0)
change-tableau-and-stop card-d0-s0-v1 pile-1 pile-0 (0)
make-movable-and-stop card-d2-s0-v2 card-d1-s0-v1 (0)
move-to-card card-d0-s0-v1 card-d1-s0-v2 card-d2-s0-v2 pile-1 (1)
change-tableau-and-stop card-d0-s0-v1 pile-0 pile-1 (0)
move-to-card card-d1-s0-v6 card-d2-s0-v6 card-d1-s0-v7 pile-4 (1)
change-tableau-and-continue card-d1-s0-v6 pile-5 pile-4 card-d2-s0-v5 (0)
change-tableau-and-stop card-d2-s0-v5 pile-5 pile-4 (0)
make-movable-and-stop card-d2-s0-v6 pile-5 (0)
move-to-card card-d1-s0-v2 card-d1-s0-v3 card-d3-s0-v3 pile-2 (1)
change-tableau-and-stop card-d1-s0-v2 pile-0 pile-2 (0)
move-to-card card-d2-s0-v0 card-d2-s0-v1 card-d0-s0-v1 pile-1 (1)
change-tableau-and-stop card-d2-s0-v0 pile-3 pile-1 (0)
move-to-card card-d2-s0-v1 card-d3-s0-v0 card-d1-s0-v2 pile-2 (1)
change-tableau-and-stop card-d2-s0-v1 pile-3 pile-2 (0)
make-movable-and-stop card-d3-s0-v0 card-d3-s0-v4 (0)
move-to-card card-d2-s0-v5 card-d1-s0-v6 card-d2-s0-v6 pile-5 (1)
change-tableau-and-stop card-d2-s0-v5 pile-4 pile-5 (0)
move-to-card card-d2-s0-v4 card-d3-s0-v5 card-d2-s0-v5 pile-5 (1)
change-tableau-and-continue card-d2-s0-v4 pile-0 pile-5 card-d1-s0-v3 (0)
change-tableau-and-stop card-d1-s0-v3 pile-0 pile-5 (0)
move-to-card card-d3-s0-v5 card-d0-s0-v4 card-d1-s0-v6 pile-4 (1)
change-tableau-and-stop card-d3-s0-v5 pile-0 pile-4 (0)
make-movable-and-stop card-d0-s0-v4 card-d2-s0-v7 (0)
move-to-card card-d0-s0-v4 card-d2-s0-v7 card-d3-s0-v5 pile-4 (1)
change-tableau-and-stop card-d0-s0-v4 pile-0 pile-4 (0)
make-movable-and-stop card-d2-s0-v7 card-d0-s0-v2 (0)
move-to-card card-d1-s0-v2 card-d3-s0-v3 card-d1-s0-v3 pile-5 (1)
change-tableau-and-continue card-d1-s0-v2 pile-2 pile-5 card-d2-s0-v1 (0)
change-tableau-and-stop card-d2-s0-v1 pile-2 pile-5 (0)
move-to-card card-d3-s0-v0 card-d3-s0-v4 card-d2-s0-v1 pile-5 (1)
change-tableau-and-stop card-d3-s0-v0 pile-3 pile-5 (0)
make-movable-and-stop card-d3-s0-v4 pile-3 (0)
move-to-card card-d1-s0-v6 card-d1-s0-v7 card-d2-s0-v7 pile-0 (1)
change-tableau-and-continue card-d1-s0-v6 pile-4 pile-0 card-d3-s0-v5 (0)
change-tableau-and-continue card-d3-s0-v5 pile-4 pile-0 card-d0-s0-v4 (0)
change-tableau-and-stop card-d0-s0-v4 pile-4 pile-0 (0)
move-to-card card-d2-s0-v2 card-d1-s0-v1 card-d3-s0-v3 pile-2 (1)
change-tableau-and-continue card-d2-s0-v2 pile-1 pile-2 card-d0-s0-v1 (0)
change-tableau-and-continue card-d0-s0-v1 pile-1 pile-2 card-d2-s0-v0 (0)
change-tableau-and-stop card-d2-s0-v0 pile-1 pile-2 (0)
make-movable-and-stop card-d1-s0-v1 card-d1-s0-v5 (0)
move-to-card card-d3-s0-v0 card-d2-s0-v1 card-d1-s0-v1 pile-1 (1)
change-tableau-and-stop card-d3-s0-v0 pile-5 pile-1 (0)
move-to-card card-d2-s0-v0 card-d0-s0-v1 card-d2-s0-v1 pile-5 (1)
change-tableau-and-stop card-d2-s0-v0 pile-2 pile-5 (0)
move-to-card card-d3-s0-v3 card-d1-s0-v4 card-d0-s0-v4 pile-0 (1)
change-tableau-and-continue card-d3-s0-v3 pile-2 pile-0 card-d2-s0-v2 (0)
change-tableau-and-continue card-d2-s0-v2 pile-2 pile-0 card-d0-s0-v1 (0)
change-tableau-and-stop card-d0-s0-v1 pile-2 pile-0 (0)
move-to-card card-d3-s0-v0 card-d1-s0-v1 card-d0-s0-v1 pile-0 (1)
change-tableau-and-stop card-d3-s0-v0 pile-1 pile-0 (0)
start-collecting-deck card-d3-s0-v0 (1)
collect-card card-d3-s0-v0 card-d0-s0-v1 pile-0 (0)
collect-card card-d0-s0-v1 card-d2-s0-v2 pile-0 (0)
collect-card card-d2-s0-v2 card-d3-s0-v3 pile-0 (0)
collect-card card-d3-s0-v3 card-d0-s0-v4 pile-0 (0)
collect-card card-d0-s0-v4 card-d3-s0-v5 pile-0 (0)
collect-card card-d3-s0-v5 card-d1-s0-v6 pile-0 (0)
collect-card card-d1-s0-v6 card-d2-s0-v7 pile-0 (0)
finish-collecting-deck card-d2-s0-v7 card-d0-s0-v2 pile-0 (0)
make-movable-and-stop card-d0-s0-v2 card-d3-s0-v6 (0)
move-to-card card-d1-s0-v1 card-d1-s0-v5 card-d0-s0-v2 pile-0 (1)
change-tableau-and-stop card-d1-s0-v1 pile-1 pile-0 (0)
make-movable-and-stop card-d1-s0-v5 pile-1 (0)
move-to-card card-d3-s0-v4 pile-3 card-d1-s0-v5 pile-1 (1)
change-tableau-and-stop card-d3-s0-v4 pile-3 pile-1 (0)
make-movable-ignore-pile pile-3 (0)
move-to-tableau card-d0-s0-v2 card-d3-s0-v6 pile-3 (1)
change-tableau-and-continue card-d0-s0-v2 pile-0 pile-3 card-d1-s0-v1 (0)
change-tableau-and-stop card-d1-s0-v1 pile-0 pile-3 (0)
make-movable-and-stop card-d3-s0-v6 card-d0-s0-v0 (0)
move-to-card card-d2-s0-v0 card-d2-s0-v1 card-d1-s0-v1 pile-3 (1)
change-tableau-and-stop card-d2-s0-v0 pile-5 pile-3 (0)
move-to-card card-d0-s0-v5 card-d2-s0-v3 card-d3-s0-v6 pile-0 (1)
change-tableau-and-continue card-d0-s0-v5 pile-2 pile-0 card-d1-s0-v4 (0)
change-tableau-and-stop card-d1-s0-v4 pile-2 pile-0 (0)
make-movable-and-stop card-d2-s0-v3 card-d3-s0-v7 (0)
move-to-card card-d2-s0-v3 card-d3-s0-v7 card-d3-s0-v4 pile-1 (1)
change-tableau-and-stop card-d2-s0-v3 pile-2 pile-1 (0)
make-movable-and-stop card-d3-s0-v7 card-d0-s0-v7 (0)
move-to-card card-d3-s0-v6 card-d0-s0-v0 card-d3-s0-v7 pile-2 (1)
change-tableau-and-continue card-d3-s0-v6 pile-0 pile-2 card-d0-s0-v5 (0)
change-tableau-and-continue card-d0-s0-v5 pile-0 pile-2 card-d1-s0-v4 (0)
change-tableau-and-stop card-d1-s0-v4 pile-0 pile-2 (0)
make-movable-and-stop card-d0-s0-v0 pile-0 (0)
move-to-card card-d0-s0-v0 pile-0 card-d2-s0-v1 pile-5 (1)
change-tableau-and-stop card-d0-s0-v0 pile-0 pile-5 (0)
make-movable-ignore-pile pile-0 (0)
move-to-tableau card-d1-s0-v7 card-d3-s0-v1 pile-0 (1)
change-tableau-and-stop card-d1-s0-v7 pile-4 pile-0 (0)
make-movable-and-stop card-d3-s0-v1 card-d0-s0-v6 (0)
move-to-card card-d0-s0-v0 card-d2-s0-v1 card-d3-s0-v1 pile-4 (1)
change-tableau-and-stop card-d0-s0-v0 pile-5 pile-4 (0)
move-to-card card-d1-s0-v2 card-d1-s0-v3 card-d2-s0-v3 pile-1 (1)
change-tableau-and-continue card-d1-s0-v2 pile-5 pile-1 card-d2-s0-v1 (0)
change-tableau-and-stop card-d2-s0-v1 pile-5 pile-1 (0)
move-to-card card-d1-s0-v3 card-d2-s0-v4 card-d1-s0-v4 pile-2 (1)
change-tableau-and-stop card-d1-s0-v3 pile-5 pile-2 (0)
move-to-card card-d1-s0-v2 card-d2-s0-v3 card-d1-s0-v3 pile-2 (1)
change-tableau-and-continue card-d1-s0-v2 pile-1 pile-2 card-d2-s0-v1 (0)
change-tableau-and-stop card-d2-s0-v1 pile-1 pile-2 (0)
move-to-card card-d2-s0-v6 pile-5 card-d1-s0-v7 pile-0 (1)
change-tableau-and-continue card-d2-s0-v6 pile-5 pile-0 card-d2-s0-v5 (0)
change-tableau-and-continue card-d2-s0-v5 pile-5 pile-0 card-d2-s0-v4 (0)
change-tableau-and-stop card-d2-s0-v4 pile-5 pile-0 (0)
make-movable-ignore-pile pile-5 (0)
move-to-tableau card-d3-s0-v1 card-d0-s0-v6 pile-5 (1)
change-tableau-and-continue card-d3-s0-v1 pile-4 pile-5 card-d0-s0-v0 (0)
change-tableau-and-stop card-d0-s0-v0 pile-4 pile-5 (0)
make-movable-and-stop card-d0-s0-v6 card-d1-s0-v0 (0)
move-to-card card-d1-s0-v5 pile-1 card-d0-s0-v6 pile-4 (1)
change-tableau-and-continue card-d1-s0-v5 pile-1 pile-4 card-d3-s0-v4 (0)
change-tableau-and-continue card-d3-s0-v4 pile-1 pile-4 card-d2-s0-v3 (0)
change-tableau-and-stop card-d2-s0-v3 pile-1 pile-4 (0)
make-movable-ignore-pile pile-1 (0)
move-to-tableau card-d2-s0-v1 card-d1-s0-v2 pile-1 (1)
change-tableau-and-stop card-d2-s0-v1 pile-2 pile-1 (0)
move-to-card card-d1-s0-v2 card-d1-s0-v3 card-d2-s0-v3 pile-4 (1)
change-tableau-and-stop card-d1-s0-v2 pile-2 pile-4 (0)
move-to-card card-d0-s0-v0 card-d3-s0-v1 card-d2-s0-v1 pile-1 (1)
change-tableau-and-stop card-d0-s0-v0 pile-5 pile-1 (0)
move-to-card card-d3-s0-v1 pile-5 card-d1-s0-v2 pile-4 (1)
change-tableau-and-stop card-d3-s0-v1 pile-5 pile-4 (0)
make-movable-ignore-pile pile-5 (0)
move-to-card card-d1-s0-v3 card-d1-s0-v4 card-d2-s0-v4 pile-0 (1)
change-tableau-and-stop card-d1-s0-v3 pile-2 pile-0 (0)
move-to-tableau card-d3-s0-v7 card-d0-s0-v7 pile-5 (1)
change-tableau-and-continue card-d3-s0-v7 pile-2 pile-5 card-d3-s0-v6 (0)
change-tableau-and-continue card-d3-s0-v6 pile-2 pile-5 card-d0-s0-v5 (0)
change-tableau-and-continue card-d0-s0-v5 pile-2 pile-5 card-d1-s0-v4 (0)
change-tableau-and-stop card-d1-s0-v4 pile-2 pile-5 (0)
make-movable-and-stop card-d0-s0-v7 card-d3-s0-v2 (0)
move-to-card card-d0-s0-v0 card-d2-s0-v1 card-d3-s0-v1 pile-4 (1)
change-tableau-and-stop card-d0-s0-v0 pile-1 pile-4 (0)
move-to-card card-d1-s0-v3 card-d2-s0-v4 card-d1-s0-v4 pile-5 (1)
change-tableau-and-stop card-d1-s0-v3 pile-0 pile-5 (0)
move-to-card card-d0-s0-v0 card-d3-s0-v1 card-d2-s0-v1 pile-1 (1)
change-tableau-and-stop card-d0-s0-v0 pile-4 pile-1 (0)
move-to-card card-d0-s0-v6 card-d1-s0-v0 card-d0-s0-v7 pile-2 (1)
change-tableau-and-continue card-d0-s0-v6 pile-4 pile-2 card-d1-s0-v5 (0)
change-tableau-and-continue card-d1-s0-v5 pile-4 pile-2 card-d3-s0-v4 (0)
change-tableau-and-continue card-d3-s0-v4 pile-4 pile-2 card-d2-s0-v3 (0)
change-tableau-and-continue card-d2-s0-v3 pile-4 pile-2 card-d1-s0-v2 (0)
change-tableau-and-continue card-d1-s0-v2 pile-4 pile-2 card-d3-s0-v1 (0)
change-tableau-and-stop card-d3-s0-v1 pile-4 pile-2 (0)
make-movable-and-stop card-d1-s0-v0 card-d0-s0-v3 (0)
move-to-card card-d1-s0-v0 card-d0-s0-v3 card-d3-s0-v1 pile-2 (1)
change-tableau-and-stop card-d1-s0-v0 pile-4 pile-2 (0)
make-movable-and-stop card-d0-s0-v3 pile-4 (0)
start-collecting-deck card-d1-s0-v0 (1)
collect-card card-d1-s0-v0 card-d3-s0-v1 pile-2 (0)
collect-card card-d3-s0-v1 card-d1-s0-v2 pile-2 (0)
collect-card card-d1-s0-v2 card-d2-s0-v3 pile-2 (0)
collect-card card-d2-s0-v3 card-d3-s0-v4 pile-2 (0)
collect-card card-d3-s0-v4 card-d1-s0-v5 pile-2 (0)
collect-card card-d1-s0-v5 card-d0-s0-v6 pile-2 (0)
collect-card card-d0-s0-v6 card-d0-s0-v7 pile-2 (0)
finish-collecting-deck card-d0-s0-v7 card-d3-s0-v2 pile-2 (0)
make-movable-and-stop card-d3-s0-v2 pile-2 (0)
move-to-card card-d3-s0-v2 pile-2 card-d0-s0-v3 pile-4 (1)
change-tableau-and-stop card-d3-s0-v2 pile-2 pile-4 (0)
make-movable-ignore-pile pile-2 (0)
move-to-card card-d0-s0-v3 pile-4 card-d2-s0-v4 pile-0 (1)
change-tableau-and-continue card-d0-s0-v3 pile-4 pile-0 card-d3-s0-v2 (0)
change-tableau-and-stop card-d3-s0-v2 pile-4 pile-0 (0)
make-movable-ignore-pile pile-4 (0)
move-to-card card-d3-s0-v2 card-d0-s0-v3 card-d1-s0-v3 pile-5 (1)
change-tableau-and-stop card-d3-s0-v2 pile-0 pile-5 (0)
move-to-tableau card-d2-s0-v1 pile-1 pile-4 (1)
change-tableau-and-continue card-d2-s0-v1 pile-1 pile-4 card-d0-s0-v0 (0)
change-tableau-and-stop card-d0-s0-v0 pile-1 pile-4 (0)
make-movable-ignore-pile pile-1 (0)
move-to-card card-d2-s0-v1 pile-4 card-d3-s0-v2 pile-5 (1)
change-tableau-and-continue card-d2-s0-v1 pile-4 pile-5 card-d0-s0-v0 (0)
change-tableau-and-stop card-d0-s0-v0 pile-4 pile-5 (0)
make-movable-ignore-pile pile-4 (0)
move-to-card card-d0-s0-v2 pile-3 card-d0-s0-v3 pile-0 (1)
change-tableau-and-continue card-d0-s0-v2 pile-3 pile-0 card-d1-s0-v1 (0)
change-tableau-and-continue card-d1-s0-v1 pile-3 pile-0 card-d2-s0-v0 (0)
change-tableau-and-stop card-d2-s0-v0 pile-3 pile-0 (0)
make-movable-ignore-pile pile-3 (0)
start-collecting-deck card-d0-s0-v0 (1)
collect-card card-d0-s0-v0 card-d2-s0-v1 pile-5 (0)
collect-card card-d2-s0-v1 card-d3-s0-v2 pile-5 (0)
collect-card card-d3-s0-v2 card-d1-s0-v3 pile-5 (0)
collect-card card-d1-s0-v3 card-d1-s0-v4 pile-5 (0)
collect-card card-d1-s0-v4 card-d0-s0-v5 pile-5 (0)
collect-card card-d0-s0-v5 card-d3-s0-v6 pile-5 (0)
collect-card card-d3-s0-v6 card-d3-s0-v7 pile-5 (0)
finish-collecting-deck card-d3-s0-v7 pile-5 pile-5 (0)
make-movable-ignore-pile pile-5 (0)
start-collecting-deck card-d2-s0-v0 (1)
collect-card card-d2-s0-v0 card-d1-s0-v1 pile-0 (0)
collect-card card-d1-s0-v1 card-d0-s0-v2 pile-0 (0)
collect-card card-d0-s0-v2 card-d0-s0-v3 pile-0 (0)
collect-card card-d0-s0-v3 card-d2-s0-v4 pile-0 (0)
collect-card card-d2-s0-v4 card-d2-s0-v5 pile-0 (0)
collect-card card-d2-s0-v5 card-d2-s0-v6 pile-0 (0)
collect-card card-d2-s0-v6 card-d1-s0-v7 pile-0 (0)
finish-collecting-deck card-d1-s0-v7 pile-0 pile-0 (0)
[t=310.627s, 77712 KB] Plan length: 252 step(s).
[t=310.627s, 77712 KB] Plan cost: 64
[t=310.627s, 77712 KB] Expanded 14128 state(s).
[t=310.627s, 77712 KB] Reopened 0 state(s).
[t=310.627s, 77712 KB] Evaluated 65336 state(s).
[t=310.627s, 77712 KB] Evaluations: 65336
[t=310.627s, 77712 KB] Generated 70026 state(s).
[t=310.627s, 77712 KB] Dead ends: 9651 state(s).
[t=310.627s, 77712 KB] Number of registered states: 65336
[t=310.627s, 77712 KB] Int hash set load factor: 65336/131072 = 0.498474
[t=310.627s, 77712 KB] Int hash set resizes: 17
[t=310.627s, 77712 KB] Search time: 310.048s
[t=310.627s, 77712 KB] Total time: 310.627s
Solution found.
Peak memory: 77712 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 64 

Successful plans:
Value: 64
 sas_plan 64 

validate exit code: 0

INFO     Planner time: 318.84s
