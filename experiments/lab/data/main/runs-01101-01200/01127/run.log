INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 26 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
864 relevant atoms
878 auxiliary atoms
1742 final queue length
3000 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.040s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.014s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
8 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
8 of 8 variables necessary.
0 of 8 mutex groups necessary.
688 of 688 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 8
Translator derived variables: 0
Translator facts: 78
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 688
Translator axioms: 0
Translator task size: 4074
Translator peak memory: 34888 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.070s CPU, 0.064s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00266375s, 45728 KB] done reading input!
[t=0.00266375s, 46124 KB] Generating patterns using: systematic pattern collection generator
[t=0.00266375s, 46124 KB] building causal graph...done! [t=0s]
[t=0.00266375s, 46124 KB] Found 110 SGA patterns.
[t=0.00266375s, 46124 KB] Found 136 interesting patterns.
[t=0.00266375s, 46124 KB] systematic pattern collection generator number of patterns: 136
[t=0.00266375s, 46124 KB] systematic pattern collection generator total PDB size: 603168
[t=0.00266375s, 46124 KB] systematic pattern collection generator computation time: 0s
[t=0.00266375s, 46124 KB] Computing PDBs for pattern collection...
[t=0.206439s, 48568 KB] Done computing PDBs for pattern collection: 0.203775s
[t=0.210446s, 49552 KB] Building successor generator...done!
[t=0.210446s, 49552 KB] peak memory difference for successor generator creation: 0 KB
[t=0.210446s, 49552 KB] time for successor generation creation: 0s
[t=0.210446s, 49552 KB] Variables: 8
[t=0.210446s, 49552 KB] FactPairs: 78
[t=0.210446s, 49552 KB] Bytes per state: 4
[t=0.210446s, 49552 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.210446s, 49552 KB] g=0, 1 evaluated, 0 expanded
[t=0.210446s, 49552 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=0.210446s, 49552 KB] pruning method: none
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 19
[t=0.210446s, 49552 KB] g=34, 2 evaluated, 1 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 18
[t=0.210446s, 49552 KB] g=59, 8 evaluated, 2 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 17
[t=0.210446s, 49552 KB] g=203, 12 evaluated, 3 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 16
[t=0.210446s, 49552 KB] g=229, 17 evaluated, 4 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.210446s, 49552 KB] g=269, 22 evaluated, 5 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.210446s, 49552 KB] g=270, 27 evaluated, 6 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.210446s, 49552 KB] g=371, 71 evaluated, 18 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.210446s, 49552 KB] g=373, 105 evaluated, 24 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.210446s, 49552 KB] g=712, 182 evaluated, 37 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.210446s, 49552 KB] g=783, 203 evaluated, 40 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.210446s, 49552 KB] g=815, 216 evaluated, 42 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.210446s, 49552 KB] g=839, 223 evaluated, 43 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.210446s, 49552 KB] g=840, 230 evaluated, 44 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.210446s, 49552 KB] g=864, 235 evaluated, 45 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.210446s, 49552 KB] g=1008, 240 evaluated, 46 expanded
[t=0.210446s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.210446s, 49552 KB] g=1033, 246 evaluated, 47 expanded
[t=0.214434s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.214434s, 49552 KB] g=1034, 254 evaluated, 48 expanded
[t=0.214434s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.214434s, 49552 KB] g=1068, 259 evaluated, 49 expanded
[t=0.214434s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.214434s, 49552 KB] g=1106, 265 evaluated, 50 expanded
[t=0.214434s, 49552 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.214434s, 49552 KB] g=1107, 270 evaluated, 51 expanded
[t=0.214434s, 49552 KB] Solution found!
[t=0.214434s, 49552 KB] Actual search time: 0.00398753s
drive truck-2 city-2-loc-5 city-2-loc-2 (34)
drive truck-2 city-2-loc-2 city-2-loc-1 (25)
drive truck-2 city-2-loc-1 city-1-loc-5 (144)
drive truck-2 city-1-loc-5 city-1-loc-3 (26)
drive truck-2 city-1-loc-3 city-1-loc-1 (40)
pick-up truck-2 city-1-loc-1 package-2 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-5 city-2-loc-2 (34)
pick-up truck-2 city-1-loc-1 package-3 capacity-0 capacity-1 (1)
drive truck-2 city-1-loc-1 city-1-loc-3 (40)
drive truck-2 city-1-loc-3 city-1-loc-5 (26)
drop truck-2 city-1-loc-5 package-2 capacity-0 capacity-1 (1)
pick-up truck-2 city-1-loc-5 package-1 capacity-0 capacity-1 (1)
drive truck-1 city-2-loc-2 city-2-loc-1 (25)
drive truck-1 city-2-loc-1 city-1-loc-5 (144)
pick-up truck-1 city-1-loc-5 package-2 capacity-2 capacity-3 (1)
drive truck-2 city-1-loc-5 city-2-loc-1 (144)
drive truck-2 city-2-loc-1 city-2-loc-2 (25)
drive truck-2 city-2-loc-2 city-2-loc-5 (34)
drive truck-2 city-2-loc-5 city-2-loc-3 (36)
drop truck-2 city-2-loc-3 package-1 capacity-0 capacity-1 (1)
drive truck-2 city-2-loc-3 city-2-loc-4 (31)
drop truck-2 city-2-loc-4 package-3 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-5 city-1-loc-2 (24)
pick-up truck-1 city-1-loc-2 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-1-loc-2 city-1-loc-5 (24)
drive truck-1 city-1-loc-5 city-2-loc-1 (144)
drive truck-1 city-2-loc-1 city-2-loc-2 (25)
drop truck-1 city-2-loc-2 package-4 capacity-1 capacity-2 (1)
drive truck-1 city-2-loc-2 city-2-loc-5 (34)
drive truck-1 city-2-loc-5 city-2-loc-4 (38)
drop truck-1 city-2-loc-4 package-2 capacity-2 capacity-3 (1)
[t=0.214434s, 49552 KB] Plan length: 31 step(s).
[t=0.214434s, 49552 KB] Plan cost: 1107
[t=0.214434s, 49552 KB] Expanded 52 state(s).
[t=0.214434s, 49552 KB] Reopened 0 state(s).
[t=0.214434s, 49552 KB] Evaluated 271 state(s).
[t=0.214434s, 49552 KB] Evaluations: 271
[t=0.214434s, 49552 KB] Generated 363 state(s).
[t=0.214434s, 49552 KB] Dead ends: 0 state(s).
[t=0.214434s, 49552 KB] Number of registered states: 271
[t=0.214434s, 49552 KB] Int hash set load factor: 271/512 = 0.529297
[t=0.214434s, 49552 KB] Int hash set resizes: 9
[t=0.214434s, 49552 KB] Search time: 0.00398753s
[t=0.214434s, 49552 KB] Total time: 0.214434s
Solution found.
Peak memory: 49552 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 1107 

Successful plans:
Value: 1107
 sas_plan 1107 

validate exit code: 0

INFO     Planner time: 0.35s
