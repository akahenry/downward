INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.010s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.003s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.014s wall-clock]
Generated 23 rules.
Computing model... [0.050s CPU, 0.052s wall-clock]
3101 relevant atoms
5231 auxiliary atoms
8332 final queue length
9881 total queue pushes
Completing instantiation... [0.050s CPU, 0.036s wall-clock]
Instantiating: [0.120s CPU, 0.109s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.016s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
7 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
7 of 7 variables necessary.
0 of 7 mutex groups necessary.
850 of 850 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 98
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 850
Translator axioms: 0
Translator task size: 4300
Translator peak memory: 36932 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.160s CPU, 0.154s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0.00275205s, 45728 KB] done reading input!
[t=0.00675168s, 46124 KB] Generating patterns using: systematic pattern collection generator
[t=0.00675168s, 46124 KB] building causal graph...done! [t=0s]
[t=0.00675168s, 46124 KB] Found 15 SGA patterns.
[t=0.00675168s, 46124 KB] Found 45 interesting patterns.
[t=0.00675168s, 46124 KB] systematic pattern collection generator number of patterns: 45
[t=0.00675168s, 46124 KB] systematic pattern collection generator total PDB size: 203315
[t=0.00675168s, 46124 KB] systematic pattern collection generator computation time: 0s
[t=0.00675168s, 46124 KB] Computing PDBs for pattern collection...
[t=0.0427148s, 47012 KB] Done computing PDBs for pattern collection: 0.0359631s
[t=0.0467259s, 47368 KB] Building successor generator...done!
[t=0.0467259s, 47368 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0467259s, 47368 KB] time for successor generation creation: 0s
[t=0.0467259s, 47368 KB] Variables: 7
[t=0.0467259s, 47368 KB] FactPairs: 98
[t=0.0467259s, 47368 KB] Bytes per state: 4
[t=0.0467259s, 47368 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0467259s, 47368 KB] g=0, 1 evaluated, 0 expanded
[t=0.0467259s, 47368 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=0.0467259s, 47368 KB] pruning method: none
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 14
[t=0.0467259s, 47368 KB] g=1, 6 evaluated, 1 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=0.0467259s, 47368 KB] g=2, 12 evaluated, 2 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 12
[t=0.0467259s, 47368 KB] g=3, 14 evaluated, 3 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=0.0467259s, 47368 KB] g=4, 20 evaluated, 4 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 10
[t=0.0467259s, 47368 KB] g=5, 24 evaluated, 5 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=0.0467259s, 47368 KB] g=6, 30 evaluated, 6 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=0.0467259s, 47368 KB] g=7, 36 evaluated, 7 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=0.0467259s, 47368 KB] g=8, 42 evaluated, 8 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=0.0467259s, 47368 KB] g=9, 47 evaluated, 9 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 5
[t=0.0467259s, 47368 KB] g=10, 53 evaluated, 10 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=0.0467259s, 47368 KB] g=11, 54 evaluated, 11 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=0.0467259s, 47368 KB] g=12, 64 evaluated, 12 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=0.0467259s, 47368 KB] g=13, 66 evaluated, 13 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=0.0467259s, 47368 KB] g=14, 74 evaluated, 14 expanded
[t=0.0467259s, 47368 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=0.0467259s, 47368 KB] g=15, 79 evaluated, 15 expanded
[t=0.0467259s, 47368 KB] Solution found!
[t=0.0467259s, 47368 KB] Actual search time: 0s
load p1 t0 l2 (1)
load p0 t0 l2 (1)
drive t0 l2 l1 level57 level3 level60 (1)
load p2 t0 l1 (1)
drive t0 l1 l4 level45 level12 level57 (1)
drive t0 l4 l3 level40 level5 level45 (1)
load p4 t0 l3 (1)
load p3 t0 l3 (1)
unload p2 t0 l3 (1)
unload p0 t0 l3 (1)
drive t0 l3 l4 level35 level5 level40 (1)
unload p1 t0 l4 (1)
drive t0 l4 l2 level19 level16 level35 (1)
unload p4 t0 l2 (1)
unload p3 t0 l2 (1)
[t=0.0467259s, 47368 KB] Plan length: 15 step(s).
[t=0.0467259s, 47368 KB] Plan cost: 15
[t=0.0467259s, 47368 KB] Expanded 16 state(s).
[t=0.0467259s, 47368 KB] Reopened 0 state(s).
[t=0.0467259s, 47368 KB] Evaluated 79 state(s).
[t=0.0467259s, 47368 KB] Evaluations: 79
[t=0.0467259s, 47368 KB] Generated 91 state(s).
[t=0.0467259s, 47368 KB] Dead ends: 18 state(s).
[t=0.0467259s, 47368 KB] Number of registered states: 79
[t=0.0467259s, 47368 KB] Int hash set load factor: 79/128 = 0.617188
[t=0.0467259s, 47368 KB] Int hash set resizes: 7
[t=0.0467259s, 47368 KB] Search time: 0s
[t=0.0467259s, 47368 KB] Total time: 0.0467259s
Solution found.
Peak memory: 47368 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 15 

Successful plans:
Value: 15
 sas_plan 15 

validate exit code: 0

INFO     Planner time: 0.30s
