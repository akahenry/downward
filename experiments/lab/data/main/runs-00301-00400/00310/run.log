INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.032s wall-clock]
3094 relevant atoms
3221 auxiliary atoms
6315 final queue length
10878 total queue pushes
Completing instantiation... [0.070s CPU, 0.067s wall-clock]
Instantiating: [0.110s CPU, 0.105s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
328 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.080s wall-clock]
3672 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.034s wall-clock]
Reordering and filtering variables...
331 of 331 variables necessary.
15 of 18 mutex groups necessary.
2194 of 2194 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.040s CPU, 0.035s wall-clock]
Translator variables: 331
Translator derived variables: 0
Translator facts: 691
Translator goal facts: 13
Translator mutex groups: 15
Translator total mutex groups size: 45
Translator operators: 2194
Translator axioms: 0
Translator task size: 21018
Translator peak memory: 44796 KB
Writing output... [0.020s CPU, 0.015s wall-clock]
Done! [0.290s CPU, 0.288s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0113703s, 11412 KB] done reading input!
[t=0.0113703s, 11808 KB] Generating patterns using: systematic pattern collection generator
[t=0.0113703s, 11808 KB] building causal graph...done! [t=0.00400527s]
[t=0.0153756s, 12600 KB] Found 112 SGA patterns.
[t=0.0153756s, 12600 KB] Found 112 interesting patterns.
[t=0.0153756s, 12600 KB] systematic pattern collection generator number of patterns: 112
[t=0.0153756s, 12600 KB] systematic pattern collection generator total PDB size: 1176
[t=0.0153756s, 12600 KB] systematic pattern collection generator computation time: 0.00400527s
[t=0.0153756s, 12600 KB] Computing PDBs for pattern collection...
[t=0.0553303s, 12600 KB] Done computing PDBs for pattern collection: 0.0399547s
[t=0.059336s, 12600 KB] Building successor generator...done!
[t=0.059336s, 12600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.059336s, 12600 KB] time for successor generation creation: 0s
[t=0.059336s, 12600 KB] Variables: 331
[t=0.059336s, 12600 KB] FactPairs: 691
[t=0.059336s, 12600 KB] Bytes per state: 44
[t=0.059336s, 12600 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.059336s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.059336s, 12600 KB] g=0, 1 evaluated, 0 expanded
[t=0.059336s, 12600 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.059336s, 12600 KB] pruning method: none
[t=0.059336s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.059336s, 12600 KB] g=11, 164 evaluated, 10 expanded
[t=0.0633212s, 12600 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.0633212s, 12600 KB] g=23, 322 evaluated, 31 expanded
[t=0.127276s, 13976 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.131281s, 13976 KB] g=51, 19544 evaluated, 7643 expanded
[t=0.131281s, 13976 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.131281s, 13976 KB] g=52, 19575 evaluated, 7644 expanded
[t=0.335096s, 18504 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.335096s, 18504 KB] g=82, 76384 evaluated, 28637 expanded
[t=0.335096s, 18504 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.335096s, 18504 KB] g=83, 76412 evaluated, 28638 expanded
[t=0.542931s, 23272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.542931s, 23272 KB] g=113, 135157 evaluated, 50171 expanded
[t=0.542931s, 23272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.542931s, 23272 KB] g=114, 135182 evaluated, 50172 expanded
[t=0.742707s, 27012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.742707s, 27012 KB] g=144, 192760 evaluated, 71165 expanded
[t=0.742707s, 27012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.742707s, 27012 KB] g=145, 192784 evaluated, 71166 expanded
[t=0.962484s, 33120 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=0.962484s, 33120 KB] g=175, 252361 evaluated, 92699 expanded
[t=0.962484s, 33120 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.962484s, 33120 KB] g=176, 252385 evaluated, 92700 expanded
[t=1.17025s, 36800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=1.17025s, 36800 KB] g=206, 310728 evaluated, 113693 expanded
[t=1.17025s, 36800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=1.17025s, 36800 KB] g=207, 310748 evaluated, 113694 expanded
[t=1.38607s, 40944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=1.38607s, 40944 KB] g=238, 374547 evaluated, 136710 expanded
[t=1.38607s, 40944 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=1.38607s, 40944 KB] g=239, 374567 evaluated, 136711 expanded
[t=1.5859s, 44960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=1.5859s, 44960 KB] g=269, 435318 evaluated, 158244 expanded
[t=1.5859s, 44960 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=1.5859s, 44960 KB] g=270, 435340 evaluated, 158245 expanded
[t=1.80172s, 54364 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=1.80172s, 54364 KB] g=300, 495715 evaluated, 179508 expanded
[t=1.80172s, 54364 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=1.80172s, 54364 KB] g=301, 495734 evaluated, 179509 expanded
[t=2.24532s, 61724 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=2.24532s, 61724 KB] g=332, 628777 evaluated, 227834 expanded
[t=2.24532s, 61724 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=2.24532s, 61724 KB] g=333, 628796 evaluated, 227835 expanded
[t=2.85282s, 73832 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=2.85282s, 73832 KB] g=363, 814420 evaluated, 295126 expanded
[t=2.85282s, 73832 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=2.85282s, 73832 KB] g=364, 814437 evaluated, 295127 expanded
[t=2.85282s, 73832 KB] Solution found!
[t=2.85282s, 73832 KB] Actual search time: 2.79348s
grasp left shot12 (1)
fill-shot shot12 ingredient2 left right dispenser2 (10)
grasp right shot13 (1)
leave left shot12 (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shot14 (1)
leave right shot13 (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail11 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail3 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot6 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail5 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot4 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail7 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail8 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot9 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail9 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot2 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
clean-shot shot14 ingredient1 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail4 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot3 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient3 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail10 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot7 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail1 ingredient4 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot11 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail1 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
clean-shot shot14 ingredient2 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient3 left right (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail2 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot10 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot14 (1)
leave right shaker1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot14 ingredient4 left right (1)
fill-shot shot14 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 (1)
leave left shot14 (1)
shake cocktail6 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot1 right shaker1 l2 l1 (1)
[t=2.85282s, 73832 KB] Plan length: 148 step(s).
[t=2.85282s, 73832 KB] Plan cost: 364
[t=2.85282s, 73832 KB] Expanded 295128 state(s).
[t=2.85282s, 73832 KB] Reopened 0 state(s).
[t=2.85282s, 73832 KB] Evaluated 814437 state(s).
[t=2.85282s, 73832 KB] Evaluations: 814437
[t=2.85282s, 73832 KB] Generated 1691342 state(s).
[t=2.85282s, 73832 KB] Dead ends: 0 state(s).
[t=2.85282s, 73832 KB] Number of registered states: 814437
[t=2.85282s, 73832 KB] Int hash set load factor: 814437/1048576 = 0.776708
[t=2.85282s, 73832 KB] Int hash set resizes: 20
[t=2.85282s, 73832 KB] Search time: 2.79348s
[t=2.85282s, 73832 KB] Total time: 2.85282s
Solution found.
Peak memory: 73832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 364 

Successful plans:
Value: 364
 sas_plan 364 

validate exit code: 0

INFO     Planner time: 3.20s
