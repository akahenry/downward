INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.035s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.080s CPU, 0.069s wall-clock]
Instantiating: [0.110s CPU, 0.111s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.100s CPU, 0.106s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.080s CPU, 0.075s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.036s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45696 KB
Writing output... [0.020s CPU, 0.022s wall-clock]
Done! [0.360s CPU, 0.368s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0110328s, 11556 KB] done reading input!
[t=0.0110328s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.0110328s, 11820 KB] building causal graph...done! [t=0.00400024s]
[t=0.015033s, 12752 KB] Found 116 SGA patterns.
[t=0.015033s, 12752 KB] Found 116 interesting patterns.
[t=0.015033s, 12752 KB] systematic pattern collection generator number of patterns: 116
[t=0.015033s, 12752 KB] systematic pattern collection generator total PDB size: 1304
[t=0.015033s, 12752 KB] systematic pattern collection generator computation time: 0.00400024s
[t=0.015033s, 12752 KB] Computing PDBs for pattern collection...
[t=0.0550044s, 12752 KB] Done computing PDBs for pattern collection: 0.0399714s
[t=0.0630104s, 12752 KB] Building successor generator...done!
[t=0.0630104s, 12752 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0630104s, 12752 KB] time for successor generation creation: 0s
[t=0.0630104s, 12752 KB] Variables: 353
[t=0.0630104s, 12752 KB] FactPairs: 737
[t=0.0630104s, 12752 KB] Bytes per state: 48
[t=0.0630104s, 12752 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0630104s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0630104s, 12752 KB] g=0, 1 evaluated, 0 expanded
[t=0.0630104s, 12752 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0630104s, 12752 KB] pruning method: none
[t=0.0630104s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0630104s, 12752 KB] g=2, 203 evaluated, 12 expanded
[t=0.0630104s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.0630104s, 12752 KB] g=4, 285 evaluated, 27 expanded
[t=0.078987s, 13024 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.078987s, 13024 KB] g=11, 4696 evaluated, 1458 expanded
[t=0.078987s, 13024 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.078987s, 13024 KB] g=12, 4714 evaluated, 1459 expanded
[t=0.190883s, 15572 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.190883s, 15572 KB] g=28, 35564 evaluated, 10171 expanded
[t=0.190883s, 15572 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.190883s, 15572 KB] g=29, 35591 evaluated, 10172 expanded
[t=0.374707s, 19684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.374707s, 19684 KB] g=45, 88480 evaluated, 24625 expanded
[t=0.374707s, 19684 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.374707s, 19684 KB] g=46, 88504 evaluated, 24626 expanded
[t=0.490584s, 23064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.490584s, 23064 KB] g=62, 120014 evaluated, 33660 expanded
[t=0.490584s, 23064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.490584s, 23064 KB] g=63, 120040 evaluated, 33661 expanded
[t=0.64645s, 26168 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.64645s, 26168 KB] g=79, 166281 evaluated, 47818 expanded
[t=0.64645s, 26168 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.64645s, 26168 KB] g=80, 166298 evaluated, 47819 expanded
[t=0.64645s, 26168 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=0.64645s, 26168 KB] g=81, 166324 evaluated, 47820 expanded
[t=0.874239s, 34388 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.874239s, 34388 KB] g=98, 227677 evaluated, 73050 expanded
[t=0.874239s, 34388 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=0.874239s, 34388 KB] g=99, 227698 evaluated, 73051 expanded
[t=0.874239s, 34388 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=0.874239s, 34388 KB] g=100, 227721 evaluated, 73052 expanded
[t=0.942177s, 34388 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=0.942177s, 34388 KB] g=116, 246785 evaluated, 79244 expanded
[t=0.942177s, 34388 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=0.942177s, 34388 KB] g=117, 246806 evaluated, 79245 expanded
[t=1.26188s, 40344 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=1.26188s, 40344 KB] g=133, 340810 evaluated, 105502 expanded
[t=1.26188s, 40344 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=1.26188s, 40344 KB] g=134, 340832 evaluated, 105503 expanded
[t=1.50159s, 45280 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=1.50159s, 45280 KB] g=150, 412395 evaluated, 125697 expanded
[t=1.50159s, 45280 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=1.50159s, 45280 KB] g=151, 412413 evaluated, 125698 expanded
[t=1.68151s, 55340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=1.68151s, 55340 KB] g=167, 463938 evaluated, 140473 expanded
[t=1.68151s, 55340 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=1.68151s, 55340 KB] g=168, 463955 evaluated, 140474 expanded
[t=1.79346s, 55508 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=1.79346s, 55508 KB] g=184, 499205 evaluated, 150685 expanded
[t=1.79346s, 55508 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=1.79346s, 55508 KB] g=185, 499223 evaluated, 150686 expanded
[t=1.79346s, 55508 KB] Solution found!
[t=1.79346s, 55508 KB] Actual search time: 1.73045s
grasp left shot13 (1)
fill-shot shot13 ingredient1 left right dispenser1 (1)
pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 (1)
refill-shot shot13 ingredient1 left right dispenser1 (1)
grasp right shot15 (1)
leave left shot13 (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail6 ingredient3 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot10 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail10 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot7 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail2 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot5 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail4 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot6 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail9 ingredient1 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot1 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail9 shot12 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail9 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail11 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail11 shot14 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail11 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail3 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot3 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail5 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot9 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail5 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail7 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot2 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail1 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 (1)
[t=1.79346s, 55508 KB] Plan length: 185 step(s).
[t=1.79346s, 55508 KB] Plan cost: 185
[t=1.79346s, 55508 KB] Expanded 150687 state(s).
[t=1.79346s, 55508 KB] Reopened 0 state(s).
[t=1.79346s, 55508 KB] Evaluated 499226 state(s).
[t=1.79346s, 55508 KB] Evaluations: 499226
[t=1.79346s, 55508 KB] Generated 1013915 state(s).
[t=1.79346s, 55508 KB] Dead ends: 0 state(s).
[t=1.79346s, 55508 KB] Number of registered states: 499226
[t=1.79346s, 55508 KB] Int hash set load factor: 499226/1048576 = 0.476099
[t=1.79346s, 55508 KB] Int hash set resizes: 20
[t=1.79346s, 55508 KB] Search time: 1.73045s
[t=1.79346s, 55508 KB] Total time: 1.79346s
Solution found.
Peak memory: 55508 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 185 

Successful plans:
Value: 185
 sas_plan 185 

validate exit code: 0

INFO     Planner time: 2.24s
