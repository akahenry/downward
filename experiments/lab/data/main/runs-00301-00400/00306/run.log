INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.034s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.060s CPU, 0.070s wall-clock]
Instantiating: [0.110s CPU, 0.109s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.000s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.083s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.053s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.024s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45716 KB
Writing output... [0.020s CPU, 0.017s wall-clock]
Done! [0.300s CPU, 0.307s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119545s, 11556 KB] done reading input!
[t=0.0159398s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.0159398s, 11820 KB] building causal graph...done! [t=0s]
[t=0.0159398s, 12752 KB] Found 116 SGA patterns.
[t=0.0199463s, 12752 KB] Found 116 interesting patterns.
[t=0.0199463s, 12752 KB] systematic pattern collection generator number of patterns: 116
[t=0.0199463s, 12752 KB] systematic pattern collection generator total PDB size: 1304
[t=0.0199463s, 12752 KB] systematic pattern collection generator computation time: 0.0040065s
[t=0.0199463s, 12752 KB] Computing PDBs for pattern collection...
[t=0.0599018s, 12752 KB] Done computing PDBs for pattern collection: 0.0399555s
[t=0.0639016s, 12752 KB] Building successor generator...done!
[t=0.0679064s, 12752 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0679064s, 12752 KB] time for successor generation creation: 0.00400474s
[t=0.0679064s, 12752 KB] Variables: 353
[t=0.0679064s, 12752 KB] FactPairs: 737
[t=0.0679064s, 12752 KB] Bytes per state: 48
[t=0.0679064s, 12752 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0679064s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0679064s, 12752 KB] g=0, 1 evaluated, 0 expanded
[t=0.0679064s, 12752 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0679064s, 12752 KB] pruning method: none
[t=0.0679064s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0679064s, 12752 KB] g=11, 233 evaluated, 14 expanded
[t=0.0679064s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.0679064s, 12752 KB] g=22, 312 evaluated, 29 expanded
[t=0.07589s, 12888 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.07589s, 12888 KB] g=38, 3121 evaluated, 850 expanded
[t=0.07589s, 12888 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.07589s, 12888 KB] g=39, 3148 evaluated, 851 expanded
[t=0.391658s, 20092 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.391658s, 20092 KB] g=73, 92992 evaluated, 24362 expanded
[t=0.391658s, 20092 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.391658s, 20092 KB] g=74, 93014 evaluated, 24363 expanded
[t=0.707395s, 27272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.707395s, 27272 KB] g=108, 182766 evaluated, 48196 expanded
[t=0.707395s, 27272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.707395s, 27272 KB] g=109, 182787 evaluated, 48197 expanded
[t=0.707395s, 27272 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.707395s, 27272 KB] g=110, 182818 evaluated, 48198 expanded
[t=0.79135s, 28996 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.79135s, 28996 KB] g=144, 206443 evaluated, 55824 expanded
[t=0.79135s, 28996 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.79135s, 28996 KB] g=145, 206462 evaluated, 55825 expanded
[t=0.79135s, 28996 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.79135s, 28996 KB] g=146, 206487 evaluated, 55826 expanded
[t=1.50279s, 44868 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=1.50279s, 44868 KB] g=181, 407148 evaluated, 129144 expanded
[t=1.50279s, 44868 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=1.50279s, 44868 KB] g=182, 407166 evaluated, 129145 expanded
[t=1.81058s, 54972 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=1.81058s, 54972 KB] g=216, 493285 evaluated, 153300 expanded
[t=1.81058s, 54972 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=1.81058s, 54972 KB] g=217, 493307 evaluated, 153301 expanded
[t=2.59407s, 71392 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=2.59407s, 71392 KB] g=251, 728164 evaluated, 217228 expanded
[t=2.59407s, 71392 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=2.59407s, 71392 KB] g=252, 728187 evaluated, 217229 expanded
[t=3.20563s, 92848 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=3.20563s, 92848 KB] g=286, 902734 evaluated, 267198 expanded
[t=3.20563s, 92848 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=3.20563s, 92848 KB] g=287, 902756 evaluated, 267199 expanded
[t=3.52941s, 98512 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=3.52941s, 98512 KB] g=321, 1000994 evaluated, 296799 expanded
[t=3.52941s, 98512 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=3.52941s, 98512 KB] g=322, 1001015 evaluated, 296800 expanded
[t=4.14099s, 111424 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=4.14099s, 111424 KB] g=356, 1186206 evaluated, 352244 expanded
[t=4.14099s, 111424 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=4.14099s, 111424 KB] g=357, 1186223 evaluated, 352245 expanded
[t=6.40307s, 177848 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=6.40307s, 177848 KB] g=405, 1846123 evaluated, 590918 expanded
[t=6.40307s, 177848 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=6.40307s, 177848 KB] g=407, 1846143 evaluated, 590920 expanded
[t=6.40307s, 177848 KB] Solution found!
[t=6.40307s, 177848 KB] Actual search time: 6.33516s
grasp left shot14 (1)
fill-shot shot14 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 (1)
refill-shot shot14 ingredient4 left right dispenser4 (10)
grasp right shot15 (1)
leave left shot14 (1)
fill-shot shot15 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail10 ingredient4 ingredient1 shaker1 left right (1)
pour-shaker-to-shot cocktail10 shot7 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail10 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail6 ingredient1 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail6 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail4 ingredient2 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot12 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail4 shot6 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail4 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient1 right left dispenser1 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail7 ingredient1 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot11 left shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot13 left shaker1 l1 l0 (1)
grasp right shot15 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient1 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail7 l0 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail9 ingredient3 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail9 shot10 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail9 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail11 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail11 shot5 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail11 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail2 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail2 shot8 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail2 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail3 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot3 left shaker1 l2 l1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient3 right left dispenser3 (10)
grasp left shaker1 (1)
leave right shot15 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (10)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail5 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 (1)
leave left shaker1 (1)
grasp left shot9 (1)
fill-shot shot9 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot9 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (10)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail1 ingredient2 ingredient4 shaker1 right left (1)
grasp left shot9 (1)
empty-shot left shot9 ingredient1 (1)
leave right shaker1 (1)
clean-shot shot9 ingredient1 left right (1)
grasp right shaker1 (1)
pour-shaker-to-shot cocktail1 shot9 right shaker1 l2 l1 (1)
[t=6.40307s, 177848 KB] Plan length: 191 step(s).
[t=6.40307s, 177848 KB] Plan cost: 407
[t=6.40307s, 177848 KB] Expanded 590921 state(s).
[t=6.40307s, 177848 KB] Reopened 0 state(s).
[t=6.40307s, 177848 KB] Evaluated 1846143 state(s).
[t=6.40307s, 177848 KB] Evaluations: 1846143
[t=6.40307s, 177848 KB] Generated 3799741 state(s).
[t=6.40307s, 177848 KB] Dead ends: 0 state(s).
[t=6.40307s, 177848 KB] Number of registered states: 1846143
[t=6.40307s, 177848 KB] Int hash set load factor: 1846143/4194304 = 0.440155
[t=6.40307s, 177848 KB] Int hash set resizes: 22
[t=6.40307s, 177848 KB] Search time: 6.33516s
[t=6.40307s, 177848 KB] Total time: 6.40307s
Solution found.
Peak memory: 177848 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 407 

Successful plans:
Value: 407
 sas_plan 407 

validate exit code: 0

INFO     Planner time: 6.79s
