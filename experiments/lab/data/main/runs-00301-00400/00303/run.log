INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.050s CPU, 0.041s wall-clock]
3955 relevant atoms
3949 auxiliary atoms
7904 final queue length
13920 total queue pushes
Completing instantiation... [0.080s CPU, 0.079s wall-clock]
Instantiating: [0.130s CPU, 0.126s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.009s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
405 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.120s CPU, 0.115s wall-clock]
4712 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.048s wall-clock]
Reordering and filtering variables...
408 of 408 variables necessary.
17 of 20 mutex groups necessary.
2814 of 2814 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.031s wall-clock]
Translator variables: 408
Translator derived variables: 0
Translator facts: 849
Translator goal facts: 15
Translator mutex groups: 17
Translator total mutex groups size: 51
Translator operators: 2814
Translator axioms: 0
Translator task size: 26997
Translator peak memory: 48392 KB
Writing output... [0.020s CPU, 0.025s wall-clock]
Done! [0.370s CPU, 0.368s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0159881s, 11736 KB] done reading input!
[t=0.0159881s, 12000 KB] Generating patterns using: systematic pattern collection generator
[t=0.0159881s, 12000 KB] building causal graph...done! [t=0.00398852s]
[t=0.0199766s, 13080 KB] Found 120 SGA patterns.
[t=0.0239764s, 13080 KB] Found 120 interesting patterns.
[t=0.0239764s, 13080 KB] systematic pattern collection generator number of patterns: 120
[t=0.0239764s, 13080 KB] systematic pattern collection generator total PDB size: 1440
[t=0.0239764s, 13080 KB] systematic pattern collection generator computation time: 0.00798831s
[t=0.0239764s, 13080 KB] Computing PDBs for pattern collection...
[t=0.0839147s, 13080 KB] Done computing PDBs for pattern collection: 0.0599383s
[t=0.0919057s, 13080 KB] Building successor generator...done!
[t=0.0919057s, 13080 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0919057s, 13080 KB] time for successor generation creation: 0s
[t=0.0919057s, 13080 KB] Variables: 408
[t=0.0919057s, 13080 KB] FactPairs: 849
[t=0.0919057s, 13080 KB] Bytes per state: 56
[t=0.0919057s, 13080 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0919057s, 13080 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=0.0919057s, 13080 KB] g=0, 1 evaluated, 0 expanded
[t=0.0919057s, 13080 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=0.0919057s, 13080 KB] pruning method: none
[t=0.0958896s, 13080 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0958896s, 13080 KB] g=3, 483 evaluated, 241 expanded
[t=0.115869s, 13488 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.115869s, 13488 KB] g=9, 5089 evaluated, 1716 expanded
[t=0.115869s, 13488 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.115869s, 13488 KB] g=10, 5116 evaluated, 1717 expanded
[t=0.287682s, 17108 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.287682s, 17108 KB] g=26, 47505 evaluated, 13359 expanded
[t=0.287682s, 17108 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.287682s, 17108 KB] g=27, 47535 evaluated, 13360 expanded
[t=0.667335s, 25552 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.667335s, 25552 KB] g=44, 138234 evaluated, 50471 expanded
[t=0.667335s, 25552 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.667335s, 25552 KB] g=45, 138260 evaluated, 50472 expanded
[t=1.00301s, 32188 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=1.00301s, 32188 KB] g=62, 222314 evaluated, 75110 expanded
[t=1.00301s, 32188 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=1.00301s, 32188 KB] g=62, 222315 evaluated, 75110 expanded
[t=1.00301s, 32188 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=1.00301s, 32188 KB] g=63, 222341 evaluated, 75111 expanded
[t=3.81997s, 101880 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=3.81997s, 101880 KB] g=79, 911405 evaluated, 294795 expanded
[t=3.81997s, 101880 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=3.81997s, 101880 KB] g=80, 911431 evaluated, 294796 expanded
[t=4.02375s, 103656 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=4.02375s, 103656 KB] g=97, 962717 evaluated, 312322 expanded
[t=4.02375s, 103656 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=4.02375s, 103656 KB] g=98, 962741 evaluated, 312323 expanded
[t=6.30545s, 148456 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=6.30545s, 148456 KB] g=115, 1541795 evaluated, 507419 expanded
[t=6.30545s, 148456 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=6.30545s, 148456 KB] g=116, 1541822 evaluated, 507420 expanded
[t=6.60908s, 154168 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=6.60908s, 154168 KB] g=133, 1616529 evaluated, 532948 expanded
[t=6.70099s, 156028 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=6.70099s, 156028 KB] g=133, 1640249 evaluated, 541272 expanded
[t=6.70099s, 156028 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=6.70099s, 156028 KB] g=134, 1640275 evaluated, 541273 expanded
[t=9.86179s, 232164 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=9.86179s, 232164 KB] g=150, 2414053 evaluated, 811188 expanded
[t=9.86179s, 232164 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=9.86179s, 232164 KB] g=151, 2414075 evaluated, 811189 expanded
[t=11.4922s, 264396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=11.4922s, 264396 KB] g=167, 2831013 evaluated, 956480 expanded
[t=11.4922s, 264396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=11.4922s, 264396 KB] g=168, 2831035 evaluated, 956481 expanded
[t=13.0708s, 294916 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=13.0708s, 294916 KB] g=185, 3227772 evaluated, 1100445 expanded
[t=13.0708s, 294916 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=13.0708s, 294916 KB] g=186, 3227791 evaluated, 1100446 expanded
[t=13.0708s, 294916 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=13.0708s, 294916 KB] g=187, 3227810 evaluated, 1100447 expanded
[t=13.0708s, 294916 KB] Solution found!
[t=13.0708s, 294916 KB] Actual search time: 12.9789s
grasp left shot16 (1)
fill-shot shot16 ingredient1 left right dispenser1 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot16 ingredient1 left right (1)
fill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail8 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot3 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient2 left right (1)
fill-shot shot16 ingredient3 left right dispenser3 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient3 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail11 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot7 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient3 left right (1)
fill-shot shot16 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient1 left right (1)
fill-shot shot16 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail1 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot15 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
leave left shot16 (1)
pour-shaker-to-shot cocktail1 shot4 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail1 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient4 left right (1)
fill-shot shot16 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail9 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient1 left right (1)
fill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail6 ingredient5 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot10 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
leave left shot16 (1)
pour-shaker-to-shot cocktail6 shot12 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail6 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient5 left right (1)
fill-shot shot16 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient1 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail5 ingredient5 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot2 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient1 left right (1)
fill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient2 left right (1)
fill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail4 ingredient5 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot13 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
leave left shot16 (1)
pour-shaker-to-shot cocktail4 shot9 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail4 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient5 left right (1)
fill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail10 ingredient2 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot8 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient2 left right (1)
fill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail2 ingredient5 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot11 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
refill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient5 left right (1)
fill-shot shot16 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail3 ingredient2 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot6 right shaker1 l2 l1 (1)
grasp left shot16 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient2 left right (1)
fill-shot shot16 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
leave left shot16 (1)
empty-shaker right shaker1 cocktail3 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot16 (1)
pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot16 ingredient4 left right (1)
fill-shot shot16 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 (1)
leave left shot16 (1)
shake cocktail7 ingredient4 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot1 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail7 shot14 right shaker1 l1 l0 (1)
[t=13.0708s, 294916 KB] Plan length: 187 step(s).
[t=13.0708s, 294916 KB] Plan cost: 187
[t=13.0708s, 294916 KB] Expanded 1100448 state(s).
[t=13.0708s, 294916 KB] Reopened 0 state(s).
[t=13.0708s, 294916 KB] Evaluated 3227811 state(s).
[t=13.0708s, 294916 KB] Evaluations: 3227811
[t=13.0708s, 294916 KB] Generated 6554304 state(s).
[t=13.0708s, 294916 KB] Dead ends: 0 state(s).
[t=13.0708s, 294916 KB] Number of registered states: 3227811
[t=13.0708s, 294916 KB] Int hash set load factor: 3227811/4194304 = 0.76957
[t=13.0708s, 294916 KB] Int hash set resizes: 22
[t=13.0708s, 294916 KB] Search time: 12.9789s
[t=13.0708s, 294916 KB] Total time: 13.0708s
Solution found.
Peak memory: 294916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 187 

Successful plans:
Value: 187
 sas_plan 187 

validate exit code: 0

INFO     Planner time: 13.52s
