INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.050s CPU, 0.042s wall-clock]
3725 relevant atoms
3726 auxiliary atoms
7451 final queue length
13104 total queue pushes
Completing instantiation... [0.080s CPU, 0.084s wall-clock]
Instantiating: [0.130s CPU, 0.134s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
381 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.100s CPU, 0.099s wall-clock]
4430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.070s CPU, 0.074s wall-clock]
Reordering and filtering variables...
384 of 384 variables necessary.
16 of 19 mutex groups necessary.
2644 of 2644 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.029s wall-clock]
Translator variables: 384
Translator derived variables: 0
Translator facts: 799
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2644
Translator axioms: 0
Translator task size: 25367
Translator peak memory: 47112 KB
Writing output... [0.020s CPU, 0.019s wall-clock]
Done! [0.380s CPU, 0.379s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119842s, 11584 KB] done reading input!
[t=0.0119842s, 11980 KB] Generating patterns using: systematic pattern collection generator
[t=0.0119842s, 11980 KB] building causal graph...done! [t=0.00400026s]
[t=0.0159845s, 13040 KB] Found 112 SGA patterns.
[t=0.0159845s, 13040 KB] Found 112 interesting patterns.
[t=0.0159845s, 13040 KB] systematic pattern collection generator number of patterns: 112
[t=0.0159845s, 13040 KB] systematic pattern collection generator total PDB size: 1288
[t=0.0159845s, 13040 KB] systematic pattern collection generator computation time: 0.00400026s
[t=0.0159845s, 13040 KB] Computing PDBs for pattern collection...
[t=0.0639322s, 13040 KB] Done computing PDBs for pattern collection: 0.0479477s
[t=0.0679377s, 13040 KB] Building successor generator...done!
[t=0.0719209s, 13040 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0719209s, 13040 KB] time for successor generation creation: 0.0039832s
[t=0.0719209s, 13040 KB] Variables: 384
[t=0.0719209s, 13040 KB] FactPairs: 799
[t=0.0719209s, 13040 KB] Bytes per state: 52
[t=0.0719209s, 13040 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0719209s, 13040 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0719209s, 13040 KB] g=0, 1 evaluated, 0 expanded
[t=0.0719209s, 13040 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0719209s, 13040 KB] pruning method: none
[t=0.167807s, 14836 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.167807s, 14836 KB] g=9, 25991 evaluated, 10439 expanded
[t=0.167807s, 14836 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.167807s, 14836 KB] g=10, 26017 evaluated, 10440 expanded
[t=0.335633s, 18800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.335633s, 18800 KB] g=22, 69447 evaluated, 27980 expanded
[t=0.335633s, 18800 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.335633s, 18800 KB] g=23, 69473 evaluated, 27981 expanded
[t=0.511381s, 21984 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.511381s, 21984 KB] g=35, 113634 evaluated, 45521 expanded
[t=0.511381s, 21984 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=0.511381s, 21984 KB] g=36, 113653 evaluated, 45522 expanded
[t=0.511381s, 21984 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.511381s, 21984 KB] g=37, 113682 evaluated, 45523 expanded
[t=0.671136s, 26064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.671136s, 26064 KB] g=49, 154638 evaluated, 62245 expanded
[t=0.671136s, 26064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.671136s, 26064 KB] g=50, 154661 evaluated, 62246 expanded
[t=0.83492s, 29380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.83492s, 29380 KB] g=62, 200138 evaluated, 79481 expanded
[t=0.83492s, 29380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.83492s, 29380 KB] g=63, 200161 evaluated, 79482 expanded
[t=1.02666s, 35468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=1.02666s, 35468 KB] g=75, 248148 evaluated, 97327 expanded
[t=1.02666s, 35468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=1.02666s, 35468 KB] g=76, 248171 evaluated, 97328 expanded
[t=1.02666s, 35468 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=1.02666s, 35468 KB] g=77, 248195 evaluated, 97329 expanded
[t=1.18242s, 38068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=1.18242s, 38068 KB] g=89, 290408 evaluated, 113136 expanded
[t=1.18242s, 38068 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=1.18242s, 38068 KB] g=90, 290430 evaluated, 113137 expanded
[t=1.36622s, 41652 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=1.36622s, 41652 KB] g=102, 340659 evaluated, 130982 expanded
[t=1.36622s, 41652 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=1.36622s, 41652 KB] g=103, 340678 evaluated, 130983 expanded
[t=1.546s, 45380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=1.546s, 45380 KB] g=115, 391657 evaluated, 148828 expanded
[t=1.546s, 45380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=1.546s, 45380 KB] g=116, 391677 evaluated, 148829 expanded
[t=1.72976s, 49232 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=1.72976s, 49232 KB] g=128, 444366 evaluated, 166979 expanded
[t=1.72976s, 49232 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=1.72976s, 49232 KB] g=129, 444385 evaluated, 166980 expanded
[t=1.97345s, 57980 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=1.97345s, 57980 KB] g=142, 507794 evaluated, 188793 expanded
[t=2.08532s, 60380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=2.08532s, 60380 KB] g=142, 539410 evaluated, 200355 expanded
[t=2.08532s, 60380 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=2.08532s, 60380 KB] g=143, 539428 evaluated, 200356 expanded
[t=2.08532s, 60380 KB] Solution found!
[t=2.08532s, 60380 KB] Actual search time: 2.0134s
grasp left shot15 (1)
fill-shot shot15 ingredient1 left right dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail7 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot4 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail11 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot3 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail8 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot10 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail8 shot12 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail8 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail9 ingredient5 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient5 left right dispenser5 (1)
pour-shot-to-clean-shaker shot15 ingredient5 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient5 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail5 ingredient5 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot6 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail10 ingredient1 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot14 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail10 shot2 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail10 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail4 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot7 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail6 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot11 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail2 ingredient4 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot8 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient5 left right dispenser5 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail1 ingredient3 ingredient5 shaker1 right left (1)
pour-shaker-to-shot cocktail1 shot13 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail1 shot9 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail1 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient5 left right dispenser5 (1)
pour-shot-to-clean-shaker shot15 ingredient5 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient5 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail3 ingredient5 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot1 right shaker1 l2 l1 (1)
[t=2.08532s, 60380 KB] Plan length: 143 step(s).
[t=2.08532s, 60380 KB] Plan cost: 143
[t=2.08532s, 60380 KB] Expanded 200357 state(s).
[t=2.08532s, 60380 KB] Reopened 0 state(s).
[t=2.08532s, 60380 KB] Evaluated 539428 state(s).
[t=2.08532s, 60380 KB] Evaluations: 539428
[t=2.08532s, 60380 KB] Generated 1162192 state(s).
[t=2.08532s, 60380 KB] Dead ends: 0 state(s).
[t=2.08532s, 60380 KB] Number of registered states: 539428
[t=2.08532s, 60380 KB] Int hash set load factor: 539428/1048576 = 0.514439
[t=2.08532s, 60380 KB] Int hash set resizes: 20
[t=2.08532s, 60380 KB] Search time: 2.0134s
[t=2.08532s, 60380 KB] Total time: 2.08532s
Solution found.
Peak memory: 60380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 143 

Successful plans:
Value: 143
 sas_plan 143 

validate exit code: 0

INFO     Planner time: 2.54s
