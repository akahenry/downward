INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.190s CPU, 0.184s wall-clock]
29701 relevant atoms
8838 auxiliary atoms
38539 final queue length
99451 total queue pushes
Completing instantiation... [0.850s CPU, 0.849s wall-clock]
Instantiating: [1.040s CPU, 1.041s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.030s wall-clock]
Translating task: [0.620s CPU, 0.620s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.380s CPU, 0.381s wall-clock]
Reordering and filtering variables...
36 of 36 variables necessary.
18 of 36 mutex groups necessary.
27540 of 27540 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.070s CPU, 0.071s wall-clock]
Translator variables: 36
Translator derived variables: 0
Translator facts: 360
Translator goal facts: 36
Translator mutex groups: 18
Translator total mutex groups size: 324
Translator operators: 27540
Translator axioms: 0
Translator task size: 141210
Translator peak memory: 135408 KB
Writing output... [0.100s CPU, 0.100s wall-clock]
Done! [2.270s CPU, 2.274s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0759567s, 18672 KB] done reading input!
[t=0.0759567s, 18936 KB] Generating patterns using: systematic pattern collection generator
[t=0.0759567s, 18936 KB] building causal graph...done! [t=0.00799831s]
[t=0.083955s, 19076 KB] Found 513 SGA patterns.
[t=0.083955s, 19076 KB] Found 513 interesting patterns.
[t=0.083955s, 19076 KB] systematic pattern collection generator number of patterns: 513
[t=0.083955s, 19076 KB] systematic pattern collection generator total PDB size: 61596
[t=0.083955s, 19076 KB] systematic pattern collection generator computation time: 0.00799831s
[t=0.083955s, 19076 KB] Computing PDBs for pattern collection...
[t=1.90701s, 20040 KB] Done computing PDBs for pattern collection: 1.82306s
[t=2.14689s, 45836 KB] Building successor generator...done!
[t=2.1509s, 48152 KB] peak memory difference for successor generator creation: 2316 KB
[t=2.1509s, 48152 KB] time for successor generation creation: 0.00400383s
[t=2.1509s, 48152 KB] Variables: 36
[t=2.1509s, 48152 KB] FactPairs: 360
[t=2.1509s, 48152 KB] Bytes per state: 16
[t=2.1509s, 48152 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=2.1509s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 49
[t=2.1509s, 48152 KB] g=0, 1 evaluated, 0 expanded
[t=2.1509s, 48152 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 49
[t=2.1509s, 48152 KB] pruning method: none
[t=2.1509s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 48
[t=2.1509s, 48152 KB] g=1, 4 evaluated, 1 expanded
[t=2.1509s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 47
[t=2.1509s, 48152 KB] g=3, 32 evaluated, 1 expanded
[t=2.15488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 46
[t=2.15488s, 48152 KB] g=6, 122 evaluated, 2 expanded
[t=2.15488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 45
[t=2.15488s, 48152 KB] g=6, 132 evaluated, 2 expanded
[t=2.15488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 44
[t=2.15488s, 48152 KB] g=7, 184 evaluated, 3 expanded
[t=2.15488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 43
[t=2.15888s, 48152 KB] g=8, 281 evaluated, 4 expanded
[t=2.15888s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 42
[t=2.15888s, 48152 KB] g=11, 430 evaluated, 5 expanded
[t=2.15888s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 41
[t=2.15888s, 48152 KB] g=14, 478 evaluated, 6 expanded
[t=2.15888s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 40
[t=2.15888s, 48152 KB] g=14, 525 evaluated, 6 expanded
[t=2.16288s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 39
[t=2.16288s, 48152 KB] g=17, 566 evaluated, 7 expanded
[t=2.16288s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 38
[t=2.16288s, 48152 KB] g=20, 653 evaluated, 8 expanded
[t=2.16288s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 37
[t=2.16288s, 48152 KB] g=23, 739 evaluated, 9 expanded
[t=2.16688s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 36
[t=2.16688s, 48152 KB] g=24, 824 evaluated, 10 expanded
[t=2.16688s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 35
[t=2.16688s, 48152 KB] g=27, 908 evaluated, 11 expanded
[t=2.16688s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 34
[t=2.16688s, 48152 KB] g=28, 993 evaluated, 12 expanded
[t=2.17088s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 33
[t=2.17088s, 48152 KB] g=31, 1075 evaluated, 13 expanded
[t=2.17088s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 32
[t=2.17088s, 48152 KB] g=32, 1160 evaluated, 14 expanded
[t=2.17088s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 31
[t=2.17088s, 48152 KB] g=35, 1240 evaluated, 15 expanded
[t=2.17488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 30
[t=2.17488s, 48152 KB] g=36, 1325 evaluated, 16 expanded
[t=2.17488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 29
[t=2.17488s, 48152 KB] g=35, 1403 evaluated, 17 expanded
[t=2.17488s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 28
[t=2.17488s, 48152 KB] g=36, 1489 evaluated, 18 expanded
[t=2.17887s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=2.17887s, 48152 KB] g=41, 1678 evaluated, 20 expanded
[t=2.17887s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=2.17887s, 48152 KB] g=40, 1734 evaluated, 21 expanded
[t=2.18287s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=2.18287s, 48152 KB] g=41, 1851 evaluated, 22 expanded
[t=2.18287s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=2.18287s, 48152 KB] g=42, 1928 evaluated, 23 expanded
[t=2.19487s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=2.19487s, 48152 KB] g=44, 2733 evaluated, 34 expanded
[t=2.19487s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=2.19487s, 48152 KB] g=44, 2746 evaluated, 34 expanded
[t=2.2228s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=2.2228s, 48152 KB] g=50, 4781 evaluated, 60 expanded
[t=2.2228s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=2.2228s, 48152 KB] g=50, 4810 evaluated, 60 expanded
[t=2.2228s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=2.2228s, 48152 KB] g=49, 4892 evaluated, 61 expanded
[t=2.2228s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=2.2228s, 48152 KB] g=52, 4973 evaluated, 62 expanded
[t=2.22679s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=2.22679s, 48152 KB] g=55, 5057 evaluated, 63 expanded
[t=2.22679s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=2.22679s, 48152 KB] g=54, 5139 evaluated, 64 expanded
[t=2.23479s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=2.23479s, 48152 KB] g=56, 5631 evaluated, 71 expanded
[t=2.23479s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=2.23479s, 48152 KB] g=56, 5646 evaluated, 71 expanded
[t=2.23879s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=2.23879s, 48152 KB] g=62, 5901 evaluated, 74 expanded
[t=2.23879s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=2.23879s, 48152 KB] g=62, 5951 evaluated, 74 expanded
[t=2.23879s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=2.23879s, 48152 KB] g=61, 6031 evaluated, 75 expanded
[t=2.23879s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=2.23879s, 48152 KB] g=64, 6112 evaluated, 76 expanded
[t=2.23879s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=2.24279s, 48152 KB] g=67, 6198 evaluated, 77 expanded
[t=2.24279s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=2.24279s, 48152 KB] g=67, 6287 evaluated, 79 expanded
[t=2.24279s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=2.24279s, 48152 KB] g=68, 6375 evaluated, 80 expanded
[t=2.24678s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=2.24678s, 48152 KB] g=72, 6607 evaluated, 82 expanded
[t=2.24678s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=2.24678s, 48152 KB] g=75, 6632 evaluated, 83 expanded
[t=2.24678s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=2.24678s, 48152 KB] g=76, 6707 evaluated, 84 expanded
[t=2.25078s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=2.25078s, 48152 KB] g=82, 6864 evaluated, 86 expanded
[t=2.25078s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=2.25078s, 48152 KB] g=82, 6872 evaluated, 86 expanded
[t=2.25078s, 48152 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=2.25078s, 48152 KB] g=86, 7050 evaluated, 88 expanded
[t=2.25078s, 48152 KB] Solution found!
[t=2.25078s, 48152 KB] Actual search time: 0.0998858s
analyze-2 seg-in-4 seg-out-1 car-in-4 car-out-1 (3)
analyze-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
rotate-2 seg-in-2 seg-out-3 car-in-2 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-out-3 car-out-2 (3)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-out-3 (3)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-5 (3)
rotate-2 seg-in-6 seg-out-1 car-in-5 car-in-6 (1)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-5 (3)
rotate-2 seg-in-7 seg-out-1 car-in-5 car-in-7 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-5 (3)
rotate-2 seg-in-8 seg-out-1 car-in-5 car-in-8 (1)
analyze-2 seg-in-9 seg-out-1 car-in-9 car-in-5 (3)
rotate-2 seg-in-9 seg-out-1 car-in-5 car-in-9 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-5 (1)
rotate-2 seg-in-1 seg-out-4 car-in-5 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-4 (1)
rotate-2 seg-in-5 seg-out-4 car-out-3 car-in-5 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-out-3 (1)
rotate-2 seg-in-2 seg-out-5 car-out-2 car-out-5 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-2 (1)
rotate-2 seg-in-1 seg-out-6 car-in-2 car-out-6 (1)
analyze-2 seg-in-2 seg-out-1 car-out-5 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-out-5 (1)
rotate-2 seg-in-2 seg-out-5 car-out-5 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-6 (1)
rotate-2 seg-in-2 seg-out-7 car-out-2 car-out-7 (1)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-in-2 (1)
rotate-2 seg-in-1 seg-out-8 car-in-2 car-out-8 (1)
analyze-2 seg-in-2 seg-out-1 car-out-7 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-out-7 (1)
rotate-2 seg-in-2 seg-out-7 car-out-7 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-8 (1)
rotate-2 seg-in-2 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-2 seg-out-8 car-in-1 car-in-2 (1)
rotate-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (1)
rotate-2 seg-in-1 seg-out-9 car-in-1 car-out-9 (1)
analyze-2 seg-in-1 seg-out-1 car-out-9 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-9 (3)
rotate-2 seg-in-2 seg-out-9 car-out-9 car-in-1 (1)
analyze-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
[t=2.25078s, 48152 KB] Plan length: 48 step(s).
[t=2.25078s, 48152 KB] Plan cost: 84
[t=2.25078s, 48152 KB] Expanded 89 state(s).
[t=2.25078s, 48152 KB] Reopened 0 state(s).
[t=2.25078s, 48152 KB] Evaluated 7106 state(s).
[t=2.25078s, 48152 KB] Evaluations: 7106
[t=2.25078s, 48152 KB] Generated 7920 state(s).
[t=2.25078s, 48152 KB] Dead ends: 0 state(s).
[t=2.25078s, 48152 KB] Number of registered states: 7106
[t=2.25078s, 48152 KB] Int hash set load factor: 7106/8192 = 0.867432
[t=2.25078s, 48152 KB] Int hash set resizes: 13
[t=2.25078s, 48152 KB] Search time: 0.0998858s
[t=2.25078s, 48152 KB] Total time: 2.25078s
Solution found.
Peak memory: 48152 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 84 

Successful plans:
Value: 84
 sas_plan 84 

validate exit code: 0

INFO     Planner time: 4.60s
