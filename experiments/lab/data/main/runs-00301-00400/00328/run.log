INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.940s CPU, 0.937s wall-clock]
151565 relevant atoms
10122 auxiliary atoms
161687 final queue length
490508 total queue pushes
Completing instantiation... [5.420s CPU, 5.426s wall-clock]
Instantiating: [6.390s CPU, 6.398s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.011s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.007s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.002s wall-clock]
Choosing groups...
101 uncovered facts
Choosing groups: [0.010s CPU, 0.008s wall-clock]
Building translation key... [0.000s CPU, 0.003s wall-clock]
Computing fact groups: [0.040s CPU, 0.040s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.003s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.003s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.230s CPU, 0.235s wall-clock]
Translating task: [5.560s CPU, 5.563s wall-clock]
177600 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [4.000s CPU, 4.001s wall-clock]
Reordering and filtering variables...
141 of 141 variables necessary.
61 of 101 mutex groups necessary.
144000 of 144000 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.790s CPU, 0.794s wall-clock]
Translator variables: 141
Translator derived variables: 0
Translator facts: 2642
Translator goal facts: 40
Translator mutex groups: 61
Translator total mutex groups size: 2501
Translator operators: 144000
Translator axioms: 0
Translator task size: 1171724
Translator peak memory: 718356 KB
Writing output... [0.830s CPU, 0.838s wall-clock]
Done! [17.880s CPU, 17.903s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1781s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.566056s, 64968 KB] done reading input!
[t=0.570063s, 65232 KB] Generating patterns using: systematic pattern collection generator
[t=0.570063s, 65232 KB] building causal graph...done! [t=0.0838815s]
[t=0.657944s, 69060 KB] Found 4080 SGA patterns.
[t=0.677935s, 69060 KB] Found 4080 interesting patterns.
[t=0.677935s, 69060 KB] systematic pattern collection generator number of patterns: 4080
[t=0.677935s, 69060 KB] systematic pattern collection generator total PDB size: 495320
[t=0.677935s, 69060 KB] systematic pattern collection generator computation time: 0.107872s
[t=0.677935s, 69060 KB] Computing PDBs for pattern collection...
[t=91.4413s, 70340 KB] Done computing PDBs for pattern collection: 90.7633s
[t=107.153s, 382932 KB] Building successor generator...done!
[t=107.205s, 395224 KB] peak memory difference for successor generator creation: 12292 KB
[t=107.205s, 395224 KB] time for successor generation creation: 0.0479543s
[t=107.209s, 395224 KB] Variables: 141
[t=107.209s, 395224 KB] FactPairs: 2642
[t=107.209s, 395224 KB] Bytes per state: 44
[t=107.209s, 395224 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=107.209s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 85
[t=107.209s, 395224 KB] g=0, 1 evaluated, 0 expanded
[t=107.209s, 395224 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 85
[t=107.209s, 395224 KB] pruning method: none
[t=107.213s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 83
[t=107.213s, 395224 KB] g=2, 58 evaluated, 2 expanded
[t=107.217s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 81
[t=107.217s, 395224 KB] g=3, 98 evaluated, 3 expanded
[t=107.229s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 79
[t=107.229s, 395224 KB] g=5, 213 evaluated, 6 expanded
[t=107.253s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 78
[t=107.253s, 395224 KB] g=7, 497 evaluated, 13 expanded
[t=107.253s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 77
[t=107.253s, 395224 KB] g=8, 522 evaluated, 14 expanded
[t=107.301s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 75
[t=107.301s, 395224 KB] g=9, 1012 evaluated, 26 expanded
[t=107.345s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 74
[t=107.345s, 395224 KB] g=11, 1472 evaluated, 38 expanded
[t=107.345s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 72
[t=107.345s, 395224 KB] g=11, 1477 evaluated, 38 expanded
[t=107.377s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 70
[t=107.377s, 395224 KB] g=13, 1830 evaluated, 47 expanded
[t=107.381s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 69
[t=107.381s, 395224 KB] g=14, 1852 evaluated, 48 expanded
[t=107.381s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 68
[t=107.381s, 395224 KB] g=15, 1871 evaluated, 49 expanded
[t=107.421s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 66
[t=107.421s, 395224 KB] g=16, 2286 evaluated, 59 expanded
[t=107.449s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 64
[t=107.449s, 395224 KB] g=18, 2596 evaluated, 67 expanded
[t=107.449s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 63
[t=107.449s, 395224 KB] g=19, 2625 evaluated, 68 expanded
[t=107.449s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 61
[t=107.449s, 395224 KB] g=19, 2627 evaluated, 68 expanded
[t=107.453s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 60
[t=107.453s, 395224 KB] g=20, 2653 evaluated, 69 expanded
[t=107.457s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 59
[t=107.457s, 395224 KB] g=21, 2685 evaluated, 70 expanded
[t=107.485s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 58
[t=107.485s, 395224 KB] g=22, 3005 evaluated, 78 expanded
[t=107.485s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 56
[t=107.485s, 395224 KB] g=22, 3006 evaluated, 78 expanded
[t=107.509s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 55
[t=107.509s, 395224 KB] g=24, 3265 evaluated, 85 expanded
[t=107.509s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 53
[t=107.509s, 395224 KB] g=24, 3266 evaluated, 85 expanded
[t=107.513s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 52
[t=107.513s, 395224 KB] g=25, 3314 evaluated, 86 expanded
[t=107.517s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 51
[t=107.517s, 395224 KB] g=26, 3345 evaluated, 87 expanded
[t=107.517s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 50
[t=107.517s, 395224 KB] g=27, 3372 evaluated, 88 expanded
[t=107.521s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 49
[t=107.521s, 395224 KB] g=28, 3405 evaluated, 89 expanded
[t=107.521s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 48
[t=107.521s, 395224 KB] g=28, 3406 evaluated, 89 expanded
[t=107.525s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 47
[t=107.525s, 395224 KB] g=29, 3440 evaluated, 90 expanded
[t=107.525s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 46
[t=107.525s, 395224 KB] g=30, 3466 evaluated, 91 expanded
[t=107.541s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 45
[t=107.541s, 395224 KB] g=31, 3632 evaluated, 95 expanded
[t=107.545s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 44
[t=107.545s, 395224 KB] g=32, 3665 evaluated, 96 expanded
[t=107.545s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 43
[t=107.545s, 395224 KB] g=32, 3666 evaluated, 96 expanded
[t=107.549s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 42
[t=107.549s, 395224 KB] g=33, 3700 evaluated, 97 expanded
[t=107.549s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 41
[t=107.549s, 395224 KB] g=34, 3726 evaluated, 98 expanded
[t=107.549s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 40
[t=107.549s, 395224 KB] g=34, 3727 evaluated, 98 expanded
[t=107.561s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 39
[t=107.561s, 395224 KB] g=36, 3849 evaluated, 101 expanded
[t=107.565s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 38
[t=107.565s, 395224 KB] g=37, 3884 evaluated, 102 expanded
[t=107.565s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 37
[t=107.565s, 395224 KB] g=37, 3885 evaluated, 102 expanded
[t=107.569s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 36
[t=107.569s, 395224 KB] g=38, 3920 evaluated, 103 expanded
[t=107.569s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 35
[t=107.569s, 395224 KB] g=39, 3944 evaluated, 104 expanded
[t=107.573s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 34
[t=107.573s, 395224 KB] g=40, 3965 evaluated, 105 expanded
[t=109.529s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 33
[t=109.529s, 395224 KB] g=47, 26245 evaluated, 760 expanded
[t=109.533s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 32
[t=109.533s, 395224 KB] g=48, 26281 evaluated, 761 expanded
[t=111.284s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 31
[t=111.288s, 395224 KB] g=55, 46479 evaluated, 1355 expanded
[t=111.288s, 395224 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 30
[t=111.288s, 395224 KB] g=56, 46513 evaluated, 1356 expanded
[t=153.674s, 430676 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 29
[t=153.674s, 430676 KB] g=59, 536539 evaluated, 18773 expanded
[t=153.678s, 430676 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 28
[t=153.678s, 430676 KB] g=60, 536564 evaluated, 18774 expanded
[t=194.019s, 470156 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=194.019s, 470156 KB] g=65, 1014563 evaluated, 35809 expanded
[t=194.023s, 470156 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=194.023s, 470156 KB] g=66, 1014589 evaluated, 35810 expanded
[t=234.194s, 501948 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=234.194s, 501948 KB] g=69, 1493024 evaluated, 52861 expanded
[t=234.198s, 501948 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=234.198s, 501948 KB] g=70, 1493060 evaluated, 52862 expanded
[t=274.358s, 552616 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=274.358s, 552616 KB] g=75, 1962504 evaluated, 69606 expanded
[t=274.362s, 552616 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=274.362s, 552616 KB] g=76, 1962537 evaluated, 69607 expanded
[t=314.009s, 580640 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=314.009s, 580640 KB] g=79, 2431288 evaluated, 86336 expanded
[t=314.009s, 580640 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=314.009s, 580640 KB] g=80, 2431320 evaluated, 86337 expanded
[t=352.472s, 610956 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=352.472s, 610956 KB] g=85, 2888820 evaluated, 102699 expanded
[t=352.476s, 610956 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=352.476s, 610956 KB] g=86, 2888840 evaluated, 102700 expanded
[t=391.38s, 641604 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=391.38s, 641604 KB] g=89, 3347716 evaluated, 119105 expanded
[t=391.384s, 641604 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=391.384s, 641604 KB] g=90, 3347754 evaluated, 119106 expanded
[t=428.268s, 709860 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=428.268s, 709860 KB] g=95, 3792719 evaluated, 135058 expanded
[t=428.272s, 709860 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=428.272s, 709860 KB] g=96, 3792740 evaluated, 135059 expanded
[t=464.939s, 733232 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=464.939s, 733232 KB] g=99, 4235031 evaluated, 150936 expanded
[t=464.943s, 733232 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=464.943s, 733232 KB] g=100, 4235053 evaluated, 150937 expanded
[t=501.061s, 761792 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=501.061s, 761792 KB] g=105, 4665541 evaluated, 166428 expanded
[t=501.065s, 761792 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=501.065s, 761792 KB] g=106, 4665571 evaluated, 166429 expanded
[t=536.622s, 790208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=536.622s, 790208 KB] g=109, 5093029 evaluated, 181837 expanded
[t=536.626s, 790208 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=536.626s, 790208 KB] g=110, 5093060 evaluated, 181838 expanded
[t=571.685s, 817824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=571.685s, 817824 KB] g=114, 5510514 evaluated, 196919 expanded
[t=571.685s, 817824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=571.685s, 817824 KB] g=115, 5510550 evaluated, 196920 expanded
[t=571.689s, 817824 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=571.689s, 817824 KB] g=116, 5510573 evaluated, 196921 expanded
[t=616.885s, 853396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=616.885s, 853396 KB] g=124, 6046011 evaluated, 216291 expanded
[t=616.889s, 853396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=616.889s, 853396 KB] g=125, 6046034 evaluated, 216292 expanded
[t=616.893s, 853396 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=616.893s, 853396 KB] g=126, 6046071 evaluated, 216293 expanded
[t=616.897s, 853396 KB] Solution found!
[t=616.897s, 853396 KB] Actual search time: 509.687s
move-car-to-car car_00 car_11 car_25 (1)
move-car-to-car car_32 car_10 car_11 (1)
move-car-to-car car_31 car_30 car_10 (1)
move-car-to-car car_01 car_03 car_26 (1)
move-car-to-car car_24 car_18 car_03 (1)
move-car-to-car car_09 car_13 car_18 (1)
move-car-to-car car_34 car_20 car_13 (1)
move-car-to-car car_28 car_02 car_20 (1)
move-car-to-car car_23 car_33 car_02 (1)
move-curb-to-car car_33 curb_09 car_30 (1)
move-car-to-curb car_09 car_18 curb_09 (1)
move-car-to-car car_16 car_39 car_09 (1)
move-curb-to-car car_39 curb_12 car_18 (1)
move-car-to-curb car_00 car_25 curb_12 (1)
move-car-to-car car_36 car_12 car_00 (1)
move-car-to-car car_33 car_30 car_12 (1)
move-car-to-car car_16 car_09 car_25 (1)
move-curb-to-car car_30 curb_07 car_09 (1)
move-car-to-curb car_07 car_29 curb_07 (1)
move-car-to-car car_28 car_20 car_07 (1)
move-curb-to-car car_29 curb_04 car_20 (1)
move-car-to-curb car_04 car_21 curb_04 (1)
move-curb-to-car car_21 curb_08 car_04 (1)
move-car-to-curb car_08 car_05 curb_08 (1)
move-car-to-car car_29 car_20 car_08 (1)
move-car-to-car car_01 car_26 car_20 (1)
move-curb-to-car car_26 curb_19 car_05 (1)
move-car-to-curb car_14 car_27 curb_19 (1)
move-car-to-car car_35 car_19 car_14 (1)
move-car-to-car car_22 car_06 car_19 (1)
move-curb-to-car car_27 curb_17 car_06 (1)
move-car-to-curb car_15 car_37 curb_17 (1)
move-car-to-car car_36 car_00 car_15 (1)
move-car-to-car car_21 car_04 car_00 (1)
move-car-to-car car_16 car_25 car_37 (1)
move-curb-to-car car_25 curb_20 car_04 (1)
move-car-to-curb car_16 car_37 curb_20 (1)
move-curb-to-car car_37 curb_18 car_16 (1)
move-car-to-curb car_01 car_20 curb_18 (1)
move-car-to-car car_22 car_19 car_01 (1)
move-curb-to-car car_20 curb_06 car_19 (1)
move-car-to-curb car_37 car_16 curb_06 (1)
move-curb-to-car car_16 curb_20 car_37 (1)
move-car-to-curb car_20 car_19 curb_20 (1)
move-car-to-car car_16 car_37 car_19 (1)
move-curb-to-car car_37 curb_06 car_20 (1)
move-car-to-curb car_16 car_19 curb_06 (1)
move-car-to-car car_37 car_20 car_16 (1)
move-curb-to-car car_19 curb_03 car_20 (1)
move-car-to-curb car_35 car_14 curb_03 (1)
move-curb-to-car car_14 curb_19 car_35 (1)
move-car-to-curb car_19 car_20 curb_19 (1)
move-car-to-car car_14 car_35 car_19 (1)
move-car-to-car car_26 car_05 car_20 (1)
move-curb-to-car car_05 curb_14 car_35 (1)
move-car-to-curb car_14 car_19 curb_14 (1)
move-car-to-car car_05 car_35 car_19 (1)
move-curb-to-car car_35 curb_03 car_14 (1)
move-car-to-curb car_27 car_06 curb_03 (1)
move-curb-to-car car_06 curb_05 car_27 (1)
move-car-to-curb car_05 car_19 curb_05 (1)
move-car-to-car car_26 car_20 car_05 (1)
move-car-to-car car_06 car_27 car_19 (1)
move-car-to-car car_37 car_16 car_20 (1)
move-curb-to-car car_16 curb_06 car_27 (1)
move-car-to-curb car_06 car_19 curb_06 (1)
move-car-to-car car_16 car_27 car_19 (1)
move-curb-to-car car_27 curb_03 car_06 (1)
move-car-to-curb car_34 car_13 curb_03 (1)
move-curb-to-car car_13 curb_16 car_34 (1)
move-car-to-curb car_16 car_19 curb_16 (1)
move-car-to-car car_37 car_20 car_16 (1)
move-car-to-car car_13 car_34 car_19 (1)
move-car-to-car car_33 car_12 car_20 (1)
move-curb-to-car car_12 curb_13 car_34 (1)
move-car-to-curb car_13 car_19 curb_13 (1)
move-car-to-car car_12 car_34 car_19 (1)
move-curb-to-car car_34 curb_03 car_13 (1)
move-car-to-curb car_21 car_00 curb_03 (1)
move-curb-to-car car_00 curb_12 car_21 (1)
move-car-to-curb car_12 car_19 curb_12 (1)
move-car-to-car car_33 car_20 car_12 (1)
move-car-to-car car_00 car_21 car_19 (1)
move-car-to-car car_39 car_18 car_20 (1)
move-curb-to-car car_18 curb_00 car_21 (1)
move-car-to-curb car_00 car_19 curb_00 (1)
move-car-to-car car_18 car_21 car_19 (1)
move-curb-to-car car_21 curb_03 car_00 (1)
move-car-to-curb car_22 car_01 curb_03 (1)
move-curb-to-car car_01 curb_18 car_22 (1)
move-car-to-curb car_18 car_19 curb_18 (1)
move-car-to-car car_39 car_20 car_18 (1)
move-car-to-car car_01 car_22 car_19 (1)
move-car-to-car car_23 car_02 car_20 (1)
move-curb-to-car car_02 curb_01 car_22 (1)
move-car-to-curb car_01 car_19 curb_01 (1)
move-car-to-car car_02 car_22 car_19 (1)
move-curb-to-car car_22 curb_03 car_01 (1)
move-car-to-curb car_31 car_10 curb_03 (1)
move-curb-to-car car_10 curb_02 car_31 (1)
move-car-to-curb car_02 car_19 curb_02 (1)
move-car-to-car car_23 car_20 car_02 (1)
move-car-to-car car_10 car_31 car_19 (1)
move-car-to-car car_32 car_11 car_20 (1)
move-curb-to-car car_11 curb_10 car_31 (1)
move-car-to-curb car_10 car_19 curb_10 (1)
move-car-to-car car_11 car_31 car_19 (1)
move-curb-to-car car_31 curb_03 car_10 (1)
move-car-to-curb car_24 car_03 curb_03 (1)
move-curb-to-car car_03 curb_11 car_24 (1)
move-car-to-curb car_11 car_19 curb_11 (1)
move-car-to-car car_32 car_20 car_11 (1)
move-car-to-car car_03 car_24 car_19 (1)
move-curb-to-car car_24 curb_03 car_20 (1)
move-car-to-curb car_03 car_19 curb_03 (1)
move-car-to-car car_24 car_20 car_03 (1)
move-car-to-car car_36 car_15 car_19 (1)
move-curb-to-car car_15 curb_17 car_20 (1)
move-car-to-curb car_38 car_17 curb_17 (1)
move-curb-to-car car_17 curb_15 car_38 (1)
move-car-to-curb car_15 car_20 curb_15 (1)
move-car-to-car car_36 car_19 car_15 (1)
move-car-to-car car_17 car_38 car_19 (1)
move-curb-to-car car_38 curb_17 car_20 (1)
move-car-to-curb car_17 car_19 curb_17 (1)
move-car-to-car car_38 car_20 car_17 (1)
[t=616.897s, 853396 KB] Plan length: 126 step(s).
[t=616.897s, 853396 KB] Plan cost: 126
[t=616.897s, 853396 KB] Expanded 216294 state(s).
[t=616.897s, 853396 KB] Reopened 0 state(s).
[t=616.897s, 853396 KB] Evaluated 6046093 state(s).
[t=616.897s, 853396 KB] Evaluations: 6046093
[t=616.897s, 853396 KB] Generated 8879464 state(s).
[t=616.897s, 853396 KB] Dead ends: 413964 state(s).
[t=616.897s, 853396 KB] Number of registered states: 6046093
[t=616.897s, 853396 KB] Int hash set load factor: 6046093/8388608 = 0.72075
[t=616.897s, 853396 KB] Int hash set resizes: 23
[t=616.897s, 853396 KB] Search time: 509.687s
[t=616.897s, 853396 KB] Total time: 616.897s
Solution found.
Peak memory: 853396 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 126 

Successful plans:
Value: 126
 sas_plan 126 

validate exit code: 0

INFO     Planner time: 635.02s
