INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.030s CPU, 0.036s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.080s CPU, 0.073s wall-clock]
Instantiating: [0.120s CPU, 0.115s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.011s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.004s wall-clock]
Translating task: [0.090s CPU, 0.088s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.060s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.024s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45200 KB
Writing output... [0.010s CPU, 0.017s wall-clock]
Done! [0.320s CPU, 0.327s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0119888s, 11556 KB] done reading input!
[t=0.0119888s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.0119888s, 11820 KB] building causal graph...done! [t=0.00398822s]
[t=0.015977s, 12752 KB] Found 120 SGA patterns.
[t=0.015977s, 12752 KB] Found 120 interesting patterns.
[t=0.015977s, 12752 KB] systematic pattern collection generator number of patterns: 120
[t=0.015977s, 12752 KB] systematic pattern collection generator total PDB size: 1320
[t=0.015977s, 12752 KB] systematic pattern collection generator computation time: 0.00398822s
[t=0.015977s, 12752 KB] Computing PDBs for pattern collection...
[t=0.0599356s, 12752 KB] Done computing PDBs for pattern collection: 0.0439586s
[t=0.063941s, 12752 KB] Building successor generator...done!
[t=0.0679211s, 12752 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0679211s, 12752 KB] time for successor generation creation: 0.0039801s
[t=0.0679211s, 12752 KB] Variables: 353
[t=0.0679211s, 12752 KB] FactPairs: 737
[t=0.0679211s, 12752 KB] Bytes per state: 48
[t=0.0679211s, 12752 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0679211s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0679211s, 12752 KB] g=0, 1 evaluated, 0 expanded
[t=0.0679211s, 12752 KB] Initial heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.0679211s, 12752 KB] pruning method: none
[t=0.0679211s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.0679211s, 12752 KB] g=11, 174 evaluated, 10 expanded
[t=0.0679211s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.0679211s, 12752 KB] g=22, 256 evaluated, 25 expanded
[t=0.0679211s, 12752 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.0679211s, 12752 KB] g=34, 406 evaluated, 47 expanded
[t=0.0798975s, 13028 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.0798975s, 13028 KB] g=50, 4159 evaluated, 1173 expanded
[t=0.0798975s, 13028 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.0798975s, 13028 KB] g=51, 4180 evaluated, 1174 expanded
[t=1.62209s, 53676 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=1.62209s, 53676 KB] g=85, 416807 evaluated, 97596 expanded
[t=1.62209s, 53676 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 19
[t=1.62209s, 53676 KB] g=86, 416835 evaluated, 97597 expanded
[t=2.75277s, 71344 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=2.75277s, 71344 KB] g=120, 724086 evaluated, 170917 expanded
[t=2.75277s, 71344 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=2.75277s, 71344 KB] g=121, 724106 evaluated, 170918 expanded
[t=3.57966s, 99196 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=3.57966s, 99196 KB] g=155, 928955 evaluated, 221136 expanded
[t=3.57966s, 99196 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=3.57966s, 99196 KB] g=156, 928979 evaluated, 221137 expanded
[t=3.9473s, 101140 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=3.9473s, 101140 KB] g=190, 1035226 evaluated, 248558 expanded
[t=3.9473s, 101140 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=3.9473s, 101140 KB] g=191, 1035245 evaluated, 248559 expanded
[t=4.08708s, 103796 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=4.08708s, 103796 KB] g=192, 1072639 evaluated, 261392 expanded
[t=4.19099s, 105796 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=4.19099s, 105796 KB] g=226, 1100994 evaluated, 270041 expanded
[t=4.19099s, 105796 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=4.19099s, 105796 KB] g=227, 1101013 evaluated, 270042 expanded
[t=4.55858s, 112996 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=4.55858s, 112996 KB] g=261, 1204381 evaluated, 297768 expanded
[t=4.55858s, 112996 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=4.55858s, 112996 KB] g=262, 1204403 evaluated, 297769 expanded
[t=4.91815s, 120064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=4.91815s, 120064 KB] g=296, 1305502 evaluated, 325190 expanded
[t=4.91815s, 120064 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=4.91815s, 120064 KB] g=297, 1305520 evaluated, 325191 expanded
[t=5.2539s, 127060 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=5.2539s, 127060 KB] g=331, 1405341 evaluated, 352612 expanded
[t=5.2539s, 127060 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=5.2539s, 127060 KB] g=332, 1405361 evaluated, 352613 expanded
[t=5.91715s, 140012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=5.91715s, 140012 KB] g=366, 1591918 evaluated, 403136 expanded
[t=5.91715s, 140012 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=5.91715s, 140012 KB] g=367, 1591936 evaluated, 403137 expanded
[t=8.69361s, 208904 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=8.69361s, 208904 KB] g=416, 2349115 evaluated, 678228 expanded
[t=8.69361s, 208904 KB] New best heuristic value for lsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=8.69361s, 208904 KB] g=418, 2349135 evaluated, 678230 expanded
[t=8.69361s, 208904 KB] Solution found!
[t=8.69361s, 208904 KB] Actual search time: 8.62568s
grasp left shot12 (1)
fill-shot shot12 ingredient1 left right dispenser1 (10)
pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 (1)
refill-shot shot12 ingredient1 left right dispenser1 (10)
grasp right shot13 (1)
leave left shot12 (1)
fill-shot shot13 ingredient3 right left dispenser3 (10)
grasp left shot15 (1)
leave right shot13 (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail11 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot1 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail11 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail5 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail5 shot7 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail5 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail8 ingredient2 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail8 shot11 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail8 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail9 ingredient1 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail9 shot6 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail9 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail3 ingredient1 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail3 shot14 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail3 shot5 right shaker1 l1 l0 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail3 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail10 ingredient1 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot10 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient1 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail2 ingredient4 ingredient1 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail4 ingredient2 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail4 shot2 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail4 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail6 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail6 shot4 right shaker1 l2 l1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (10)
grasp right shaker1 (1)
leave left shot15 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail7 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail7 shot3 right shaker1 l2 l1 (1)
grasp left shot8 (1)
leave right shaker1 (1)
fill-shot shot8 ingredient1 left right dispenser1 (10)
grasp right shaker1 (1)
leave left shot8 (1)
empty-shaker right shaker1 cocktail7 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (10)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (10)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail1 ingredient4 ingredient3 shaker1 right left (1)
grasp left shot8 (1)
empty-shot left shot8 ingredient1 (1)
leave right shaker1 (1)
clean-shot shot8 ingredient1 left right (1)
grasp right shaker1 (1)
pour-shaker-to-shot cocktail1 shot8 right shaker1 l2 l1 (1)
[t=8.69361s, 208904 KB] Plan length: 193 step(s).
[t=8.69361s, 208904 KB] Plan cost: 418
[t=8.69361s, 208904 KB] Expanded 678231 state(s).
[t=8.69361s, 208904 KB] Reopened 0 state(s).
[t=8.69361s, 208904 KB] Evaluated 2349135 state(s).
[t=8.69361s, 208904 KB] Evaluations: 2349135
[t=8.69361s, 208904 KB] Generated 4769453 state(s).
[t=8.69361s, 208904 KB] Dead ends: 0 state(s).
[t=8.69361s, 208904 KB] Number of registered states: 2349135
[t=8.69361s, 208904 KB] Int hash set load factor: 2349135/4194304 = 0.560077
[t=8.69361s, 208904 KB] Int hash set resizes: 22
[t=8.69361s, 208904 KB] Search time: 8.62568s
[t=8.69361s, 208904 KB] Total time: 8.69361s
Solution found.
Peak memory: 208904 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 418 

Successful plans:
Value: 418
 sas_plan 418 

validate exit code: 0

INFO     Planner time: 9.10s
