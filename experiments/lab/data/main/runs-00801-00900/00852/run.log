INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 6 rules.
Computing model... [0.000s CPU, 0.002s wall-clock]
286 relevant atoms
105 auxiliary atoms
391 final queue length
503 total queue pushes
Completing instantiation... [0.010s CPU, 0.002s wall-clock]
Instantiating: [0.010s CPU, 0.006s wall-clock]
Computing fact groups...
Finding invariants...
4 initial candidates
Finding invariants: [0.000s CPU, 0.000s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.002s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Reordering and filtering variables...
18 of 25 variables necessary.
0 of 1 mutex groups necessary.
80 of 80 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 18
Translator derived variables: 0
Translator facts: 59
Translator goal facts: 17
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 80
Translator axioms: 0
Translator task size: 389
Translator peak memory: 32116 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.010s CPU, 0.013s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0.00400352s, 45860 KB] Generating patterns using: systematic pattern collection generator
[t=0.00400352s, 45860 KB] building causal graph...done! [t=0s]
[t=0.00400352s, 45860 KB] Found 34 SGA patterns.
[t=0.00400352s, 45992 KB] Found 850 interesting patterns.
[t=0.00400352s, 45992 KB] systematic pattern collection generator number of patterns: 850
[t=0.00400352s, 45992 KB] systematic pattern collection generator total PDB size: 150484
[t=0.00400352s, 45992 KB] systematic pattern collection generator computation time: 0s
[t=0.00400352s, 45992 KB] Computing PDBs for pattern collection...
[t=0.0399587s, 46868 KB] Done computing PDBs for pattern collection: 0.0359551s
[t=0.0399587s, 48048 KB] Building successor generator...done!
[t=0.0399587s, 48048 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0399587s, 48048 KB] time for successor generation creation: 0s
[t=0.0399587s, 48048 KB] Variables: 18
[t=0.0399587s, 48048 KB] FactPairs: 59
[t=0.0399587s, 48048 KB] Bytes per state: 4
[t=0.0399587s, 48048 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.0399587s, 48048 KB] g=0, 1 evaluated, 0 expanded
[t=0.0399587s, 48048 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.0399587s, 48048 KB] pruning method: none
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.0399587s, 48048 KB] g=1, 2 evaluated, 1 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.0399587s, 48048 KB] g=2, 6 evaluated, 2 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.0399587s, 48048 KB] g=3, 10 evaluated, 3 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.0399587s, 48048 KB] g=4, 15 evaluated, 4 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.0399587s, 48048 KB] g=5, 17 evaluated, 5 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.0399587s, 48048 KB] g=7, 25 evaluated, 8 expanded
[t=0.0399587s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.0399587s, 48048 KB] g=9, 31 evaluated, 10 expanded
[t=0.0439689s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.0439689s, 48048 KB] g=11, 37 evaluated, 12 expanded
[t=0.0439689s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.0441033s, 48048 KB] g=12, 40 evaluated, 13 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.0441033s, 48048 KB] g=14, 46 evaluated, 15 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.0441033s, 48048 KB] g=16, 51 evaluated, 17 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.0441033s, 48048 KB] g=17, 56 evaluated, 18 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.0441033s, 48048 KB] g=18, 57 evaluated, 19 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.0441033s, 48048 KB] g=19, 60 evaluated, 20 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.0441033s, 48048 KB] g=20, 63 evaluated, 21 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.0441033s, 48048 KB] g=21, 66 evaluated, 22 expanded
[t=0.0441033s, 48048 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.0441033s, 48048 KB] g=22, 70 evaluated, 23 expanded
[t=0.0441033s, 48048 KB] Solution found!
[t=0.0441033s, 48048 KB] Actual search time: 0.00414462s
move loc-x2-y2 loc-x1-y2 (1)
move loc-x1-y2 loc-x0-y2 (1)
move loc-x0-y2 loc-x0-y1 (1)
move loc-x0-y1 loc-x1-y1 (1)
move loc-x1-y1 loc-x1-y0 (1)
move loc-x1-y0 loc-x1-y1 (1)
move loc-x1-y1 loc-x2-y1 (1)
move loc-x2-y1 loc-x2-y0 (1)
move loc-x2-y0 loc-x3-y0 (1)
move loc-x3-y0 loc-x3-y1 (1)
move loc-x3-y1 loc-x4-y1 (1)
move loc-x4-y1 loc-x4-y2 (1)
move loc-x4-y2 loc-x3-y2 (1)
move loc-x3-y2 loc-x3-y3 (1)
move loc-x3-y3 loc-x4-y3 (1)
move loc-x4-y3 loc-x3-y3 (1)
move loc-x3-y3 loc-x3-y4 (1)
move loc-x3-y4 loc-x2-y4 (1)
move loc-x2-y4 loc-x1-y4 (1)
move loc-x1-y4 loc-x0-y4 (1)
move loc-x0-y4 loc-x0-y3 (1)
move loc-x0-y3 loc-x1-y3 (1)
[t=0.0441033s, 48048 KB] Plan length: 22 step(s).
[t=0.0441033s, 48048 KB] Plan cost: 22
[t=0.0441033s, 48048 KB] Expanded 24 state(s).
[t=0.0441033s, 48048 KB] Reopened 0 state(s).
[t=0.0441033s, 48048 KB] Evaluated 70 state(s).
[t=0.0441033s, 48048 KB] Evaluations: 70
[t=0.0441033s, 48048 KB] Generated 76 state(s).
[t=0.0441033s, 48048 KB] Dead ends: 0 state(s).
[t=0.0441033s, 48048 KB] Number of registered states: 70
[t=0.0441033s, 48048 KB] Int hash set load factor: 70/128 = 0.546875
[t=0.0441033s, 48048 KB] Int hash set resizes: 7
[t=0.0441033s, 48048 KB] Search time: 0.00414462s
[t=0.0441033s, 48048 KB] Total time: 0.0441033s
Solution found.
Peak memory: 48048 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 22 

Successful plans:
Value: 22
 sas_plan 22 

validate exit code: 0

INFO     Planner time: 0.13s
