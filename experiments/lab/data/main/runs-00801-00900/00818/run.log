INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
694 relevant atoms
2181 auxiliary atoms
2875 final queue length
3474 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.011s wall-clock]
97 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
46 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.005s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 12 mutex groups necessary.
494 of 494 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 58
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 494
Translator axioms: 0
Translator task size: 2907
Translator peak memory: 34148 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.051s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45728 KB] done reading input!
[t=0.00398094s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0.00398094s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00398094s, 46140 KB] Found 638 SGA patterns.
[t=0.00398094s, 46140 KB] Found 638 interesting patterns.
[t=0.00398094s, 46140 KB] systematic pattern collection generator number of patterns: 638
[t=0.00398094s, 46140 KB] systematic pattern collection generator total PDB size: 198686
[t=0.00398094s, 46140 KB] systematic pattern collection generator computation time: 0s
[t=0.00398094s, 46140 KB] Computing PDBs for pattern collection...
[t=0.151822s, 46876 KB] Done computing PDBs for pattern collection: 0.147841s
[t=0.163805s, 50668 KB] Building successor generator...done!
[t=0.163805s, 50668 KB] peak memory difference for successor generator creation: 0 KB
[t=0.163805s, 50668 KB] time for successor generation creation: 0s
[t=0.163805s, 50668 KB] Variables: 13
[t=0.163805s, 50668 KB] FactPairs: 58
[t=0.163805s, 50668 KB] Bytes per state: 4
[t=0.163805s, 50668 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.163805s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 30
[t=0.163805s, 50668 KB] g=0, 1 evaluated, 0 expanded
[t=0.163805s, 50668 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 30
[t=0.163805s, 50668 KB] pruning method: none
[t=0.163805s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 29
[t=0.163805s, 50668 KB] g=1, 2 evaluated, 1 expanded
[t=0.163805s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 28
[t=0.163805s, 50668 KB] g=3, 16 evaluated, 7 expanded
[t=0.163805s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 27
[t=0.163805s, 50668 KB] g=4, 21 evaluated, 8 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 26
[t=0.167803s, 50668 KB] g=6, 78 evaluated, 37 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 25
[t=0.167803s, 50668 KB] g=12, 159 evaluated, 74 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 24
[t=0.167803s, 50668 KB] g=16, 179 evaluated, 81 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.167803s, 50668 KB] g=22, 221 evaluated, 96 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.167803s, 50668 KB] g=24, 245 evaluated, 103 expanded
[t=0.167803s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.167803s, 50668 KB] g=27, 263 evaluated, 108 expanded
[t=0.171814s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.171814s, 50668 KB] g=32, 307 evaluated, 131 expanded
[t=0.171814s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.171814s, 50668 KB] g=41, 390 evaluated, 172 expanded
[t=0.175795s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.175795s, 50668 KB] g=52, 606 evaluated, 289 expanded
[t=0.179809s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.179809s, 50668 KB] g=61, 843 evaluated, 402 expanded
[t=0.183784s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.183784s, 50668 KB] g=72, 1053 evaluated, 517 expanded
[t=0.187785s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.187785s, 50668 KB] g=81, 1283 evaluated, 623 expanded
[t=0.191796s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.191796s, 50668 KB] g=91, 1575 evaluated, 775 expanded
[t=0.191796s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.191796s, 50668 KB] g=92, 1578 evaluated, 776 expanded
[t=0.191796s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.191796s, 50668 KB] g=97, 1612 evaluated, 791 expanded
[t=0.191796s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.191796s, 50668 KB] g=104, 1658 evaluated, 816 expanded
[t=0.195775s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.195775s, 50668 KB] g=118, 1876 evaluated, 928 expanded
[t=0.195775s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.195775s, 50668 KB] g=119, 1878 evaluated, 929 expanded
[t=0.199774s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.199774s, 50668 KB] g=137, 2185 evaluated, 1107 expanded
[t=0.207769s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.207769s, 50668 KB] g=129, 2706 evaluated, 1409 expanded
[t=0.207769s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.207769s, 50668 KB] g=130, 2709 evaluated, 1410 expanded
[t=0.211776s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.211776s, 50668 KB] g=135, 2733 evaluated, 1422 expanded
[t=0.211776s, 50668 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.211776s, 50668 KB] g=139, 2744 evaluated, 1429 expanded
[t=0.247728s, 50800 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.247728s, 50800 KB] g=163, 5403 evaluated, 3331 expanded
[t=0.247728s, 50800 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.247728s, 50800 KB] g=168, 5425 evaluated, 3340 expanded
[t=0.251735s, 50800 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.251735s, 50800 KB] g=169, 5427 evaluated, 3341 expanded
[t=0.251735s, 50800 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.251735s, 50800 KB] g=170, 5429 evaluated, 3342 expanded
[t=0.251735s, 50800 KB] Solution found!
[t=0.251735s, 50800 KB] Actual search time: 0.08793s
create-block pos-3-0 (1)
place-block pos-3-0 pos-2-0 n0 n1 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-2 n0 n1 (1)
move pos-3-1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-2-0 n1 n0 (1)
move pos-2-1 pos-2-0 n0 (1)
place-block pos-2-0 pos-1-0 n0 n1 (1)
move pos-2-0 pos-3-0 n0 (1)
create-block pos-3-0 (1)
place-block pos-3-0 pos-2-0 n0 n1 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
place-block pos-3-0 pos-3-1 n0 n1 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-3-1 n1 (1)
place-block pos-3-1 pos-3-2 n1 n2 (1)
move-down pos-3-1 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-3-1 n1 n0 (1)
place-block pos-2-1 pos-2-2 n0 n1 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-1-0 n1 (1)
place-block pos-1-0 pos-2-0 n1 n2 (1)
move pos-1-0 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-1-0 n1 n2 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-1-2 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-0-1 n0 n1 (1)
move pos-0-2 pos-1-2 n0 (1)
move-up pos-1-2 n0 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-0-1 n1 n2 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-1-2 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-1-2 n0 n1 (1)
move-up pos-0-2 n0 pos-1-2 n1 (1)
move pos-1-2 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-1-2 n1 n2 (1)
remove-block pos-1-1 pos-1-0 n2 n1 (1)
move pos-1-1 pos-1-0 n1 (1)
place-block pos-1-0 pos-1-1 n1 n2 (1)
remove-block pos-1-0 pos-2-0 n2 n1 (1)
move-up pos-1-0 n1 pos-1-1 n2 (1)
place-block pos-1-1 pos-0-1 n2 n3 (1)
move-down pos-1-1 n2 pos-1-0 n1 (1)
remove-block pos-1-0 pos-1-1 n2 n1 (1)
place-block pos-1-0 pos-2-0 n1 n2 (1)
move pos-1-0 pos-1-1 n1 (1)
remove-block pos-1-1 pos-1-2 n2 n1 (1)
place-block pos-1-1 pos-1-0 n1 n2 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-1-1 n1 n0 (1)
move-up pos-2-1 n0 pos-2-2 n1 (1)
place-block pos-2-2 pos-1-2 n1 n2 (1)
move-down pos-2-2 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-2-1 n0 n1 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-2 n1 n2 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
move-up pos-2-1 n1 pos-2-2 n2 (1)
place-block pos-2-2 pos-3-2 n2 n3 (1)
move-down pos-2-2 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-2 n2 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-2 n1 n2 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
move-up pos-2-1 n1 pos-2-2 n2 (1)
place-block pos-2-2 pos-1-2 n2 n3 (1)
move-down pos-2-2 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-2 n2 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-1-1 n0 (1)
remove-block pos-1-1 pos-2-1 n1 n0 (1)
move pos-1-1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
remove-block pos-2-1 pos-2-2 n1 n0 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
move-up pos-1-1 n1 pos-1-0 n2 (1)
place-block pos-1-0 pos-2-0 n2 n3 (1)
move-down pos-1-0 n2 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-2-1 n0 n1 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
place-block pos-2-1 pos-1-1 n1 n2 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-1-1 n2 (1)
place-block pos-1-1 pos-1-0 n2 n3 (1)
move-down pos-1-1 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-1-1 n2 n1 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
destroy-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
remove-block pos-3-1 pos-2-1 n1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
place-block pos-2-1 pos-3-1 n0 n1 (1)
remove-block pos-2-1 pos-1-1 n1 n0 (1)
move-up pos-2-1 n0 pos-3-1 n1 (1)
move-down pos-3-1 n1 pos-3-0 n0 (1)
destroy-block pos-3-0 (1)
remove-block pos-3-0 pos-3-1 n1 n0 (1)
destroy-block pos-3-0 (1)
[t=0.251735s, 50800 KB] Plan length: 168 step(s).
[t=0.251735s, 50800 KB] Plan cost: 168
[t=0.251735s, 50800 KB] Expanded 3343 state(s).
[t=0.251735s, 50800 KB] Reopened 0 state(s).
[t=0.251735s, 50800 KB] Evaluated 5429 state(s).
[t=0.251735s, 50800 KB] Evaluations: 5429
[t=0.251735s, 50800 KB] Generated 9645 state(s).
[t=0.251735s, 50800 KB] Dead ends: 0 state(s).
[t=0.251735s, 50800 KB] Number of registered states: 5429
[t=0.251735s, 50800 KB] Int hash set load factor: 5429/8192 = 0.66272
[t=0.251735s, 50800 KB] Int hash set resizes: 13
[t=0.251735s, 50800 KB] Search time: 0.08793s
[t=0.251735s, 50800 KB] Total time: 0.251735s
Solution found.
Peak memory: 50800 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 168 

Successful plans:
Value: 168
 sas_plan 168 

validate exit code: 0

INFO     Planner time: 0.37s
