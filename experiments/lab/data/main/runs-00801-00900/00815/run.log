INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
694 relevant atoms
2181 auxiliary atoms
2875 final queue length
3474 total queue pushes
Completing instantiation... [0.010s CPU, 0.010s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.011s wall-clock]
94 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
69 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.005s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 12 mutex groups necessary.
468 of 468 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 58
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 468
Translator axioms: 0
Translator task size: 2751
Translator peak memory: 34152 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.050s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=NORMAL))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45728 KB] done reading input!
[t=0s, 45992 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45992 KB] building causal graph...done! [t=0s]
[t=0.00398598s, 46132 KB] Found 621 SGA patterns.
[t=0.00398598s, 46132 KB] Found 621 interesting patterns.
[t=0.00398598s, 46132 KB] systematic pattern collection generator number of patterns: 621
[t=0.00398598s, 46132 KB] systematic pattern collection generator total PDB size: 195342
[t=0.00398598s, 46132 KB] systematic pattern collection generator computation time: 0.00398598s
[t=0.00398598s, 46132 KB] Computing PDBs for pattern collection...
[t=0.103915s, 46856 KB] Done computing PDBs for pattern collection: 0.0999294s
[t=0.10789s, 50396 KB] Building successor generator...done!
[t=0.10789s, 50396 KB] peak memory difference for successor generator creation: 0 KB
[t=0.10789s, 50396 KB] time for successor generation creation: 0s
[t=0.10789s, 50396 KB] Variables: 13
[t=0.10789s, 50396 KB] FactPairs: 58
[t=0.10789s, 50396 KB] Bytes per state: 4
[t=0.10789s, 50396 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.10789s, 50396 KB] g=0, 1 evaluated, 0 expanded
[t=0.10789s, 50396 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 23
[t=0.10789s, 50396 KB] pruning method: none
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 22
[t=0.10789s, 50396 KB] g=1, 5 evaluated, 1 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 21
[t=0.10789s, 50396 KB] g=2, 7 evaluated, 2 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 20
[t=0.10789s, 50396 KB] g=3, 14 evaluated, 3 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 19
[t=0.10789s, 50396 KB] g=4, 22 evaluated, 5 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 18
[t=0.10789s, 50396 KB] g=5, 25 evaluated, 6 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 17
[t=0.10789s, 50396 KB] g=6, 30 evaluated, 7 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 16
[t=0.10789s, 50396 KB] g=8, 44 evaluated, 11 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 15
[t=0.10789s, 50396 KB] g=9, 45 evaluated, 12 expanded
[t=0.10789s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 14
[t=0.10789s, 50396 KB] g=10, 50 evaluated, 13 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 13
[t=0.111892s, 50396 KB] g=11, 58 evaluated, 17 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 12
[t=0.111892s, 50396 KB] g=12, 60 evaluated, 18 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 11
[t=0.111892s, 50396 KB] g=16, 77 evaluated, 25 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 10
[t=0.111892s, 50396 KB] g=23, 132 evaluated, 45 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 9
[t=0.111892s, 50396 KB] g=24, 133 evaluated, 46 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 8
[t=0.111892s, 50396 KB] g=26, 290 evaluated, 117 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 7
[t=0.111892s, 50396 KB] g=27, 291 evaluated, 118 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 6
[t=0.111892s, 50396 KB] g=30, 299 evaluated, 121 expanded
[t=0.111892s, 50396 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 5
[t=0.111892s, 50396 KB] g=31, 303 evaluated, 122 expanded
[t=0.151887s, 50536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 4
[t=0.151887s, 50536 KB] g=75, 4554 evaluated, 2827 expanded
[t=0.151887s, 50536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 3
[t=0.151887s, 50536 KB] g=76, 4556 evaluated, 2828 expanded
[t=0.151887s, 50536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 2
[t=0.151887s, 50536 KB] g=78, 4560 evaluated, 2830 expanded
[t=0.151887s, 50536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 1
[t=0.151887s, 50536 KB] g=79, 4563 evaluated, 2831 expanded
[t=0.151887s, 50536 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=normal)): 0
[t=0.151887s, 50536 KB] g=80, 4566 evaluated, 2832 expanded
[t=0.151887s, 50536 KB] Solution found!
[t=0.151887s, 50536 KB] Actual search time: 0.0439972s
create-block pos-2-0 (1)
place-block pos-2-0 pos-3-0 n0 n1 (1)
create-block pos-2-0 (1)
move pos-2-0 pos-2-1 n0 (1)
place-block pos-2-1 pos-3-1 n0 n1 (1)
move pos-2-1 pos-2-0 n0 (1)
create-block pos-2-0 (1)
place-block pos-2-0 pos-2-1 n0 n1 (1)
create-block pos-2-0 (1)
move-up pos-2-0 n0 pos-3-0 n1 (1)
move pos-3-0 pos-3-1 n1 (1)
place-block pos-3-1 pos-3-0 n1 n2 (1)
move pos-3-1 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-2-0 n0 (1)
create-block pos-2-0 (1)
move-up pos-2-0 n0 pos-2-1 n1 (1)
place-block pos-2-1 pos-3-1 n1 n2 (1)
move-down pos-2-1 n1 pos-2-0 n0 (1)
create-block pos-2-0 (1)
move-up pos-2-0 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-3-1 n2 (1)
place-block pos-3-1 pos-3-0 n2 n3 (1)
move-down pos-3-1 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-3-1 n2 n1 (1)
move pos-2-1 pos-3-1 n1 (1)
place-block pos-3-1 pos-2-1 n1 n2 (1)
move-down pos-3-1 n1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-3-1 n1 n0 (1)
place-block pos-3-2 pos-2-2 n0 n1 (1)
move-up pos-3-2 n0 pos-2-2 n1 (1)
remove-block pos-2-2 pos-2-1 n2 n1 (1)
move-down pos-2-2 n1 pos-1-2 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-1-2 n0 n1 (1)
remove-block pos-1-1 pos-2-1 n1 n0 (1)
move pos-1-1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move pos-2-1 pos-2-0 n0 (1)
create-block pos-2-0 (1)
place-block pos-2-0 pos-2-1 n0 n1 (1)
create-block pos-2-0 (1)
move-up pos-2-0 n0 pos-2-1 n1 (1)
move pos-2-1 pos-2-2 n1 (1)
place-block pos-2-2 pos-2-1 n1 n2 (1)
move-down pos-2-2 n1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-2-2 n1 n0 (1)
move pos-3-2 pos-2-2 n0 (1)
move-up pos-2-2 n0 pos-1-2 n1 (1)
place-block pos-1-2 pos-1-1 n1 n2 (1)
move-down pos-1-2 n1 pos-0-2 n0 (1)
remove-block pos-0-2 pos-1-2 n1 n0 (1)
move pos-0-2 pos-0-1 n0 (1)
move pos-0-1 pos-0-0 n0 (1)
place-block pos-0-0 pos-1-0 n0 n1 (1)
move-up pos-0-0 n0 pos-1-0 n1 (1)
move-down pos-1-0 n1 pos-2-0 n0 (1)
create-block pos-2-0 (1)
move-up pos-2-0 n0 pos-1-0 n1 (1)
move-up pos-1-0 n1 pos-1-1 n2 (1)
place-block pos-1-1 pos-2-1 n2 n3 (1)
move-down pos-1-1 n2 pos-1-0 n1 (1)
remove-block pos-1-0 pos-1-1 n2 n1 (1)
move-down pos-1-0 n1 pos-2-0 n0 (1)
destroy-block pos-2-0 (1)
remove-block pos-2-0 pos-1-0 n1 n0 (1)
destroy-block pos-2-0 (1)
move pos-2-0 pos-1-0 n0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
move pos-1-0 pos-2-0 n0 (1)
destroy-block pos-2-0 (1)
[t=0.151887s, 50536 KB] Plan length: 70 step(s).
[t=0.151887s, 50536 KB] Plan cost: 70
[t=0.151887s, 50536 KB] Expanded 2833 state(s).
[t=0.151887s, 50536 KB] Reopened 0 state(s).
[t=0.151887s, 50536 KB] Evaluated 4566 state(s).
[t=0.151887s, 50536 KB] Evaluations: 4566
[t=0.151887s, 50536 KB] Generated 10440 state(s).
[t=0.151887s, 50536 KB] Dead ends: 0 state(s).
[t=0.151887s, 50536 KB] Number of registered states: 4566
[t=0.151887s, 50536 KB] Int hash set load factor: 4566/8192 = 0.557373
[t=0.151887s, 50536 KB] Int hash set resizes: 13
[t=0.151887s, 50536 KB] Search time: 0.0439972s
[t=0.151887s, 50536 KB] Total time: 0.151887s
Solution found.
Peak memory: 50536 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 70 

Successful plans:
Value: 70
 sas_plan 70 

validate exit code: 0

INFO     Planner time: 0.25s
