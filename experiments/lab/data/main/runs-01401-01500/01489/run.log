INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
358 relevant atoms
444 auxiliary atoms
802 final queue length
899 total queue pushes
Completing instantiation... [0.000s CPU, 0.003s wall-clock]
Instantiating: [0.010s CPU, 0.011s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.003s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.001s wall-clock]
Reordering and filtering variables...
11 of 13 variables necessary.
0 of 13 mutex groups necessary.
138 of 174 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.000s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 79
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 138
Translator axioms: 0
Translator task size: 637
Translator peak memory: 32372 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.019s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-fa850d1cb8d716322f299a4f9b64478019793ada_e5e41175/builds/release/bin/downward --search 'eager_greedy([ilsh(patterns=systematic(2), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 45596 KB] reading input...
[t=0s, 45596 KB] done reading input!
[t=0s, 45860 KB] Generating patterns using: systematic pattern collection generator
[t=0s, 45860 KB] building causal graph...done! [t=0s]
[t=0s, 45860 KB] Found 35 SGA patterns.
[t=0s, 45860 KB] Found 35 interesting patterns.
[t=0s, 45860 KB] systematic pattern collection generator number of patterns: 35
[t=0s, 45860 KB] systematic pattern collection generator total PDB size: 700
[t=0s, 45860 KB] systematic pattern collection generator computation time: 0s
[t=0s, 45860 KB] Computing PDBs for pattern collection...
[t=0s, 45860 KB] Done computing PDBs for pattern collection: 0s
[t=0.0039815s, 45860 KB] Tie breaking: 2
[t=0.0039815s, 45860 KB] Building successor generator...done!
[t=0.0039815s, 45860 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0039815s, 45860 KB] time for successor generation creation: 0s
[t=0.0039815s, 45860 KB] Variables: 11
[t=0.0039815s, 45860 KB] FactPairs: 79
[t=0.0039815s, 45860 KB] Bytes per state: 8
[t=0.0039815s, 45860 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 54
[t=0.0039815s, 45860 KB] g=0, 1 evaluated, 0 expanded
[t=0.0039815s, 45860 KB] Initial heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 54
[t=0.0039815s, 45860 KB] pruning method: none
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 53
[t=0.0039815s, 45860 KB] g=1, 3 evaluated, 1 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 50
[t=0.0039815s, 45860 KB] g=1, 6 evaluated, 1 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 49
[t=0.0039815s, 45860 KB] g=2, 15 evaluated, 2 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 48
[t=0.0039815s, 45860 KB] g=2, 18 evaluated, 2 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 47
[t=0.0039815s, 45860 KB] g=3, 26 evaluated, 3 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 46
[t=0.0039815s, 45860 KB] g=4, 36 evaluated, 4 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 45
[t=0.0039815s, 45860 KB] g=5, 46 evaluated, 5 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 42
[t=0.0039815s, 45860 KB] g=6, 57 evaluated, 6 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 40
[t=0.0039815s, 45860 KB] g=7, 69 evaluated, 7 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 39
[t=0.0039815s, 45860 KB] g=8, 76 evaluated, 8 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 38
[t=0.0039815s, 45860 KB] g=9, 86 evaluated, 9 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 37
[t=0.0039815s, 45860 KB] g=10, 97 evaluated, 10 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 36
[t=0.0039815s, 45860 KB] g=11, 113 evaluated, 11 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 35
[t=0.0039815s, 45860 KB] g=12, 126 evaluated, 12 expanded
[t=0.0039815s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 34
[t=0.00798085s, 45860 KB] g=13, 138 evaluated, 13 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 33
[t=0.00798085s, 45860 KB] g=14, 150 evaluated, 14 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 32
[t=0.00798085s, 45860 KB] g=15, 163 evaluated, 15 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 31
[t=0.00798085s, 45860 KB] g=16, 177 evaluated, 16 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 30
[t=0.00798085s, 45860 KB] g=17, 186 evaluated, 17 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 29
[t=0.00798085s, 45860 KB] g=18, 197 evaluated, 18 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 27
[t=0.00798085s, 45860 KB] g=18, 199 evaluated, 18 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 26
[t=0.00798085s, 45860 KB] g=19, 207 evaluated, 19 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 25
[t=0.00798085s, 45860 KB] g=20, 219 evaluated, 20 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 24
[t=0.00798085s, 45860 KB] g=21, 231 evaluated, 21 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 23
[t=0.00798085s, 45860 KB] g=23, 252 evaluated, 24 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 22
[t=0.00798085s, 45860 KB] g=25, 272 evaluated, 26 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 21
[t=0.00798085s, 45860 KB] g=26, 284 evaluated, 27 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 20
[t=0.00798085s, 45860 KB] g=27, 295 evaluated, 28 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 18
[t=0.00798085s, 45860 KB] g=28, 310 evaluated, 29 expanded
[t=0.00798085s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 17
[t=0.00798085s, 45860 KB] g=29, 326 evaluated, 30 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 16
[t=0.0119924s, 45860 KB] g=30, 341 evaluated, 31 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 15
[t=0.0119924s, 45860 KB] g=32, 361 evaluated, 33 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 14
[t=0.0119924s, 45860 KB] g=33, 367 evaluated, 34 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 13
[t=0.0119924s, 45860 KB] g=34, 378 evaluated, 35 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 12
[t=0.0119924s, 45860 KB] g=35, 389 evaluated, 36 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 11
[t=0.0119924s, 45860 KB] g=36, 405 evaluated, 37 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 10
[t=0.0119924s, 45860 KB] g=37, 415 evaluated, 38 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 9
[t=0.0119924s, 45860 KB] g=38, 427 evaluated, 39 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 8
[t=0.0119924s, 45860 KB] g=39, 439 evaluated, 40 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 7
[t=0.0119924s, 45860 KB] g=40, 452 evaluated, 41 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 6
[t=0.0119924s, 45860 KB] g=41, 456 evaluated, 42 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 5
[t=0.0119924s, 45860 KB] g=42, 466 evaluated, 43 expanded
[t=0.0119924s, 45860 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 4
[t=0.0119924s, 45860 KB] g=43, 479 evaluated, 44 expanded
[t=0.0119924s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 3
[t=0.0119924s, 45992 KB] g=45, 526 evaluated, 48 expanded
[t=0.0119924s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 2
[t=0.0119924s, 45992 KB] g=46, 534 evaluated, 49 expanded
[t=0.0119924s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 1
[t=0.0119924s, 45992 KB] g=47, 544 evaluated, 50 expanded
[t=0.0119924s, 45992 KB] New best heuristic value for ilsh(patterns=systematic(2),transform=adapt_costs(cost_type=one)): 0
[t=0.0119924s, 45992 KB] g=48, 555 evaluated, 51 expanded
[t=0.0119924s, 45992 KB] Solution found!
[t=0.0119924s, 45992 KB] Actual search time: 0.00801094s
load-truck obj23 tru2 pos2 (1)
load-truck obj21 tru2 pos2 (1)
load-truck obj33 tru3 pos3 (1)
load-truck obj32 tru3 pos3 (1)
drive-truck tru2 pos2 apt2 cit2 (1)
unload-truck obj23 tru2 apt2 (1)
unload-truck obj21 tru2 apt2 (1)
drive-truck tru3 pos3 apt3 cit3 (1)
unload-truck obj33 tru3 apt3 (1)
unload-truck obj32 tru3 apt3 (1)
load-truck obj13 tru1 pos1 (1)
load-truck obj12 tru1 pos1 (1)
drive-truck tru1 pos1 apt1 cit1 (1)
unload-truck obj13 tru1 apt1 (1)
unload-truck obj12 tru1 apt1 (1)
load-airplane obj33 apn1 apt3 (1)
fly-airplane apn1 apt3 apt1 (1)
load-airplane obj12 apn1 apt1 (1)
fly-airplane apn1 apt1 apt2 (1)
load-airplane obj23 apn1 apt2 (1)
load-airplane obj21 apn1 apt2 (1)
drive-truck tru1 apt1 pos1 cit1 (1)
load-truck obj11 tru1 pos1 (1)
drive-truck tru1 pos1 apt1 cit1 (1)
unload-truck obj11 tru1 apt1 (1)
fly-airplane apn1 apt2 apt1 (1)
unload-airplane obj33 apn1 apt1 (1)
unload-airplane obj23 apn1 apt1 (1)
load-airplane obj13 apn1 apt1 (1)
load-airplane obj11 apn1 apt1 (1)
fly-airplane apn1 apt1 apt2 (1)
unload-airplane obj13 apn1 apt2 (1)
load-truck obj13 tru2 apt2 (1)
drive-truck tru2 apt2 pos2 cit2 (1)
unload-truck obj13 tru2 pos2 (1)
fly-airplane apn1 apt2 apt3 (1)
load-airplane obj32 apn1 apt3 (1)
unload-airplane obj21 apn1 apt3 (1)
unload-airplane obj12 apn1 apt3 (1)
unload-airplane obj11 apn1 apt3 (1)
load-truck obj11 tru3 apt3 (1)
drive-truck tru3 apt3 pos3 cit3 (1)
unload-truck obj11 tru3 pos3 (1)
fly-airplane apn1 apt3 apt1 (1)
unload-airplane obj32 apn1 apt1 (1)
load-truck obj32 tru1 apt1 (1)
drive-truck tru1 apt1 pos1 cit1 (1)
unload-truck obj32 tru1 pos1 (1)
[t=0.0119924s, 45992 KB] Plan length: 48 step(s).
[t=0.0119924s, 45992 KB] Plan cost: 48
[t=0.0119924s, 45992 KB] Expanded 52 state(s).
[t=0.0119924s, 45992 KB] Reopened 0 state(s).
[t=0.0119924s, 45992 KB] Evaluated 559 state(s).
[t=0.0119924s, 45992 KB] Evaluations: 559
[t=0.0119924s, 45992 KB] Generated 642 state(s).
[t=0.0119924s, 45992 KB] Dead ends: 0 state(s).
[t=0.0119924s, 45992 KB] Number of registered states: 559
[t=0.0119924s, 45992 KB] Int hash set load factor: 559/1024 = 0.545898
[t=0.0119924s, 45992 KB] Int hash set resizes: 10
[t=0.0119924s, 45992 KB] Search time: 0.00801094s
[t=0.0119924s, 45992 KB] Total time: 0.0119924s
Solution found.
Peak memory: 45992 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 48 

Successful plans:
Value: 48
 sas_plan 48 

validate exit code: 0

INFO     Planner time: 0.08s
