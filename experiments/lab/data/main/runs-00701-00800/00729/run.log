INFO     planner time limit: 1800s
INFO     planner memory limit: 2048 MB

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799s
INFO     translator memory limit: 2048 MB
INFO     translator command line string: /home/henry/Documents/UFRGS/TCC/downward/.venv/bin/python /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 115 rules.
Computing model... [0.040s CPU, 0.033s wall-clock]
3296 relevant atoms
3425 auxiliary atoms
6721 final queue length
11595 total queue pushes
Completing instantiation... [0.060s CPU, 0.068s wall-clock]
Instantiating: [0.100s CPU, 0.107s wall-clock]
Computing fact groups...
Finding invariants...
24 initial candidates
Finding invariants: [0.010s CPU, 0.010s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
350 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.080s CPU, 0.081s wall-clock]
3920 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.058s wall-clock]
Reordering and filtering variables...
353 of 353 variables necessary.
16 of 19 mutex groups necessary.
2344 of 2344 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.024s wall-clock]
Translator variables: 353
Translator derived variables: 0
Translator facts: 737
Translator goal facts: 14
Translator mutex groups: 16
Translator total mutex groups size: 48
Translator operators: 2344
Translator axioms: 0
Translator task size: 22454
Translator peak memory: 45696 KB
Writing output... [0.020s CPU, 0.016s wall-clock]
Done! [0.310s CPU, 0.307s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799s
INFO     search memory limit: 2048 MB
INFO     search command line string: /home/henry/Documents/UFRGS/TCC/downward/experiments/lab/data/main/code-5bb2ccb6957559b6969ffd7e29254c73f84d5e49_e5e41175/builds/release/bin/downward --search 'eager_greedy([lsh(patterns=systematic(4), transform=adapt_costs(cost_type=ONE))])' --internal-plan-file sas_plan < output.sas
[t=0s, 10544 KB] reading input...
[t=0.0102539s, 11556 KB] done reading input!
[t=0.0102539s, 11820 KB] Generating patterns using: systematic pattern collection generator
[t=0.0102539s, 11820 KB] building causal graph...done! [t=0.00400778s]
[t=0.150113s, 53228 KB] Found 131920 SGA patterns.
[t=2.24094s, 53228 KB] Found 148720 interesting patterns.
[t=2.33286s, 53228 KB] systematic pattern collection generator number of patterns: 148720
[t=2.33286s, 53228 KB] systematic pattern collection generator total PDB size: 5863076
[t=2.34085s, 53228 KB] systematic pattern collection generator computation time: 2.32261s
[t=2.34085s, 53228 KB] Computing PDBs for pattern collection...
[t=89.1709s, 87720 KB] Done computing PDBs for pattern collection: 86.8301s
[t=98.4484s, 1731936 KB] Building successor generator...done!
[t=98.4564s, 1731936 KB] peak memory difference for successor generator creation: 0 KB
[t=98.4564s, 1731936 KB] time for successor generation creation: 0.00799237s
[t=98.4564s, 1731936 KB] Variables: 353
[t=98.4564s, 1731936 KB] FactPairs: 737
[t=98.4564s, 1731936 KB] Bytes per state: 48
[t=98.4564s, 1731936 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=98.4644s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 51
[t=98.4644s, 1731936 KB] g=0, 1 evaluated, 0 expanded
[t=98.4644s, 1731936 KB] Initial heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 51
[t=98.4644s, 1731936 KB] pruning method: none
[t=98.4764s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 50
[t=98.4764s, 1731936 KB] g=1, 2 evaluated, 1 expanded
[t=98.5923s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 49
[t=98.5923s, 1731936 KB] g=1, 12 evaluated, 1 expanded
[t=98.9759s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 48
[t=98.9759s, 1731936 KB] g=2, 46 evaluated, 2 expanded
[t=99.0518s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 47
[t=99.0518s, 1731936 KB] g=3, 53 evaluated, 3 expanded
[t=102.836s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 45
[t=102.836s, 1731936 KB] g=10, 390 evaluated, 38 expanded
[t=104.498s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 40
[t=104.498s, 1731936 KB] g=10, 537 evaluated, 104 expanded
[t=125.796s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 36
[t=125.796s, 1731936 KB] g=29, 2422 evaluated, 445 expanded
[t=177.414s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 32
[t=177.414s, 1731936 KB] g=48, 7084 evaluated, 1191 expanded
[t=186.735s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 31
[t=186.735s, 1731936 KB] g=49, 7905 evaluated, 1297 expanded
[t=216.428s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 30
[t=216.428s, 1731936 KB] g=51, 10615 evaluated, 1715 expanded
[t=235.509s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 24
[t=235.509s, 1731936 KB] g=51, 12357 evaluated, 2023 expanded
[t=340.139s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 23
[t=340.139s, 1731936 KB] g=65, 21776 evaluated, 2836 expanded
[t=491.213s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 21
[t=491.213s, 1731936 KB] g=78, 35353 evaluated, 4032 expanded
[t=548.6s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 20
[t=548.6s, 1731936 KB] g=89, 40587 evaluated, 4489 expanded
[t=592.029s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 15
[t=592.029s, 1731936 KB] g=91, 44580 evaluated, 4831 expanded
[t=849.599s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 13
[t=849.599s, 1731936 KB] g=104, 67693 evaluated, 6952 expanded
[t=1053.13s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 11
[t=1053.13s, 1731936 KB] g=117, 86379 evaluated, 8699 expanded
[t=1204.54s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 9
[t=1204.55s, 1731936 KB] g=130, 101077 evaluated, 10086 expanded
[t=1205.64s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 8
[t=1205.64s, 1731936 KB] g=134, 101185 evaluated, 10091 expanded
[t=1216.54s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 7
[t=1216.54s, 1731936 KB] g=140, 102266 evaluated, 10196 expanded
[t=1286.45s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 6
[t=1286.45s, 1731936 KB] g=143, 109277 evaluated, 11194 expanded
[t=1286.46s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 4
[t=1286.46s, 1731936 KB] g=144, 109278 evaluated, 11195 expanded
[t=1332.94s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 3
[t=1332.94s, 1731936 KB] g=153, 113948 evaluated, 11885 expanded
[t=1382.1s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 2
[t=1382.1s, 1731936 KB] g=157, 118875 evaluated, 12621 expanded
[t=1382.25s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 1
[t=1382.25s, 1731936 KB] g=158, 118888 evaluated, 12622 expanded
[t=1382.46s, 1731936 KB] New best heuristic value for lsh(patterns=systematic(4),transform=adapt_costs(cost_type=one)): 0
[t=1382.46s, 1731936 KB] g=159, 118906 evaluated, 12623 expanded
[t=1382.49s, 1731936 KB] Solution found!
[t=1382.49s, 1731936 KB] Actual search time: 1284.03s
grasp left shot13 (1)
fill-shot shot13 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
leave left shot13 (1)
grasp left shot15 (1)
leave right shaker1 (1)
fill-shot shot15 ingredient3 left right dispenser3 (1)
grasp right shaker1 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
leave left shot15 (1)
grasp left shot13 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail6 ingredient3 ingredient1 shaker1 right left (1)
grasp left shot13 (1)
pour-shaker-to-shot cocktail6 shot10 right shaker1 l2 l1 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail6 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (1)
grasp right shaker1 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
leave left shot15 (1)
grasp left shot13 (1)
pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 (1)
leave left shot13 (1)
shake cocktail9 ingredient1 ingredient4 shaker1 right left (1)
grasp left shot13 (1)
pour-shaker-to-shot cocktail9 shot1 right shaker1 l2 l1 (1)
leave right shaker1 (1)
refill-shot shot13 ingredient1 left right dispenser1 (1)
grasp right shaker1 (1)
pour-shaker-to-shot cocktail9 shot12 right shaker1 l1 l0 (1)
leave left shot13 (1)
empty-shaker right shaker1 cocktail9 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient4 left right dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient4 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (1)
grasp right shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
leave left shot15 (1)
shake cocktail11 ingredient2 ingredient4 shaker1 right left (1)
pour-shaker-to-shot cocktail11 shot11 right shaker1 l2 l1 (1)
pour-shaker-to-shot cocktail11 shot14 right shaker1 l1 l0 (1)
empty-shaker right shaker1 cocktail11 l0 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient3 left right dispenser3 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 (1)
grasp right shaker1 (1)
leave left shot15 (1)
shake cocktail10 ingredient2 ingredient3 shaker1 right left (1)
pour-shaker-to-shot cocktail10 shot7 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail10 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient3 left right dispenser3 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient3 left right (1)
fill-shot shot15 ingredient2 left right dispenser2 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 (1)
grasp right shaker1 (1)
leave left shot15 (1)
shake cocktail2 ingredient3 ingredient2 shaker1 right left (1)
pour-shaker-to-shot cocktail2 shot5 right shaker1 l2 l1 (1)
empty-shaker right shaker1 cocktail2 l1 l0 (1)
clean-shaker right left shaker1 (1)
grasp left shot15 (1)
leave right shaker1 (1)
refill-shot shot15 ingredient2 left right dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 (1)
clean-shot shot15 ingredient2 left right (1)
fill-shot shot15 ingredient4 left right dispenser4 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 (1)
leave left shot15 (1)
grasp left shaker1 (1)
shake cocktail3 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail3 shot3 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail3 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
grasp left shaker1 (1)
shake cocktail5 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail5 shot9 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail5 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
grasp left shaker1 (1)
shake cocktail7 ingredient4 ingredient2 shaker1 left right (1)
pour-shaker-to-shot cocktail7 shot2 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail7 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient2 right left dispenser2 (1)
pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 (1)
leave right shot15 (1)
grasp left shaker1 (1)
shake cocktail8 ingredient2 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail8 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
clean-shot shot15 ingredient2 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient3 right left (1)
fill-shot shot15 ingredient4 right left dispenser4 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail4 ingredient4 ingredient3 shaker1 left right (1)
pour-shaker-to-shot cocktail4 shot6 left shaker1 l2 l1 (1)
empty-shaker left shaker1 cocktail4 l1 l0 (1)
clean-shaker left right shaker1 (1)
grasp right shot15 (1)
leave left shaker1 (1)
refill-shot shot15 ingredient4 right left dispenser4 (1)
pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 (1)
clean-shot shot15 ingredient4 right left (1)
fill-shot shot15 ingredient3 right left dispenser3 (1)
grasp left shaker1 (1)
pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 (1)
leave right shot15 (1)
shake cocktail1 ingredient3 ingredient4 shaker1 left right (1)
pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 (1)
[t=1382.49s, 1731936 KB] Plan length: 159 step(s).
[t=1382.49s, 1731936 KB] Plan cost: 159
[t=1382.49s, 1731936 KB] Expanded 12624 state(s).
[t=1382.49s, 1731936 KB] Reopened 0 state(s).
[t=1382.49s, 1731936 KB] Evaluated 118909 state(s).
[t=1382.49s, 1731936 KB] Evaluations: 118909
[t=1382.49s, 1731936 KB] Generated 193511 state(s).
[t=1382.49s, 1731936 KB] Dead ends: 0 state(s).
[t=1382.49s, 1731936 KB] Number of registered states: 118909
[t=1382.49s, 1731936 KB] Int hash set load factor: 118909/262144 = 0.453602
[t=1382.49s, 1731936 KB] Int hash set resizes: 18
[t=1382.49s, 1731936 KB] Search time: 1284.03s
[t=1382.49s, 1731936 KB] Total time: 1382.49s
Solution found.
Peak memory: 1731936 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: /home/henry/bin/validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 159 

Successful plans:
Value: 159
 sas_plan 159 

validate exit code: 0

INFO     Planner time: 1383.03s
