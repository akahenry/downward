#! /usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
from collections import defaultdict
import json
import sys


HELP = """Convert a suite name to a list of domains.

A suite named "*-strips" means that the output file generated by the
Fast Downward translator is SAS+ plus action costs, while the "adl"
suffix means that it may also contain conditional effects and/or axioms.
These names are not ideal for distinguishing the domains, but they are
the way they are for historical reasons.

For some domains, there are several formulations. Suites with "ipc" in
their names (and their combinations) only contain one formulation of
every domain. If there are other formulations, they are in separate
suites which are not part of the regular IPC suites. They are only part
of special suites such as "suite_alternative_formulations" and
"suite_all"."""

_PREFIX = "suite_"

def suite_ff_or_rb_can_solve_and_lsh_not_or_the_opposite():
    return [
        'transport-sat11-strips:p04.pddl', 'tidybot-sat11-strips:p12.pddl', 'parcprinter-sat11-strips:p03.pddl', 'thoughtful-sat14-strips:p13_7_79-typed.pddl', 'tetris-sat14-strips:p024.pddl', 'parcprinter-sat11-strips:p08.pddl', 'barman-sat14-strips:p5-11-5-16.pddl', 'visitall-sat11-strips:problem34.pddl', 'thoughtful-sat14-strips:target-typed-28.pddl', 'woodworking-sat11-strips:p07.pddl', 'snake-sat18-strips:p02.pddl', 'spider-sat18-strips:p06.pddl', 'tetris-sat14-strips:p022.pddl', 'agricola-sat18-strips:p13.pddl', 'tetris-sat14-strips:p023.pddl', 'nomystery-sat11-strips:p18.pddl', 'termes-sat18-strips:p19.pddl', 'barman-sat11-strips:pfile07-026.pddl', 'tidybot-sat11-strips:p18.pddl', 'barman-sat11-strips:pfile06-022.pddl', 'visitall-sat14-strips:pfile53.pddl', 'tetris-sat14-strips:p027.pddl', 'elevators-sat11-strips:p15.pddl', 'agricola-sat18-strips:p04.pddl', 'thoughtful-sat14-strips:p13_7_86-typed.pddl', 'spider-sat18-strips:p10.pddl', 'organic-synthesis-split-sat18-strips:p05.pddl', 'openstacks-sat11-strips:p17.pddl', 'nomystery-sat11-strips:p16.pddl', 'floortile-sat11-strips:seq-p04-008.pddl', 'agricola-sat18-strips:p01.pddl', 'openstacks-sat14-strips:p270_2.pddl', 'parking-sat14-strips:p_40_1.pddl', 'tidybot-sat11-strips:p20.pddl', 'transport-sat11-strips:p05.pddl', 'spider-sat18-strips:p11.pddl', 'visitall-sat14-strips:pfile57.pddl', 'barman-sat11-strips:pfile10-040.pddl', 'tetris-sat14-strips:p033.pddl', 'agricola-sat18-strips:p07.pddl', 'agricola-sat18-strips:p10.pddl', 'transport-sat11-strips:p06.pddl', 'woodworking-sat11-strips:p20.pddl', 'organic-synthesis-split-sat18-strips:p12.pddl', 'barman-sat14-strips:p2-11-5-16.pddl', 'barman-sat11-strips:pfile07-025.pddl', 'parcprinter-sat11-strips:p19.pddl', 'floortile-sat11-strips:seq-p02-004.pddl', 'barman-sat11-strips:pfile08-032.pddl', 'parking-sat14-strips:p_34_2.pddl', 'parking-sat14-strips:p_40_2.pddl', 'thoughtful-sat14-strips:target-typed-25.pddl', 'parcprinter-sat11-strips:p14.pddl', 'visitall-sat14-strips:pfile51.pddl', 'woodworking-sat11-strips:p16.pddl', 'barman-sat11-strips:pfile07-028.pddl', 'barman-sat11-strips:pfile08-031.pddl', 'nomystery-sat11-strips:p08.pddl', 'tetris-sat14-strips:p021.pddl', 'data-network-sat18-strips:p01.pddl', 'barman-sat11-strips:pfile09-034.pddl', 'agricola-sat18-strips:p02.pddl', 'woodworking-sat11-strips:p15.pddl', 'woodworking-sat11-strips:p08.pddl', 'transport-sat11-strips:p02.pddl', 'woodworking-sat11-strips:p06.pddl', 'openstacks-sat14-strips:p170_3.pddl', 'tetris-sat14-strips:p031.pddl', 'parking-sat14-strips:p_36_1.pddl', 'openstacks-sat14-strips:p230_3.pddl', 'agricola-sat18-strips:p11.pddl', 'organic-synthesis-split-sat18-strips:p08.pddl', 'openstacks-sat14-strips:p210_2.pddl', 'visitall-sat14-strips:pfile31.pddl', 'woodworking-sat11-strips:p09.pddl', 'tetris-sat14-strips:p035.pddl', 'sokoban-sat11-strips:p16.pddl', 'agricola-sat18-strips:p16.pddl', 'tidybot-sat11-strips:p19.pddl', 'nomystery-sat11-strips:p17.pddl', 'agricola-sat18-strips:p15.pddl', 'floortile-sat11-strips:seq-p06-011.pddl', 'organic-synthesis-split-sat18-strips:p04.pddl', 'barman-sat14-strips:p2-11-5-17.pddl', 'openstacks-sat14-strips:p230_2.pddl', 'barman-sat14-strips:p3-11-5-17.pddl', 'transport-sat11-strips:p08.pddl', 'parcprinter-sat11-strips:p07.pddl', 'tetris-sat14-strips:p025.pddl', 'parcprinter-sat11-strips:p16.pddl', 'openstacks-sat14-strips:p250_2.pddl', 'tetris-sat14-strips:p029.pddl', 'elevators-sat11-strips:p01.pddl', 'parking-sat14-strips:p_38_2.pddl', 'spider-sat18-strips:p16.pddl', 'barman-sat11-strips:pfile08-030.pddl', 'floortile-sat11-strips:seq-p03-005.pddl', 'parcprinter-sat11-strips:p18.pddl', 'spider-sat18-strips:p04.pddl', 'floortile-sat11-strips:seq-p03-006.pddl', 'parcprinter-sat11-strips:p09.pddl', 'tetris-sat14-strips:p036.pddl', 'visitall-sat14-strips:pfile64.pddl', 'scanalyzer-sat11-strips:p14.pddl', 'spider-sat18-strips:p09.pddl', 'barman-sat14-strips:p1-11-5-16.pddl', 'elevators-sat11-strips:p05.pddl', 'data-network-sat18-strips:p12.pddl', 'barman-sat11-strips:pfile10-038.pddl', 'scanalyzer-sat11-strips:p16.pddl', 'thoughtful-sat14-strips:target-typed-24.pddl', 'thoughtful-sat14-strips:p11_6_59-typed.pddl', 'barman-sat11-strips:pfile09-036.pddl', 'openstacks-sat14-strips:p270_3.pddl', 'parcprinter-sat11-strips:p13.pddl', 'visitall-sat14-strips:pfile61.pddl', 'openstacks-sat14-strips:p270_1.pddl', 'spider-sat18-strips:p19.pddl', 'agricola-sat18-strips:p03.pddl', 'spider-sat18-strips:p12.pddl', 'nomystery-sat11-strips:p14.pddl', 'spider-sat18-strips:p03.pddl', 'organic-synthesis-split-sat18-strips:p16.pddl', 'openstacks-sat14-strips:p230_1.pddl', 'spider-sat18-strips:p17.pddl', 'organic-synthesis-split-sat18-strips:p07.pddl', 'tetris-sat14-strips:p026.pddl', 'openstacks-sat14-strips:p290_3.pddl', 'agricola-sat18-strips:p09.pddl', 'tetris-sat14-strips:p032.pddl', 'parking-sat14-strips:p_40_3.pddl', 'transport-sat11-strips:p03.pddl', 'agricola-sat18-strips:p06.pddl', 'woodworking-sat11-strips:p18.pddl', 'woodworking-sat11-strips:p19.pddl', 'agricola-sat18-strips:p08.pddl', 'barman-sat14-strips:p3-11-5-16.pddl', 'barman-sat14-strips:p2-11-4-15.pddl', 'parking-sat14-strips:p_38_1.pddl', 'organic-synthesis-split-sat18-strips:p09.pddl', 'openstacks-sat14-strips:p290_2.pddl', 'tetris-sat14-strips:p038.pddl', 'openstacks-sat11-strips:p19.pddl', 'openstacks-sat14-strips:p250_3.pddl', 'parcprinter-sat11-strips:p04.pddl', 'openstacks-sat14-strips:p290_1.pddl', 'visitall-sat14-strips:pfile65.pddl', 'barman-sat14-strips:p4-11-5-15.pddl', 'woodworking-sat11-strips:p12.pddl', 'parcprinter-sat11-strips:p12.pddl', 'spider-sat18-strips:p05.pddl', 'data-network-sat18-strips:p03.pddl', 'openstacks-sat14-strips:p250_1.pddl', 'woodworking-sat11-strips:p11.pddl', 'barman-sat11-strips:pfile08-029.pddl', 'visitall-sat11-strips:problem26.pddl', 'woodworking-sat11-strips:p01.pddl', 'barman-sat11-strips:pfile10-037.pddl', 'snake-sat18-strips:p06.pddl', 'transport-sat11-strips:p01.pddl', 'agricola-sat18-strips:p19.pddl', 'barman-sat11-strips:pfile09-033.pddl', 'termes-sat18-strips:p06.pddl', 'visitall-sat14-strips:pfile60.pddl', 'data-network-sat18-strips:p14.pddl', 'tetris-sat14-strips:p039.pddl', 'woodworking-sat11-strips:p04.pddl', 'floortile-sat11-strips:seq-p02-003.pddl', 'woodworking-sat11-strips:p02.pddl', 'openstacks-sat14-strips:p210_3.pddl', 'elevators-sat11-strips:p11.pddl', 'openstacks-sat11-strips:p16.pddl', 'organic-synthesis-split-sat18-strips:p11.pddl', 'openstacks-sat14-strips:p190_3.pddl', 'termes-sat18-strips:p15.pddl', 'parcprinter-sat11-strips:p02.pddl', 'agricola-sat18-strips:p12.pddl', 'parcprinter-sat11-strips:p15.pddl', 'elevators-sat11-strips:p20.pddl', 'woodworking-sat11-strips:p13.pddl', 'agricola-sat18-strips:p05.pddl', 'openstacks-sat11-strips:p20.pddl', 'elevators-sat11-strips:p04.pddl', 'tetris-sat14-strips:p037.pddl', 'termes-sat18-strips:p07.pddl', 'thoughtful-sat14-strips:target-typed-27.pddl', 'visitall-sat14-strips:pfile56.pddl', 'barman-sat14-strips:p1-11-5-15.pddl', 'organic-synthesis-split-sat18-strips:p14.pddl', 'openstacks-sat11-strips:p18.pddl', 'barman-sat14-strips:p5-11-5-15.pddl', 'elevators-sat11-strips:p18.pddl', 'barman-sat14-strips:p2-11-5-15.pddl', 'barman-sat14-strips:p3-11-5-15.pddl', 'tetris-sat14-strips:p028.pddl', 'childsnack-sat14-strips:child-snack_pfile05.pddl', 'agricola-sat18-strips:p14.pddl'
    ]

def suite_alternative_formulations():
    return ['airport-adl']


def suite_ipc98_to_ipc04_adl():
    return [
        'assembly', 'miconic-fulladl', 'miconic-simpleadl',
        'optical-telegraphs', 'philosophers', 'psr-large',
        'psr-middle', 'schedule',
    ]


def suite_ipc98_to_ipc04_strips():
    return [
        'airport', 'blocks', 'depot', 'driverlog', 'freecell', 'grid',
        'gripper', 'logistics00', 'logistics98', 'miconic', 'movie',
        'mprime', 'mystery', 'pipesworld-notankage', 'psr-small',
        'satellite', 'zenotravel',
    ]


def suite_ipc98_to_ipc04():
    # All IPC1-4 domains, including the trivial Movie.
    return sorted(suite_ipc98_to_ipc04_adl() + suite_ipc98_to_ipc04_strips())


def suite_ipc06_adl():
    return [
        'openstacks',
        'trucks',
    ]


def suite_ipc06_strips_compilations():
    return [
        'openstacks-strips',
        'trucks-strips',
    ]


def suite_ipc06_strips():
    return [
        'pathways',
        'pipesworld-tankage',
        'rovers',
        'storage',
        'tpp',
    ]


def suite_ipc06():
    return sorted(suite_ipc06_adl() + suite_ipc06_strips())


def suite_ipc08_common_strips():
    return [
        'parcprinter-08-strips',
        'pegsol-08-strips',
        'scanalyzer-08-strips',
    ]


def suite_ipc08_opt_adl():
    return ['openstacks-opt08-adl']


def suite_ipc08_opt_strips():
    return sorted(suite_ipc08_common_strips() + [
        'elevators-opt08-strips',
        'openstacks-opt08-strips',
        'sokoban-opt08-strips',
        'transport-opt08-strips',
        'woodworking-opt08-strips',
    ])


def suite_ipc08_opt():
    return sorted(suite_ipc08_opt_strips() + suite_ipc08_opt_adl())


def suite_ipc08_sat_adl():
    return ['openstacks-sat08-adl']


def suite_ipc08_sat_strips():
    return sorted(suite_ipc08_common_strips() + [
        # Note: cyber-security is missing.
        'elevators-sat08-strips',
        'openstacks-sat08-strips',
        'sokoban-sat08-strips',
        'transport-sat08-strips',
        'woodworking-sat08-strips',
    ])


def suite_ipc08_sat():
    return sorted(suite_ipc08_sat_strips() + suite_ipc08_sat_adl())


def suite_ipc08():
    return sorted(set(suite_ipc08_opt() + suite_ipc08_sat()))


def suite_ipc11_opt():
    return [
        'barman-opt11-strips',
        'elevators-opt11-strips',
        'floortile-opt11-strips',
        'nomystery-opt11-strips',
        'openstacks-opt11-strips',
        'parcprinter-opt11-strips',
        'parking-opt11-strips',
        'pegsol-opt11-strips',
        'scanalyzer-opt11-strips',
        'sokoban-opt11-strips',
        'tidybot-opt11-strips',
        'transport-opt11-strips',
        'visitall-opt11-strips',
        'woodworking-opt11-strips',
    ]


def suite_ipc11_sat():
    return [
        'barman-sat11-strips',
        'elevators-sat11-strips',
        'floortile-sat11-strips',
        'nomystery-sat11-strips',
        'openstacks-sat11-strips',
        'parcprinter-sat11-strips',
        'parking-sat11-strips',
        'pegsol-sat11-strips',
        'scanalyzer-sat11-strips',
        'sokoban-sat11-strips',
        'tidybot-sat11-strips',
        'transport-sat11-strips',
        'visitall-sat11-strips',
        'woodworking-sat11-strips',
    ]


def suite_ipc11():
    return sorted(suite_ipc11_opt() + suite_ipc11_sat())


def suite_ipc14_agl_adl():
    return [
        'cavediving-14-adl',
        'citycar-sat14-adl',
        'maintenance-sat14-adl',
    ]


def suite_ipc14_agl_strips():
    return [
        'barman-sat14-strips',
        'childsnack-sat14-strips',
        'floortile-sat14-strips',
        'ged-sat14-strips',
        'hiking-agl14-strips',
        'openstacks-agl14-strips',
        'parking-sat14-strips',
        'tetris-sat14-strips',
        'thoughtful-sat14-strips',
        'transport-sat14-strips',
        'visitall-sat14-strips',
    ]


def suite_ipc14_agl():
    return sorted(suite_ipc14_agl_adl() + suite_ipc14_agl_strips())


def suite_ipc14_mco_adl():
    return [
        'cavediving-14-adl',
        'citycar-sat14-adl',
        'maintenance-sat14-adl',
    ]


def suite_ipc14_mco_strips():
    return [
        'barman-mco14-strips',
        'childsnack-sat14-strips',
        'floortile-sat14-strips',
        'ged-sat14-strips',
        'hiking-sat14-strips',
        'openstacks-sat14-strips',
        'parking-sat14-strips',
        'tetris-sat14-strips',
        'thoughtful-mco14-strips',
        'transport-sat14-strips',
        'visitall-sat14-strips',
    ]


def suite_ipc14_mco():
    return sorted(suite_ipc14_mco_adl() + suite_ipc14_mco_strips())


def suite_ipc14_opt_adl():
    return [
        'cavediving-14-adl',
        'citycar-opt14-adl',
        'maintenance-opt14-adl',
    ]


def suite_ipc14_opt_strips():
    return [
        'barman-opt14-strips',
        'childsnack-opt14-strips',
        'floortile-opt14-strips',
        'ged-opt14-strips',
        'hiking-opt14-strips',
        'openstacks-opt14-strips',
        'parking-opt14-strips',
        'tetris-opt14-strips',
        'tidybot-opt14-strips',
        'transport-opt14-strips',
        'visitall-opt14-strips',
    ]


def suite_ipc14_opt():
    return sorted(suite_ipc14_opt_adl() + suite_ipc14_opt_strips())


def suite_ipc14_sat_adl():
    return [
        'cavediving-14-adl',
        'citycar-sat14-adl',
        'maintenance-sat14-adl',
    ]


def suite_ipc14_sat_strips():
    return [
        'barman-sat14-strips',
        'childsnack-sat14-strips',
        'floortile-sat14-strips',
        'ged-sat14-strips',
        'hiking-sat14-strips',
        'openstacks-sat14-strips',
        'parking-sat14-strips',
        'tetris-sat14-strips',
        'thoughtful-sat14-strips',
        'transport-sat14-strips',
        'visitall-sat14-strips',
    ]


def suite_ipc14_sat():
    return sorted(suite_ipc14_sat_adl() + suite_ipc14_sat_strips())


def suite_ipc14():
    return sorted(set(
        suite_ipc14_agl() + suite_ipc14_mco() +
        suite_ipc14_opt() + suite_ipc14_sat()))


def suite_ipc18_opt_adl():
    return [
        'caldera-opt18-adl',
        'caldera-split-opt18-adl',
        'nurikabe-opt18-adl',
        'settlers-opt18-adl',
    ]


def suite_ipc18_opt_strips():
    return [
        'agricola-opt18-strips',
        # Conditional effects are removed by the translator.
        'data-network-opt18-strips',
        'organic-synthesis-opt18-strips',
        # Conditional effects are removed by the translator.
        'organic-synthesis-split-opt18-strips',
        'petri-net-alignment-opt18-strips',
        'snake-opt18-strips',
        'spider-opt18-strips',
        'termes-opt18-strips',
    ]


def suite_ipc18_opt():
    return sorted(suite_ipc18_opt_adl() + suite_ipc18_opt_strips())


def suite_ipc18_sat_adl():
    return [
        'caldera-sat18-adl',
        'caldera-split-sat18-adl',
        'flashfill-sat18-adl',
        'nurikabe-sat18-adl',
        'settlers-sat18-adl',
    ]


def suite_ipc18_sat_strips():
    return [
        'agricola-sat18-strips',
        # Conditional effects are removed by the translator.
        'data-network-sat18-strips',
        'organic-synthesis-sat18-strips',
        # Conditional effects are removed by the translator.
        'organic-synthesis-split-sat18-strips',
        'snake-sat18-strips',
        'spider-sat18-strips',
        'termes-sat18-strips',
    ]

def selected_domains():
    return [
        "barman-sat11-strips", 
        "elevators-opt11-strips", 
        "floortile-opt11-strips",
        "nomystery-sat11-strips", 
        "openstacks-opt11-strips", 
        "parcprinter-sat11-strips",
        "parking-sat11-strips", 
        "pegsol-opt11-strips", 
        "scanalyzer-sat11-strips",
        "sokoban-sat11-strips", 
        "tidybot-sat11-strips", 
        "visitall-sat11-strips",
        "woodworking-sat11-strips",
    ]

def ip_sat():
    return [
	"airport:p01-airport1-p1.pddl",
    "airport:p02-airport1-p1.pddl",
    "airport:p03-airport1-p2.pddl",
    "airport:p04-airport2-p1.pddl",
    "airport:p05-airport2-p1.pddl",
    "airport:p06-airport2-p2.pddl",
    "airport:p07-airport2-p2.pddl",
    "airport:p10-airport3-p1.pddl",
    "airport:p11-airport3-p1.pddl",
    "airport:p12-airport3-p2.pddl",
    "airport:p13-airport3-p2.pddl",

    "blocks:probBLOCKS-4-0.pddl",
    "blocks:probBLOCKS-4-1.pddl",
    "blocks:probBLOCKS-4-2.pddl",
    "blocks:probBLOCKS-5-0.pddl",
    "blocks:probBLOCKS-5-1.pddl",
    "blocks:probBLOCKS-5-2.pddl",
    "blocks:probBLOCKS-6-0.pddl",
    "blocks:probBLOCKS-6-1.pddl",
    "blocks:probBLOCKS-6-2.pddl",
    "blocks:probBLOCKS-7-0.pddl",
    "blocks:probBLOCKS-7-1.pddl",
    "blocks:probBLOCKS-7-2.pddl",
    "blocks:probBLOCKS-8-0.pddl",
    "blocks:probBLOCKS-8-1.pddl",
    "blocks:probBLOCKS-8-2.pddl",
    "blocks:probBLOCKS-9-0.pddl",
    "blocks:probBLOCKS-9-1.pddl",
    "blocks:probBLOCKS-9-2.pddl",
    "blocks:probBLOCKS-10-0.pddl",
    "blocks:probBLOCKS-10-1.pddl",
    "blocks:probBLOCKS-10-2.pddl",
    "blocks:probBLOCKS-11-0.pddl",
    "blocks:probBLOCKS-11-1.pddl",
    "blocks:probBLOCKS-11-2.pddl",

    "depot:p01.pddl",
    "depot:p02.pddl",
    "depot:p03.pddl",
    "depot:p04.pddl",
    "depot:p07.pddl",
    "depot:p13.pddl",

    "driverlog:p01.pddl",
    "driverlog:p02.pddl",
    "driverlog:p03.pddl",
    "driverlog:p04.pddl",
    "driverlog:p05.pddl",
    "driverlog:p06.pddl",
    "driverlog:p07.pddl",
    "driverlog:p08.pddl",
    "driverlog:p09.pddl",
    "driverlog:p10.pddl",
    "driverlog:p11.pddl",
    "driverlog:p12.pddl",
    "driverlog:p13.pddl",
    "driverlog:p14.pddl",

    "elevators-sat08-strips:p01.pddl",
    "elevators-sat08-strips:p02.pddl",
    "elevators-sat08-strips:p03.pddl",
    "elevators-sat08-strips:p04.pddl",
    "elevators-sat08-strips:p05.pddl",
    "elevators-sat08-strips:p06.pddl",

    "freecell:p01.pddl",
    "freecell:p02.pddl",
    "freecell:p03.pddl",
    "freecell:p04.pddl",
    "freecell:probfreecell-2-1.pddl",
    "freecell:probfreecell-2-2.pddl",
    "freecell:probfreecell-2-3.pddl",
    "freecell:probfreecell-2-4.pddl",
    "freecell:probfreecell-2-5.pddl",
    "freecell:probfreecell-3-1.pddl",
    "freecell:probfreecell-3-2.pddl",
    "freecell:probfreecell-3-3.pddl",
    "freecell:probfreecell-3-4.pddl",
    "freecell:probfreecell-3-5.pddl",
    "freecell:probfreecell-4-1.pddl",
    "freecell:probfreecell-4-4.pddl",

    "grid:prob01.pddl",
    "grid:prob02.pddl",

    "gripper:prob01.pddl",
    "gripper:prob02.pddl",
    "gripper:prob03.pddl",
    "gripper:prob04.pddl",
    "gripper:prob05.pddl",
    "gripper:prob06.pddl",
    "gripper:prob07.pddl",
    "gripper:prob08.pddl",
    "gripper:prob09.pddl",
    "gripper:prob10.pddl",
    "gripper:prob11.pddl",
    "gripper:prob12.pddl",
    "gripper:prob13.pddl",
    "gripper:prob14.pddl",

    "hiking-sat14-strips:ptesting-1-2-7.pddl",
    "hiking-sat14-strips:ptesting-1-2-8.pddl",
    "hiking-sat14-strips:ptesting-2-2-6.pddl",
    "hiking-sat14-strips:ptesting-2-2-7.pddl",
    "hiking-sat14-strips:ptesting-2-2-8.pddl",
    "hiking-sat14-strips:ptesting-2-3-6.pddl",
    "hiking-sat14-strips:ptesting-2-3-7.pddl",
    "hiking-sat14-strips:ptesting-2-4-5.pddl",
    "hiking-sat14-strips:ptesting-2-4-6.pddl",

    "logistics00",

    "logistics98:prob01.pddl",
    "logistics98:prob02.pddl",
    "logistics98:prob05.pddl",
    "logistics98:prob31.pddl",
    "logistics98:prob32.pddl",
    "logistics98:prob33.pddl",
    "logistics98:prob34.pddl",
    "logistics98:prob35.pddl",

    "movie",
    
    "mprime:prob01.pddl",
    "mprime:prob03.pddl",
    "mprime:prob04.pddl",
    "mprime:prob07.pddl",
    "mprime:prob11.pddl",
    "mprime:prob25.pddl",
    "mprime:prob27.pddl",
    "mprime:prob28.pddl",
    "mprime:prob29.pddl",
    "mprime:prob32.pddl",

    "mystery:prob01.pddl",
    "mystery:prob03.pddl",
    "mystery:prob11.pddl",
    "mystery:prob25.pddl",
    "mystery:prob27.pddl",
    "mystery:prob28.pddl",
    "mystery:prob29.pddl",

    "nomystery-sat11-strips:p01.pddl",
    "nomystery-sat11-strips:p02.pddl",
    "nomystery-sat11-strips:p03.pddl",
    "nomystery-sat11-strips:p04.pddl",
    "nomystery-sat11-strips:p05.pddl",
    "nomystery-sat11-strips:p06.pddl",
    "nomystery-sat11-strips:p08.pddl",
    "nomystery-sat11-strips:p09.pddl",
    "nomystery-sat11-strips:p10.pddl",
    "nomystery-sat11-strips:p11.pddl",
    "nomystery-sat11-strips:p12.pddl",
    "nomystery-sat11-strips:p13.pddl",
    "nomystery-sat11-strips:p14.pddl",
    "nomystery-sat11-strips:p15.pddl",
    "nomystery-sat11-strips:p16.pddl",

    "parcprinter-08-strips:p02.pddl",
    "parcprinter-08-strips:p03.pddl",
    "parcprinter-08-strips:p05.pddl",
    "parcprinter-08-strips:p06.pddl",
    "parcprinter-08-strips:p11.pddl",
    "parcprinter-08-strips:p12.pddl",
    "parcprinter-08-strips:p13.pddl",
    "parcprinter-08-strips:p14.pddl",
    "parcprinter-08-strips:p21.pddl",
    "parcprinter-08-strips:p22.pddl",
    "parcprinter-08-strips:p23.pddl",
    "parcprinter-08-strips:p24.pddl",
    "parcprinter-08-strips:p25.pddl",
    "parcprinter-08-strips:p26.pddl",
    "parcprinter-08-strips:p27.pddl",
    "parcprinter-08-strips:p28.pddl",
    "parcprinter-08-strips:p29.pddl",
    "parcprinter-08-strips:p30.pddl",

    "parcprinter-sat11-strips:p05.pddl",
    "parcprinter-sat11-strips:p06.pddl",
    "parcprinter-sat11-strips:p08.pddl",
    "parcprinter-sat11-strips:p09.pddl",
    "parcprinter-sat11-strips:p10.pddl",
    "parcprinter-sat11-strips:p17.pddl",
    "parcprinter-sat11-strips:p18.pddl",
    "parcprinter-sat11-strips:p19.pddl",

    "pathways:p01.pddl",
    "pathways:p02.pddl",
    "pathways:p03.pddl",
    "pathways:p04.pddl",
    "pathways:p05.pddl",

    "pegsol-08-strips:p01.pddl",
    "pegsol-08-strips:p02.pddl",
    "pegsol-08-strips:p03.pddl",
    "pegsol-08-strips:p04.pddl",
    "pegsol-08-strips:p05.pddl",
    "pegsol-08-strips:p06.pddl",
    "pegsol-08-strips:p07.pddl",
    "pegsol-08-strips:p08.pddl",
    "pegsol-08-strips:p09.pddl",
    "pegsol-08-strips:p10.pddl",
    "pegsol-08-strips:p11.pddl",
    "pegsol-08-strips:p12.pddl",
    "pegsol-08-strips:p13.pddl",
    "pegsol-08-strips:p14.pddl",
    "pegsol-08-strips:p15.pddl",
    "pegsol-08-strips:p16.pddl",
    "pegsol-08-strips:p18.pddl",
    "pegsol-08-strips:p19.pddl",
    "pegsol-08-strips:p20.pddl",
    "pegsol-08-strips:p21.pddl",
    "pegsol-08-strips:p22.pddl",
    "pegsol-08-strips:p23.pddl",
    "pegsol-08-strips:p24.pddl",
    "pegsol-08-strips:p25.pddl",

    "pegsol-sat11-strips:p02.pddl",
    "pegsol-sat11-strips:p03.pddl",
    "pegsol-sat11-strips:p04.pddl",
    "pegsol-sat11-strips:p06.pddl",
    "pegsol-sat11-strips:p07.pddl",
    "pegsol-sat11-strips:p08.pddl",
    "pegsol-sat11-strips:p09.pddl",
    "pegsol-sat11-strips:p10.pddl",
    "pegsol-sat11-strips:p11.pddl",
    "pegsol-sat11-strips:p12.pddl",
    "pegsol-sat11-strips:p13.pddl",
    "pegsol-sat11-strips:p14.pddl",
    "pegsol-sat11-strips:p15.pddl",

    "pipesworld-notankage:p01-net1-b6-g2.pddl",
    "pipesworld-notankage:p02-net1-b6-g4.pddl",
    "pipesworld-notankage:p03-net1-b8-g3.pddl",
    "pipesworld-notankage:p04-net1-b8-g5.pddl",
    "pipesworld-notankage:p05-net1-b10-g4.pddl",
    "pipesworld-notankage:p06-net1-b10-g6.pddl",
    "pipesworld-notankage:p07-net1-b12-g5.pddl",
    "pipesworld-notankage:p13-net2-b12-g3.pddl",

    "pipesworld-tankage:p01-net1-b6-g2-t50.pddl",
    "pipesworld-tankage:p02-net1-b6-g4-t50.pddl",
    "pipesworld-tankage:p03-net1-b8-g3-t80.pddl",
    "pipesworld-tankage:p04-net1-b8-g5-t80.pddl",
    "pipesworld-tankage:p05-net1-b10-g4-t50.pddl",
    "pipesworld-tankage:p06-net1-b10-g6-t50.pddl",

    "psr-small:p01-s2-n1-l2-f50.pddl",
    "psr-small:p02-s5-n1-l3-f30.pddl",
    "psr-small:p03-s7-n1-l3-f70.pddl",
    "psr-small:p04-s8-n1-l4-f10.pddl",
    "psr-small:p05-s9-n1-l4-f30.pddl",
    "psr-small:p06-s10-n1-l4-f50.pddl",
    "psr-small:p07-s11-n1-l4-f70.pddl",
    "psr-small:p08-s12-n1-l5-f10.pddl",
    "psr-small:p09-s13-n1-l5-f30.pddl",
    "psr-small:p10-s17-n2-l2-f30.pddl",
    "psr-small:p11-s18-n2-l2-f50.pddl",
    "psr-small:p12-s21-n2-l3-f30.pddl",
    "psr-small:p13-s22-n2-l3-f50.pddl",
    "psr-small:p14-s23-n2-l3-f70.pddl",
    "psr-small:p15-s24-n2-l4-f10.pddl",
    "psr-small:p16-s29-n2-l5-f30.pddl",
    "psr-small:p17-s30-n2-l5-f50.pddl",
    "psr-small:p18-s31-n2-l5-f70.pddl",
    "psr-small:p19-s33-n3-l2-f30.pddl",
    "psr-small:p20-s34-n3-l2-f50.pddl",
    "psr-small:p21-s35-n3-l2-f70.pddl",
    "psr-small:p22-s37-n3-l3-f30.pddl",
    "psr-small:p23-s38-n3-l3-f50.pddl",
    "psr-small:p24-s39-n3-l3-f70.pddl",
    "psr-small:p25-s40-n3-l4-f10.pddl",
    "psr-small:p26-s41-n3-l4-f30.pddl",
    "psr-small:p27-s42-n3-l4-f50.pddl",
    "psr-small:p28-s43-n3-l4-f70.pddl",
    "psr-small:p29-s45-n3-l5-f30.pddl",
    "psr-small:p30-s46-n3-l5-f50.pddl",
    "psr-small:p31-s49-n4-l2-f30.pddl",
    "psr-small:p32-s50-n4-l2-f50.pddl",
    "psr-small:p33-s51-n4-l2-f70.pddl",
    "psr-small:p34-s55-n4-l3-f70.pddl",
    "psr-small:p35-s57-n5-l2-f30.pddl",
    "psr-small:p36-s65-n6-l2-f30.pddl",
    "psr-small:p37-s67-n6-l2-f70.pddl",
    "psr-small:p38-s78-n3-l3-f50.pddl",
    "psr-small:p39-s79-n3-l3-f70.pddl",
    "psr-small:p41-s81-n3-l4-f30.pddl",
    "psr-small:p42-s82-n3-l4-f50.pddl",
    "psr-small:p43-s83-n3-l4-f70.pddl",
    "psr-small:p44-s89-n4-l2-f30.pddl",
    "psr-small:p45-s94-n4-l3-f50.pddl",
    "psr-small:p46-s97-n5-l2-f30.pddl",
    "psr-small:p47-s98-n5-l2-f50.pddl",
    "psr-small:p48-s101-n5-l3-f30.pddl",
    "psr-small:p49-s105-n6-l2-f30.pddl",
    "psr-small:p50-s107-n6-l2-f70.pddl",

    "rovers:p01.pddl",
    "rovers:p02.pddl",
    "rovers:p03.pddl",
    "rovers:p04.pddl",
    "rovers:p05.pddl",
    "rovers:p06.pddl",
    "rovers:p07.pddl",
    "rovers:p08.pddl",
    "rovers:p10.pddl",
    "rovers:p12.pddl",
    "rovers:p16.pddl",	

    "satellite:p01-pfile1.pddl",
    "satellite:p02-pfile2.pddl",
    "satellite:p03-pfile3.pddl",
    "satellite:p04-pfile4.pddl",
    "satellite:p05-pfile5.pddl",
    "satellite:p06-pfile6.pddl",
    "satellite:p07-pfile7.pddl",

    "scanalyzer-08-strips:p01.pddl",
    "scanalyzer-08-strips:p02.pddl",
    "scanalyzer-08-strips:p03.pddl",
    "scanalyzer-08-strips:p04.pddl",
    "scanalyzer-08-strips:p05.pddl",
    "scanalyzer-08-strips:p07.pddl",
    "scanalyzer-08-strips:p22.pddl",
    "scanalyzer-08-strips:p23.pddl",
    "scanalyzer-08-strips:p24.pddl",

    "sokoban-sat08-strips:p01.pddl",
    "sokoban-sat08-strips:p02.pddl",
    "sokoban-sat08-strips:p03.pddl",
    "sokoban-sat08-strips:p05.pddl",
    "sokoban-sat08-strips:p07.pddl",
    "sokoban-sat08-strips:p10.pddl",

    "sokoban-sat11-strips:p09.pddl",

    "storage:p01.pddl",
    "storage:p02.pddl",
    "storage:p03.pddl",
    "storage:p04.pddl",
    "storage:p05.pddl",
    "storage:p06.pddl",
    "storage:p07.pddl",
    "storage:p08.pddl",
    "storage:p09.pddl",
    "storage:p10.pddl",
    "storage:p11.pddl",
    "storage:p12.pddl",
    "storage:p13.pddl",
    "storage:p14.pddl",
    "storage:p15.pddl",

    "termes-sat18-strips:p04.pddl",

    "thoughtful-sat14-strips:bootstrap-typed-01.pddl",
    "thoughtful-sat14-strips:bootstrap-typed-02.pddl",
    "thoughtful-sat14-strips:bootstrap-typed-03.pddl",
    "thoughtful-sat14-strips:bootstrap-typed-04.pddl",
    "thoughtful-sat14-strips:bootstrap-typed-05.pddl",

    "tpp:p01.pddl",
    "tpp:p02.pddl",
    "tpp:p03.pddl",
    "tpp:p04.pddl",
    "tpp:p05.pddl",
    "tpp:p06.pddl",
    "tpp:p07.pddl",
    "tpp:p08.pddl",
    "tpp:p09.pddl",
    "tpp:p10.pddl",
    "tpp:p11.pddl",
    "tpp:p12.pddl",
    "tpp:p13.pddl",

    "transport-sat08-strips:p01.pddl",
    "transport-sat08-strips:p02.pddl",
    "transport-sat08-strips:p03.pddl",
    "transport-sat08-strips:p11.pddl",
    "transport-sat08-strips:p12.pddl",
    "transport-sat08-strips:p13.pddl",
    "transport-sat08-strips:p21.pddl",
    "transport-sat08-strips:p22.pddl",
    "transport-sat08-strips:p23.pddl"

    "trucks-strips:p01.pddl",
    "trucks-strips:p02.pddl",
    "trucks-strips:p03.pddl",
    "trucks-strips:p04.pddl",
    "trucks-strips:p05.pddl",
    "trucks-strips:p06.pddl",
    "trucks-strips:p07.pddl",
    "trucks-strips:p08.pddl",
    "trucks-strips:p09.pddl",
    "trucks-strips:p10.pddl",
    "trucks-strips:p14.pddl",

    "woodworking-sat08-strips:p01.pddl",
    "woodworking-sat08-strips:p02.pddl",
    "woodworking-sat08-strips:p11.pddl",
    "woodworking-sat08-strips:p12.pddl",
    "woodworking-sat08-strips:p21.pddl",
    "woodworking-sat08-strips:p22.pddl",
    "woodworking-sat08-strips:p23.pddl",

    "woodworking-sat11-strips:p10.pddl",

    "zenotravel:p01.pddl",
    "zenotravel:p02.pddl",
    "zenotravel:p03.pddl",
    "zenotravel:p04.pddl",
    "zenotravel:p05.pddl",
    "zenotravel:p06.pddl",
    "zenotravel:p07.pddl",
    "zenotravel:p08.pddl",
    "zenotravel:p09.pddl",
    "zenotravel:p10.pddl",
    "zenotravel:p11.pddl",
    "zenotravel:p12.pddl",
    "zenotravel:p13.pddl",
]

def hstar_instances():
	return [
    'blocks:probBLOCKS-4-0.pddl',
    'blocks:probBLOCKS-4-1.pddl',
    'blocks:probBLOCKS-4-2.pddl',
    'blocks:probBLOCKS-5-0.pddl',
    'blocks:probBLOCKS-5-1.pddl',
    'blocks:probBLOCKS-5-2.pddl',
    'blocks:probBLOCKS-6-0.pddl',
    'blocks:probBLOCKS-6-1.pddl',
    'blocks:probBLOCKS-6-2.pddl',

    'depot:p01.pddl',

    'driverlog:p01.pddl',
    'driverlog:p02.pddl',
    'driverlog:p03.pddl',
    'driverlog:p04.pddl',
    'driverlog:p05.pddl',

    'elevators-opt08-strips:p03.pddl',
    'elevators-opt08-strips:p11.pddl',

    'elevators-opt11-strips:p01.pddl',
    'elevators-opt11-strips:p04.pddl',

    'ged-opt14-strips:d-1-2.pddl',
    'ged-opt14-strips:d-1-4.pddl',
    'ged-opt14-strips:d-2-1.pddl',

    'gripper:prob01.pddl',
    'gripper:prob02.pddl',
    'gripper:prob03.pddl',
    'gripper:prob04.pddl',
    'gripper:prob05.pddl',

    'hiking-opt14-strips:ptesting-1-2-3.pddl',
    'hiking-opt14-strips:ptesting-1-2-4.pddl',
    'hiking-opt14-strips:ptesting-1-2-5.pddl',
    'hiking-opt14-strips:ptesting-1-2-7.pddl',
    'hiking-opt14-strips:ptesting-1-2-8.pddl',
    'hiking-opt14-strips:ptesting-2-2-3.pddl',
    'hiking-opt14-strips:ptesting-2-2-4.pddl',
    'hiking-opt14-strips:ptesting-2-2-5.pddl',
    'hiking-opt14-strips:ptesting-2-2-6.pddl',
    'hiking-opt14-strips:ptesting-2-3-4.pddl',
    'hiking-opt14-strips:ptesting-2-3-5.pddl',
    'hiking-opt14-strips:ptesting-2-4-3.pddl',
    'hiking-opt14-strips:ptesting-2-4-4.pddl',

    'logistics00:probLOGISTICS-4-0.pddl',
    'logistics00:probLOGISTICS-4-1.pddl',
    'logistics00:probLOGISTICS-4-2.pddl',
    'logistics00:probLOGISTICS-5-0.pddl',
    'logistics00:probLOGISTICS-5-1.pddl',
    'logistics00:probLOGISTICS-5-2.pddl',
    'logistics00:probLOGISTICS-6-0.pddl',
    'logistics00:probLOGISTICS-6-1.pddl',
    'logistics00:probLOGISTICS-6-2.pddl',
    'logistics00:probLOGISTICS-6-9.pddl',
    'logistics00:probLOGISTICS-7-0.pddl',
    'logistics00:probLOGISTICS-7-1.pddl',

    'logistics98:prob31.pddl',
    'logistics98:prob32.pddl',

    'miconic:s1-0.pddl',
    'miconic:s1-1.pddl',
    'miconic:s1-2.pddl',
    'miconic:s1-3.pddl',
    'miconic:s1-4.pddl',
    'miconic:s2-0.pddl',
    'miconic:s2-1.pddl',
    'miconic:s2-2.pddl',
    'miconic:s2-3.pddl',
    'miconic:s2-4.pddl',
    'miconic:s3-0.pddl',
    'miconic:s3-1.pddl',
    'miconic:s3-2.pddl',
    'miconic:s3-3.pddl',
    'miconic:s3-4.pddl',
    'miconic:s4-0.pddl',
    'miconic:s4-1.pddl',
    'miconic:s4-2.pddl',
    'miconic:s4-3.pddl',
    'miconic:s4-4.pddl',
    'miconic:s5-0.pddl',
    'miconic:s5-1.pddl',
    'miconic:s5-2.pddl',
    'miconic:s5-3.pddl',
    'miconic:s5-4.pddl',
    'miconic:s6-0.pddl',
    'miconic:s6-1.pddl',
    'miconic:s6-2.pddl',
    'miconic:s6-3.pddl',
    'miconic:s6-4.pddl',
    'miconic:s7-0.pddl',
    'miconic:s7-1.pddl',
    'miconic:s7-2.pddl',
    'miconic:s7-3.pddl',
    'miconic:s7-4.pddl',
    'miconic:s8-0.pddl',
    'miconic:s8-1.pddl',
    'miconic:s8-2.pddl',
    'miconic:s8-3.pddl',
    'miconic:s8-4.pddl',
    'miconic:s9-0.pddl',
    'miconic:s9-1.pddl',
    'miconic:s9-2.pddl',
    'miconic:s9-3.pddl',
    'miconic:s9-4.pddl',
    'miconic:s10-0.pddl',
    'miconic:s10-1.pddl',
    'miconic:s10-2.pddl',
    'miconic:s10-3.pddl',
    'miconic:s10-4.pddl',
    'miconic:s11-0.pddl',
    'miconic:s11-1.pddl',
    'miconic:s11-2.pddl',
    'miconic:s11-3.pddl',
    'miconic:s11-4.pddl',

    'movie:prob01.pddl',
    'movie:prob02.pddl',
    'movie:prob03.pddl',
    'movie:prob04.pddl',
    'movie:prob05.pddl',
    'movie:prob06.pddl',
    'movie:prob07.pddl',
    'movie:prob08.pddl',
    'movie:prob09.pddl',
    'movie:prob10.pddl',
    'movie:prob11.pddl',
    'movie:prob12.pddl',
    'movie:prob13.pddl',
    'movie:prob14.pddl',
    'movie:prob15.pddl',
    'movie:prob16.pddl',
    'movie:prob17.pddl',
    'movie:prob18.pddl',
    'movie:prob19.pddl',
    'movie:prob20.pddl',
    'movie:prob21.pddl',
    'movie:prob22.pddl',
    'movie:prob23.pddl',
    'movie:prob24.pddl',
    'movie:prob25.pddl',
    'movie:prob26.pddl',
    'movie:prob27.pddl',
    'movie:prob28.pddl',
    'movie:prob29.pddl',
    'movie:prob30.pddl',

    'mprime:prob25.pddl',

    'mystery:prob01.pddl',
    'mystery:prob25.pddl',

    'nomystery-opt11-strips:p01.pddl',
    'nomystery-opt11-strips:p02.pddl',
    'nomystery-opt11-strips:p03.pddl',
    'nomystery-opt11-strips:p04.pddl',
    'nomystery-opt11-strips:p11.pddl',
    'nomystery-opt11-strips:p12.pddl',
    'nomystery-opt11-strips:p13.pddl',
    'nomystery-opt11-strips:p14.pddl',

    'openstacks-opt08-strips:p01.pddl',
    'openstacks-opt08-strips:p02.pddl',
    'openstacks-opt08-strips:p03.pddl',
    'openstacks-opt08-strips:p04.pddl',
    'openstacks-opt08-strips:p05.pddl',

    'openstacks-strips:p01.pddl',
    'openstacks-strips:p02.pddl',
    'openstacks-strips:p03.pddl',
    'openstacks-strips:p04.pddl',
    'openstacks-strips:p05.pddl',

    'organic-synthesis-opt18-strips:p01.pddl',
    'organic-synthesis-opt18-strips:p02.pddl',
    'organic-synthesis-opt18-strips:p03.pddl',
    'organic-synthesis-opt18-strips:p07.pddl',

    'parcprinter-08-strips:p01.pddl',
    'parcprinter-08-strips:p11.pddl',
    'parcprinter-08-strips:p21.pddl',

    'pathways:p01.pddl',

    'pegsol-08-strips:p01.pddl',
    'pegsol-08-strips:p05.pddl',

    'psr-small:p01-s2-n1-l2-f50.pddl',
    'psr-small:p02-s5-n1-l3-f30.pddl',
    'psr-small:p03-s7-n1-l3-f70.pddl',
    'psr-small:p04-s8-n1-l4-f10.pddl',
    'psr-small:p05-s9-n1-l4-f30.pddl',
    'psr-small:p06-s10-n1-l4-f50.pddl',
    'psr-small:p07-s11-n1-l4-f70.pddl',
    'psr-small:p08-s12-n1-l5-f10.pddl',
    'psr-small:p09-s13-n1-l5-f30.pddl',
    'psr-small:p10-s17-n2-l2-f30.pddl',
    'psr-small:p11-s18-n2-l2-f50.pddl',
    'psr-small:p12-s21-n2-l3-f30.pddl',
    'psr-small:p13-s22-n2-l3-f50.pddl',
    'psr-small:p14-s23-n2-l3-f70.pddl',
    'psr-small:p15-s24-n2-l4-f10.pddl',
    'psr-small:p16-s29-n2-l5-f30.pddl',
    'psr-small:p17-s30-n2-l5-f50.pddl',
    'psr-small:p18-s31-n2-l5-f70.pddl',
    'psr-small:p19-s33-n3-l2-f30.pddl',
    'psr-small:p20-s34-n3-l2-f50.pddl',
    'psr-small:p21-s35-n3-l2-f70.pddl',
    'psr-small:p22-s37-n3-l3-f30.pddl',
    'psr-small:p23-s38-n3-l3-f50.pddl',
    'psr-small:p24-s39-n3-l3-f70.pddl',
    'psr-small:p26-s41-n3-l4-f30.pddl',
    'psr-small:p27-s42-n3-l4-f50.pddl',
    'psr-small:p28-s43-n3-l4-f70.pddl',
    'psr-small:p29-s45-n3-l5-f30.pddl',
    'psr-small:p30-s46-n3-l5-f50.pddl',
    'psr-small:p32-s50-n4-l2-f50.pddl',
    'psr-small:p33-s51-n4-l2-f70.pddl',
    'psr-small:p34-s55-n4-l3-f70.pddl',
    'psr-small:p37-s67-n6-l2-f70.pddl',
    'psr-small:p38-s78-n3-l3-f50.pddl',
    'psr-small:p39-s79-n3-l3-f70.pddl',
    'psr-small:p41-s81-n3-l4-f30.pddl',
    'psr-small:p42-s82-n3-l4-f50.pddl',
    'psr-small:p43-s83-n3-l4-f70.pddl',
    'psr-small:p44-s89-n4-l2-f30.pddl',
    'psr-small:p45-s94-n4-l3-f50.pddl',
    'psr-small:p47-s98-n5-l2-f50.pddl',
    'psr-small:p50-s107-n6-l2-f70.pddl',

    'rovers:p01.pddl',
    'rovers:p02.pddl',
    'rovers:p03.pddl',
    'rovers:p04.pddl',
    'rovers:p05.pddl',

    'satellite:p01-pfile1.pddl',
    'satellite:p02-pfile2.pddl',
    'satellite:p03-pfile3.pddl',
    'satellite:p04-pfile4.pddl',

    'scanalyzer-08-strips:p01.pddl',
    'scanalyzer-08-strips:p02.pddl',
    'scanalyzer-08-strips:p03.pddl',
    'scanalyzer-08-strips:p22.pddl',
    'scanalyzer-08-strips:p23.pddl',
    'scanalyzer-08-strips:p24.pddl',

    'scanalyzer-opt11-strips:p01.pddl',
    'scanalyzer-opt11-strips:p02.pddl',
    'scanalyzer-opt11-strips:p03.pddl',

    'storage:p01.pddl',
    'storage:p02.pddl',
    'storage:p03.pddl',
    'storage:p04.pddl',
    'storage:p05.pddl',
    'storage:p06.pddl',
    'storage:p07.pddl',

    'termes-opt18-strips:p01.pddl',
    'termes-opt18-strips:p02.pddl',
    'termes-opt18-strips:p11.pddl',
    'termes-opt18-strips:p12.pddl',
    'termes-opt18-strips:p17.pddl',
    'termes-opt18-strips:p18.pddl',

    'tpp:p01.pddl',
    'tpp:p02.pddl',
    'tpp:p03.pddl',
    'tpp:p04.pddl',
    'tpp:p05.pddl',

    'transport-opt08-strips:p01.pddl',
    'transport-opt08-strips:p02.pddl',
    'transport-opt08-strips:p03.pddl',
    'transport-opt08-strips:p11.pddl',
    'transport-opt08-strips:p13.pddl',
    'transport-opt08-strips:p21.pddl',
    'transport-opt08-strips:p23.pddl',

    'transport-opt11-strips:p01.pddl',
    'transport-opt11-strips:p02.pddl',
    'transport-opt11-strips:p04.pddl',

    'transport-opt14-strips:p07.pddl',

    'trucks-strips:p01.pddl',
    'trucks-strips:p02.pddl',
    'trucks-strips:p03.pddl',

    'visitall-opt11-strips:problem02-full.pddl',
    'visitall-opt11-strips:problem02-half.pddl',
    'visitall-opt11-strips:problem03-full.pddl',
    'visitall-opt11-strips:problem03-half.pddl',
    'visitall-opt11-strips:problem04-full.pddl',
    'visitall-opt11-strips:problem04-half.pddl',
    'visitall-opt11-strips:problem05-half.pddl',
    'visitall-opt11-strips:problem06-half.pddl',

    'visitall-opt14-strips:p-05-5.pddl',
    'visitall-opt14-strips:p-05-6.pddl',

    'woodworking-opt08-strips:p21.pddl',

    'zenotravel:p01.pddl',
    'zenotravel:p02.pddl',
    'zenotravel:p03.pddl',
    'zenotravel:p04.pddl',
    'zenotravel:p05.pddl',
    'zenotravel:p06.pddl',
    'zenotravel:p07.pddl',
]

def suite_ipc18_sat():
    return sorted(suite_ipc18_sat_adl() + suite_ipc18_sat_strips())


def suite_ipc18():
    return sorted(set(
        suite_ipc18_opt() + suite_ipc18_sat()))


def suite_unsolvable():
    return sorted(
        ['mystery:prob%02d.pddl' % index
         for index in [4, 5, 7, 8, 12, 16, 18, 21, 22, 23, 24]] +
        ['miconic-fulladl:f21-3.pddl', 'miconic-fulladl:f30-2.pddl'])


def suite_optimal_adl():
    return sorted(
        suite_ipc98_to_ipc04_adl() + suite_ipc06_adl() +
        suite_ipc08_opt_adl() + suite_ipc14_opt_adl() +
        suite_ipc18_opt_adl())


def suite_optimal_strips():
    return sorted(
        suite_ipc98_to_ipc04_strips() + suite_ipc06_strips() +
        suite_ipc06_strips_compilations() + suite_ipc08_opt_strips() +
        suite_ipc11_opt() + suite_ipc14_opt_strips() +
        suite_ipc18_opt_strips())


def suite_optimal():
    return sorted(suite_optimal_adl() + list(
        set(suite_optimal_strips()) - set(suite_ipc06_strips_compilations())))


def suite_satisficing_adl():
    return sorted(
        suite_ipc98_to_ipc04_adl() + suite_ipc06_adl() +
        suite_ipc08_sat_adl() + suite_ipc14_sat_adl() +
        suite_ipc18_sat_adl())


def suite_satisficing_strips():
    return sorted(
        suite_ipc98_to_ipc04_strips() + suite_ipc06_strips() +
        suite_ipc06_strips_compilations() + suite_ipc08_sat_strips() +
        suite_ipc11_sat() + suite_ipc14_sat_strips() +
        suite_ipc18_sat_strips())


def suite_satisficing():
    return sorted(suite_satisficing_adl() + suite_satisficing_strips())


def suite_all():
    return sorted(
        suite_ipc98_to_ipc04() + suite_ipc06() +
        suite_ipc06_strips_compilations() + suite_ipc08() +
        suite_ipc11() + suite_ipc14() + suite_ipc18() +
        suite_alternative_formulations())


# Applies to domains where all actions cost 1.
TAG_HAS_ONLY_UNIT_COST_ACTIONS = 'unit-cost'
# Applies to domains with at least one action of cost 0.
TAG_HAS_ZERO_COST_ACTIONS = 'zero-cost'
# Applies to domains with action costs of 0 or 1.
TAG_HAS_ONLY_BINARY_COST_ACTIONS = 'binary-cost'


TAGS = [
    TAG_HAS_ONLY_UNIT_COST_ACTIONS,
    TAG_HAS_ZERO_COST_ACTIONS,
    TAG_HAS_ONLY_BINARY_COST_ACTIONS,
]


IMPLIED_TAGS = {
    TAG_HAS_ONLY_BINARY_COST_ACTIONS: [TAG_HAS_ZERO_COST_ACTIONS],
}


DOMAIN_TO_TAGS = {
    'agricola-opt18-strips': [],
    'agricola-sat18-strips': [],
    'airport': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'airport-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'assembly': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'barman-mco14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'barman-opt11-strips': [],
    'barman-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'barman-sat11-strips': [],
    'barman-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'blocks': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'caldera-opt18-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'caldera-sat18-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'caldera-split-opt18-adl': [],
    'caldera-split-sat18-adl': [],
    'cavediving-14-adl': [],
    'childsnack-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'childsnack-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'citycar-opt14-adl': [],
    'citycar-sat14-adl': [],
    'data-network-opt18-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'data-network-sat18-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'depot': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'driverlog': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'elevators-opt08-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'elevators-opt11-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'elevators-sat08-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'elevators-sat11-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'flashfill-sat18-adl': [TAG_HAS_ZERO_COST_ACTIONS],
    'floortile-opt11-strips': [],
    'floortile-opt14-strips': [],
    'floortile-sat11-strips': [],
    'floortile-sat14-strips': [],
    'freecell': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'ged-opt14-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'ged-sat14-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'grid': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'gripper': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'hiking-agl14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'hiking-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'hiking-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'logistics00': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'logistics98': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'maintenance-opt14-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'maintenance-sat14-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'miconic': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'miconic-fulladl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'miconic-simpleadl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'movie': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'mprime': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'mystery': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'nomystery-opt11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'nomystery-sat11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'nurikabe-opt18-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'nurikabe-sat18-adl': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'openstacks': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'openstacks-agl14-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-opt08-adl': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-opt08-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-opt11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-opt14-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-sat08-adl': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-sat08-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-sat11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-sat14-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'openstacks-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'optical-telegraphs': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'organic-synthesis-opt18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'organic-synthesis-sat18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'organic-synthesis-split-opt18-strips': [],
    'organic-synthesis-split-sat18-strips': [],
    'parcprinter-08-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'parcprinter-opt11-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'parcprinter-sat11-strips': [TAG_HAS_ZERO_COST_ACTIONS],
    'parking-opt11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'parking-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'parking-sat11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'parking-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'pathways': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'pegsol-08-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'pegsol-opt11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'pegsol-sat11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'petri-net-alignment-opt18-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'philosophers': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'pipesworld-notankage': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'pipesworld-tankage': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'psr-large': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'psr-middle': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'psr-small': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'rovers': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'satellite': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'scanalyzer-08-strips': [],
    'scanalyzer-opt11-strips': [],
    'scanalyzer-sat11-strips': [],
    'schedule': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'settlers-opt18-adl': [TAG_HAS_ZERO_COST_ACTIONS],
    'settlers-sat18-adl': [TAG_HAS_ZERO_COST_ACTIONS],
    'snake-opt18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'snake-sat18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'sokoban-opt08-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'sokoban-opt11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'sokoban-sat08-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'sokoban-sat11-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'spider-opt18-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'spider-sat18-strips': [TAG_HAS_ONLY_BINARY_COST_ACTIONS],
    'storage': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'termes-opt18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'termes-sat18-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'tetris-opt14-strips': [],
    'tetris-sat14-strips': [],
    'thoughtful-mco14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'thoughtful-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'tidybot-opt11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'tidybot-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'tidybot-sat11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'tpp': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'transport-opt08-strips': [],
    'transport-opt11-strips': [],
    'transport-opt14-strips': [],
    'transport-sat08-strips': [],
    'transport-sat11-strips': [],
    'transport-sat14-strips': [],
    'trucks': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'trucks-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'visitall-opt11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'visitall-opt14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'visitall-sat11-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'visitall-sat14-strips': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
    'woodworking-opt08-strips': [],
    'woodworking-opt11-strips': [],
    'woodworking-sat08-strips': [],
    'woodworking-sat11-strips': [],
    'zenotravel': [TAG_HAS_ONLY_UNIT_COST_ACTIONS],
}


TAGS_TO_DOMAINS = defaultdict(set)
for domain, tags in DOMAIN_TO_TAGS.items():
    for tag in tags:
        TAGS_TO_DOMAINS[tag].add(domain)
        if tag in IMPLIED_TAGS:
            for implied_tag in IMPLIED_TAGS[tag]:
                TAGS_TO_DOMAINS[implied_tag].add(domain)


def apply_tags(suite, with_tag, without_tag):
    allowed_tags = with_tag or []
    forbidden_tags = without_tag or []
    domains = set(suite)
    for tag in allowed_tags:
        if tag in forbidden_tags:
            sys.exit("Tag {} is both allowed and forbidden".format(tag))
        domains = domains.intersection(TAGS_TO_DOMAINS.get(tag, set()))
    for tag in forbidden_tags:
        domains = domains.difference(TAGS_TO_DOMAINS.get(tag, set()))
    return sorted(domains)


def get_suite_names():
    return [
        name[len(_PREFIX):] for name in sorted(globals().keys())
        if name.startswith(_PREFIX)]


def get_suite(name):
    suite_func = globals()[_PREFIX + name]
    return suite_func()


def _parse_args():
    parser = argparse.ArgumentParser(description=HELP)
    parser.add_argument("suite", choices=get_suite_names(), help="suite name")
    parser.add_argument("--with-tag", nargs='+', choices=TAGS,
                        help="specify tags that domains of the chosen suite "
                        "must have")
    parser.add_argument("--without-tag", nargs='+', choices=TAGS,
                        help="specify tags that domains of the chosen suite "
                        "cannot have")
    return parser.parse_args()


def main():
    args = _parse_args()
    suite = get_suite(args.suite)
    suite = apply_tags(suite, args.with_tag, args.without_tag)
    # Use json module to print double-quote strings.
    print(json.dumps(suite))


if __name__ == "__main__":
    main()
