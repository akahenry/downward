INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.040s CPU, 0.043s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.021s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.090s CPU, 0.088s wall-clock]
Generated 23 rules.
Computing model... [0.290s CPU, 0.295s wall-clock]
24812 relevant atoms
42782 auxiliary atoms
67594 final queue length
82160 total queue pushes
Completing instantiation... [0.290s CPU, 0.283s wall-clock]
Instantiating: [0.710s CPU, 0.701s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.003s wall-clock]
Instantiating groups... [0.010s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.010s wall-clock]
Translating task: [0.160s CPU, 0.157s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.130s CPU, 0.130s wall-clock]
Reordering and filtering variables...
17 of 17 variables necessary.
0 of 17 mutex groups necessary.
7716 of 7716 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.021s wall-clock]
Translator variables: 17
Translator derived variables: 0
Translator facts: 433
Translator goal facts: 15
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 7716
Translator axioms: 0
Translator task size: 38595
Translator peak memory: 68072 KB
Writing output... [0.020s CPU, 0.027s wall-clock]
Done! [1.100s CPU, 1.110s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798.83s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.017722s, 48284 KB] done reading input!
[t=0.0217115s, 49140 KB] Simplifying 14982 unary operators... done! [14982 unary operators]
[t=0.0265834s, 50592 KB] time to simplify: 0.00487192s
[t=0.0270456s, 50592 KB] Initializing additive heuristic...
[t=0.0272234s, 50592 KB] Initializing FF heuristic...
[t=0.0272351s, 50592 KB] stop search of patterns: 3355443KB
[t=0.0272802s, 50592 KB] Generating patterns using the systematic generator...
[t=0.0273352s, 50592 KB] building causal graph...done! [t=1.2333e-05s]
[t=0.0280932s, 50592 KB] Found 45 SGA patterns.
[t=0.0336435s, 50592 KB] Found 710 interesting patterns.
[t=0.0341614s, 50592 KB] [15, 15, 120, 560]
[t=0.0341853s, 50592 KB] Systematic generator number of patterns: 90
[t=0.0342879s, 50592 KB] Systematic generator total PDB size: 4528320
[t=0.0343008s, 50592 KB] Systematic generator computation time: 0.00690513s
[t=0.034312s, 50592 KB] Computing PDBs for pattern collection...
[t=2.0612s, 69860 KB] Done computing PDBs for pattern collection: 2.02689s
[t=2.0732s, 73552 KB] Operators: 7716
[t=2.0732s, 73552 KB] Restrictions: 90
[t=2.0732s, 73552 KB] Mean mentions: 71
[t=2.0732s, 73552 KB] Mean operators: 6113
[t=2.0732s, 73552 KB] Building successor generator...done!
[t=2.0732s, 74328 KB] peak memory difference for successor generator creation: 776 KB
[t=2.0732s, 74328 KB] time for successor generation creation: 0s
[t=2.0732s, 74328 KB] Variables: 17
[t=2.0732s, 74328 KB] FactPairs: 433
[t=2.0732s, 74328 KB] Bytes per state: 12
[t=2.0732s, 74328 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=2.0732s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=2.0732s, 74328 KB] g=0, 1 evaluated, 0 expanded
[t=2.0732s, 74328 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=2.0732s, 74328 KB] pruning method: none
[t=2.0732s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=2.0732s, 74328 KB] g=1, 2 evaluated, 1 expanded
[t=2.0732s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=2.0732s, 74328 KB] g=2, 10 evaluated, 2 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=2.0772s, 74328 KB] g=4, 20 evaluated, 4 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=2.0772s, 74328 KB] g=5, 22 evaluated, 5 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=2.0772s, 74328 KB] g=6, 32 evaluated, 6 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=2.0772s, 74328 KB] g=7, 33 evaluated, 7 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=2.0772s, 74328 KB] g=10, 87 evaluated, 14 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=2.0772s, 74328 KB] g=11, 104 evaluated, 16 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=2.0772s, 74328 KB] g=12, 121 evaluated, 18 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=2.0772s, 74328 KB] g=14, 153 evaluated, 21 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=2.0772s, 74328 KB] g=15, 167 evaluated, 22 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=2.0772s, 74328 KB] g=16, 180 evaluated, 23 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=2.0772s, 74328 KB] g=17, 194 evaluated, 24 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=2.0772s, 74328 KB] g=18, 207 evaluated, 25 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=2.0772s, 74328 KB] g=20, 228 evaluated, 27 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=2.0772s, 74328 KB] g=22, 288 evaluated, 31 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=2.0772s, 74328 KB] g=23, 306 evaluated, 32 expanded
[t=2.0772s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=2.0772s, 74328 KB] g=25, 339 evaluated, 35 expanded
[t=2.08519s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=2.08519s, 74328 KB] g=28, 1172 evaluated, 96 expanded
[t=2.0892s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=2.0892s, 74328 KB] g=29, 1195 evaluated, 98 expanded
[t=2.0892s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=2.0892s, 74328 KB] g=30, 1218 evaluated, 100 expanded
[t=2.0892s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=2.0892s, 74328 KB] g=31, 1240 evaluated, 102 expanded
[t=2.0892s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=2.0892s, 74328 KB] g=32, 1250 evaluated, 103 expanded
[t=2.0892s, 74328 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=2.0892s, 74328 KB] g=33, 1278 evaluated, 104 expanded
[t=7.20422s, 93924 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=7.20422s, 93924 KB] g=36, 425028 evaluated, 48020 expanded
[t=7.20422s, 93924 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=7.20422s, 93924 KB] g=37, 425041 evaluated, 48021 expanded
[t=7.20422s, 93924 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=7.20422s, 93924 KB] g=39, 425079 evaluated, 48024 expanded
[t=7.22022s, 93924 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=7.22022s, 93924 KB] g=39, 426613 evaluated, 48186 expanded
[t=24.2885s, 156348 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=24.2885s, 156348 KB] g=39, 1750974 evaluated, 211943 expanded
[t=24.4684s, 156888 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=24.4684s, 156888 KB] g=39, 1767680 evaluated, 213654 expanded
[t=79.8723s, 371780 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=79.8723s, 371780 KB] g=42, 6154441 evaluated, 738311 expanded
[t=79.9563s, 371916 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=79.9563s, 371916 KB] g=45, 6161540 evaluated, 739172 expanded
[t=79.9883s, 372052 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=79.9883s, 372052 KB] g=46, 6163903 evaluated, 739487 expanded
[t=138.619s, 607888 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=138.619s, 607888 KB] g=46, 10678318 evaluated, 1308857 expanded
[t=138.619s, 607888 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=138.619s, 607888 KB] g=49, 10678345 evaluated, 1308861 expanded
[t=138.619s, 607888 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=138.619s, 607888 KB] g=50, 10678349 evaluated, 1308862 expanded
[t=138.619s, 607888 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=138.619s, 607888 KB] g=51, 10678352 evaluated, 1308863 expanded
[t=202.073s, 949284 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=202.073s, 949284 KB] g=48, 15539740 evaluated, 1949412 expanded
[t=202.073s, 949284 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=202.073s, 949284 KB] g=49, 15539750 evaluated, 1949413 expanded
[t=202.073s, 949284 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=202.073s, 949284 KB] g=50, 15539755 evaluated, 1949414 expanded
[t=202.073s, 949284 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=202.073s, 949284 KB] g=51, 15539758 evaluated, 1949415 expanded
[t=202.073s, 949284 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=202.073s, 949284 KB] g=52, 15539760 evaluated, 1949416 expanded
[t=202.073s, 949284 KB] Solution found!
[t=202.073s, 949284 KB] Actual search time: 200s
drive t0 l3 l5 level175 level2 level177 (1)
load p7 t0 l5 (1)
drive t0 l5 l8 level168 level7 level175 (1)
load p9 t0 l8 (1)
drive t0 l8 l11 level163 level5 level168 (1)
load p10 t0 l11 (1)
drive t0 l11 l12 level156 level7 level163 (1)
drive t0 l12 l14 level141 level15 level156 (1)
load p5 t0 l14 (1)
load p4 t0 l14 (1)
load p2 t0 l14 (1)
load p13 t0 l14 (1)
load p12 t0 l14 (1)
drive t0 l14 l0 level121 level20 level141 (1)
unload p5 t0 l0 (1)
drive t0 l0 l5 level120 level1 level121 (1)
drive t0 l5 l3 level118 level2 level120 (1)
load p6 t0 l3 (1)
unload p4 t0 l3 (1)
drive t0 l3 l5 level116 level2 level118 (1)
drive t0 l5 l9 level113 level3 level116 (1)
load p8 t0 l9 (1)
drive t0 l9 l6 level95 level18 level113 (1)
unload p8 t0 l6 (1)
load p3 t0 l6 (1)
unload p10 t0 l6 (1)
load p0 t0 l6 (1)
drive t0 l6 l1 level75 level20 level95 (1)
load p14 t0 l1 (1)
load p11 t0 l1 (1)
load p1 t0 l1 (1)
drive t0 l1 l13 level63 level12 level75 (1)
unload p6 t0 l13 (1)
unload p2 t0 l13 (1)
unload p12 t0 l13 (1)
drive t0 l13 l2 level61 level2 level63 (1)
unload p3 t0 l2 (1)
drive t0 l2 l13 level59 level2 level61 (1)
drive t0 l13 l7 level48 level11 level59 (1)
drive t0 l7 l11 level46 level2 level48 (1)
drive t0 l11 l8 level41 level5 level46 (1)
unload p13 t0 l8 (1)
unload p1 t0 l8 (1)
drive t0 l8 l5 level34 level7 level41 (1)
unload p14 t0 l5 (1)
unload p11 t0 l5 (1)
unload p0 t0 l5 (1)
drive t0 l5 l0 level33 level1 level34 (1)
drive t0 l0 l14 level13 level20 level33 (1)
drive t0 l14 l10 level3 level10 level13 (1)
unload p9 t0 l10 (1)
unload p7 t0 l10 (1)
[t=202.073s, 949284 KB] Plan length: 52 step(s).
[t=202.073s, 949284 KB] Plan cost: 52
[t=202.073s, 949284 KB] Expanded 1949417 state(s).
[t=202.073s, 949284 KB] Reopened 0 state(s).
[t=202.073s, 949284 KB] Evaluated 15539760 state(s).
[t=202.073s, 949284 KB] Evaluations: 17489176
[t=202.073s, 949284 KB] Generated 21875485 state(s).
[t=202.073s, 949284 KB] Dead ends: 5192994 state(s).
[t=202.073s, 949284 KB] Number of registered states: 15539760
[t=202.073s, 949284 KB] Int hash set load factor: 15539760/33554432 = 0.463121
[t=202.073s, 949284 KB] Int hash set resizes: 25
[t=202.073s, 949284 KB] Search time: 200s
[t=202.073s, 949284 KB] Total time: 202.073s
Solution found.
Peak memory: 949284 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 52 

Successful plans:
Value: 52
 sas_plan 52 

validate exit code: 0

