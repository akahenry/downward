INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.100s CPU, 0.109s wall-clock]
Normalizing task... [0.010s CPU, 0.004s wall-clock]
Instantiating...
Generating Datalog program... [0.030s CPU, 0.032s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.220s CPU, 0.220s wall-clock]
Generated 23 rules.
Computing model... [0.540s CPU, 0.528s wall-clock]
42642 relevant atoms
77428 auxiliary atoms
120070 final queue length
137204 total queue pushes
Completing instantiation... [0.410s CPU, 0.409s wall-clock]
Instantiating: [1.220s CPU, 1.215s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.006s wall-clock]
Checking invariant weight... [0.010s CPU, 0.007s wall-clock]
Instantiating groups... [0.000s CPU, 0.005s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.020s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.012s wall-clock]
Translating task: [0.190s CPU, 0.192s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.150s CPU, 0.155s wall-clock]
Reordering and filtering variables...
14 of 14 variables necessary.
0 of 14 mutex groups necessary.
8914 of 8914 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.030s CPU, 0.026s wall-clock]
Translator variables: 14
Translator derived variables: 0
Translator facts: 420
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 8914
Translator axioms: 0
Translator task size: 44728
Translator peak memory: 93060 KB
Writing output... [0.040s CPU, 0.032s wall-clock]
Done! [1.770s CPU, 1.770s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798.17s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0199982s, 48528 KB] done reading input!
[t=0.0239986s, 49816 KB] Simplifying 17540 unary operators... done! [17299 unary operators]
[t=0.0279982s, 51412 KB] time to simplify: 0.00399957s
[t=0.0279982s, 51412 KB] Initializing additive heuristic...
[t=0.0279982s, 51412 KB] Initializing FF heuristic...
[t=0.0279982s, 51412 KB] stop search of patterns: 3355443KB
[t=0.0279982s, 51412 KB] Generating patterns using the systematic generator...
[t=0.0279982s, 51412 KB] building causal graph...done! [t=0s]
[t=0.0279982s, 51412 KB] Found 36 SGA patterns.
[t=0.0319983s, 51412 KB] Found 388 interesting patterns.
[t=0.0319983s, 51412 KB] [12, 12, 78, 286]
[t=0.0319983s, 51412 KB] Systematic generator number of patterns: 72
[t=0.0319983s, 51412 KB] Systematic generator total PDB size: 3256032
[t=0.0319983s, 51412 KB] Systematic generator computation time: 0.00400011s
[t=0.0319983s, 51412 KB] Computing PDBs for pattern collection...
[t=1.17194s, 65948 KB] Done computing PDBs for pattern collection: 1.13995s
[t=1.17994s, 69164 KB] Operators: 8914
[t=1.17994s, 69164 KB] Restrictions: 72
[t=1.17994s, 69164 KB] Mean mentions: 58
[t=1.17994s, 69164 KB] Mean operators: 7233
[t=1.17994s, 69164 KB] Building successor generator...done!
[t=1.18394s, 70056 KB] peak memory difference for successor generator creation: 892 KB
[t=1.18394s, 70056 KB] time for successor generation creation: 0.00400063s
[t=1.18394s, 70056 KB] Variables: 14
[t=1.18394s, 70056 KB] FactPairs: 420
[t=1.18394s, 70056 KB] Bytes per state: 8
[t=1.18394s, 70056 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=1.18394s, 70056 KB] g=0, 1 evaluated, 0 expanded
[t=1.18394s, 70056 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=1.18394s, 70056 KB] pruning method: none
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=1.18394s, 70056 KB] g=1, 2 evaluated, 1 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=1.18394s, 70056 KB] g=2, 9 evaluated, 2 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=1.18394s, 70056 KB] g=3, 16 evaluated, 3 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=1.18394s, 70056 KB] g=4, 27 evaluated, 6 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=1.18394s, 70056 KB] g=5, 28 evaluated, 7 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=1.18394s, 70056 KB] g=6, 31 evaluated, 8 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=1.18394s, 70056 KB] g=7, 39 evaluated, 9 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=1.18394s, 70056 KB] g=10, 94 evaluated, 17 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=1.18394s, 70056 KB] g=11, 103 evaluated, 18 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=1.18394s, 70056 KB] g=13, 119 evaluated, 20 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=1.18394s, 70056 KB] g=15, 132 evaluated, 22 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=1.18394s, 70056 KB] g=16, 138 evaluated, 23 expanded
[t=1.18394s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=1.18394s, 70056 KB] g=17, 142 evaluated, 24 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=1.18794s, 70056 KB] g=19, 155 evaluated, 26 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=1.18794s, 70056 KB] g=20, 163 evaluated, 27 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=1.18794s, 70056 KB] g=21, 169 evaluated, 28 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=1.18794s, 70056 KB] g=22, 177 evaluated, 29 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=1.18794s, 70056 KB] g=23, 185 evaluated, 30 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=1.18794s, 70056 KB] g=26, 206 evaluated, 34 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=1.18794s, 70056 KB] g=27, 209 evaluated, 35 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=1.18794s, 70056 KB] g=28, 218 evaluated, 36 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=1.18794s, 70056 KB] g=29, 228 evaluated, 37 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=1.18794s, 70056 KB] g=31, 245 evaluated, 39 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=1.18794s, 70056 KB] g=31, 325 evaluated, 52 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=1.18794s, 70056 KB] g=32, 330 evaluated, 53 expanded
[t=1.18794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=1.18794s, 70056 KB] g=33, 341 evaluated, 55 expanded
[t=1.19194s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=1.19194s, 70056 KB] g=34, 717 evaluated, 114 expanded
[t=1.20794s, 70056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=1.20794s, 70056 KB] g=36, 1949 evaluated, 338 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=1.46394s, 70508 KB] g=39, 23860 evaluated, 3887 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=1.46394s, 70508 KB] g=40, 23865 evaluated, 3888 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=1.46394s, 70508 KB] g=41, 23875 evaluated, 3889 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=1.46394s, 70508 KB] g=42, 23881 evaluated, 3890 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=1.46394s, 70508 KB] g=43, 23886 evaluated, 3891 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=1.46394s, 70508 KB] g=44, 23887 evaluated, 3892 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=1.46394s, 70508 KB] g=45, 23891 evaluated, 3893 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=1.46394s, 70508 KB] g=46, 23895 evaluated, 3894 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=1.46394s, 70508 KB] g=47, 23898 evaluated, 3895 expanded
[t=1.46394s, 70508 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=1.46394s, 70508 KB] g=48, 23901 evaluated, 3896 expanded
[t=1.46394s, 70508 KB] Solution found!
[t=1.46394s, 70508 KB] Actual search time: 0.279992s
drive t0 l4 l2 level246 level7 level253 (1)
drive t0 l2 l8 level230 level16 level246 (1)
load p1 t0 l8 (1)
load p0 t0 l8 (1)
drive t0 l8 l0 level215 level15 level230 (1)
drive t0 l0 l7 level204 level11 level215 (1)
load p9 t0 l7 (1)
drive t0 l7 l2 level194 level10 level204 (1)
drive t0 l2 l9 level176 level18 level194 (1)
load p5 t0 l9 (1)
load p11 t0 l9 (1)
drive t0 l9 l6 level163 level13 level176 (1)
unload p11 t0 l6 (1)
drive t0 l6 l3 level144 level19 level163 (1)
unload p9 t0 l3 (1)
unload p5 t0 l3 (1)
drive t0 l3 l0 level142 level2 level144 (1)
drive t0 l0 l7 level131 level11 level142 (1)
drive t0 l7 l2 level121 level10 level131 (1)
unload p1 t0 l2 (1)
drive t0 l2 l11 level116 level5 level121 (1)
load p8 t0 l11 (1)
load p7 t0 l11 (1)
load p4 t0 l11 (1)
drive t0 l11 l2 level111 level5 level116 (1)
drive t0 l2 l4 level104 level7 level111 (1)
unload p4 t0 l4 (1)
load p10 t0 l4 (1)
drive t0 l4 l2 level97 level7 level104 (1)
drive t0 l2 l7 level87 level10 level97 (1)
drive t0 l7 l5 level76 level11 level87 (1)
load p3 t0 l5 (1)
unload p10 t0 l5 (1)
drive t0 l5 l7 level65 level11 level76 (1)
drive t0 l7 l10 level60 level5 level65 (1)
drive t0 l10 l4 level48 level12 level60 (1)
unload p3 t0 l4 (1)
drive t0 l4 l2 level41 level7 level48 (1)
drive t0 l2 l9 level23 level18 level41 (1)
drive t0 l9 l1 level15 level8 level23 (1)
load p6 t0 l1 (1)
load p2 t0 l1 (1)
unload p0 t0 l1 (1)
drive t0 l1 l9 level7 level8 level15 (1)
unload p8 t0 l9 (1)
unload p7 t0 l9 (1)
unload p6 t0 l9 (1)
unload p2 t0 l9 (1)
[t=1.46394s, 70508 KB] Plan length: 48 step(s).
[t=1.46394s, 70508 KB] Plan cost: 48
[t=1.46394s, 70508 KB] Expanded 3897 state(s).
[t=1.46394s, 70508 KB] Reopened 0 state(s).
[t=1.46394s, 70508 KB] Evaluated 23901 state(s).
[t=1.46394s, 70508 KB] Evaluations: 27797
[t=1.46394s, 70508 KB] Generated 31958 state(s).
[t=1.46394s, 70508 KB] Dead ends: 12626 state(s).
[t=1.46394s, 70508 KB] Number of registered states: 23901
[t=1.46394s, 70508 KB] Int hash set load factor: 23901/32768 = 0.729401
[t=1.46394s, 70508 KB] Int hash set resizes: 15
[t=1.46394s, 70508 KB] Search time: 0.279992s
[t=1.46394s, 70508 KB] Total time: 1.46394s
Solution found.
Peak memory: 70508 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 48 

Successful plans:
Value: 48
 sas_plan 48 

validate exit code: 0

