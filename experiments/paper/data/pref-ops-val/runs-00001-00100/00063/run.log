INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.040s CPU, 0.048s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.020s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.100s CPU, 0.097s wall-clock]
Generated 23 rules.
Computing model... [0.240s CPU, 0.240s wall-clock]
21269 relevant atoms
38868 auxiliary atoms
60137 final queue length
67555 total queue pushes
Completing instantiation... [0.140s CPU, 0.132s wall-clock]
Instantiating: [0.510s CPU, 0.500s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.010s CPU, 0.004s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.110s CPU, 0.104s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
10 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.036s wall-clock]
Reordering and filtering variables...
10 of 10 variables necessary.
0 of 10 mutex groups necessary.
3894 of 3894 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 252
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 3894
Translator axioms: 0
Translator task size: 19612
Translator peak memory: 58896 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.730s CPU, 0.732s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.23s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0077086s, 47136 KB] done reading input!
[t=0.0117089s, 47744 KB] Simplifying 7660 unary operators... done! [7504 unary operators]
[t=0.0117089s, 48464 KB] time to simplify: 0s
[t=0.0117089s, 48464 KB] Initializing additive heuristic...
[t=0.0117089s, 48464 KB] Initializing FF heuristic...
[t=0.0117089s, 48464 KB] stop search of patterns: 3355443KB
[t=0.0117089s, 48464 KB] Generating patterns using the systematic generator...
[t=0.0117089s, 48464 KB] building causal graph...done! [t=0s]
[t=0.0117089s, 48464 KB] Found 24 SGA patterns.
[t=0.0157087s, 48464 KB] Found 136 interesting patterns.
[t=0.0157087s, 48464 KB] [8, 8, 36, 84]
[t=0.0157087s, 48464 KB] Systematic generator number of patterns: 48
[t=0.0157087s, 48464 KB] Systematic generator total PDB size: 479880
[t=0.0157087s, 48464 KB] Systematic generator computation time: 0.00399975s
[t=0.0157087s, 48464 KB] Computing PDBs for pattern collection...
[t=0.163675s, 50744 KB] Done computing PDBs for pattern collection: 0.147966s
[t=0.167675s, 51564 KB] Operators: 3894
[t=0.167675s, 51564 KB] Restrictions: 48
[t=0.167675s, 51564 KB] Mean mentions: 39
[t=0.167675s, 51564 KB] Mean operators: 3167
[t=0.167675s, 51564 KB] Building successor generator...done!
[t=0.167675s, 51984 KB] peak memory difference for successor generator creation: 420 KB
[t=0.167675s, 51984 KB] time for successor generation creation: 0s
[t=0.167675s, 51984 KB] Variables: 10
[t=0.167675s, 51984 KB] FactPairs: 252
[t=0.167675s, 51984 KB] Bytes per state: 8
[t=0.167675s, 51984 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=0.171675s, 51984 KB] g=0, 1 evaluated, 0 expanded
[t=0.171675s, 51984 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=0.171675s, 51984 KB] pruning method: none
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=0.171675s, 51984 KB] g=1, 2 evaluated, 1 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=0.171675s, 51984 KB] g=2, 13 evaluated, 3 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=0.171675s, 51984 KB] g=3, 16 evaluated, 4 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.171675s, 51984 KB] g=4, 25 evaluated, 6 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=0.171675s, 51984 KB] g=6, 35 evaluated, 8 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=0.171675s, 51984 KB] g=7, 40 evaluated, 9 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.171675s, 51984 KB] g=8, 42 evaluated, 10 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.171675s, 51984 KB] g=10, 51 evaluated, 12 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.171675s, 51984 KB] g=11, 60 evaluated, 13 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.171675s, 51984 KB] g=12, 62 evaluated, 14 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.171675s, 51984 KB] g=13, 69 evaluated, 15 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.171675s, 51984 KB] g=14, 79 evaluated, 16 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.171675s, 51984 KB] g=15, 87 evaluated, 17 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.171675s, 51984 KB] g=16, 95 evaluated, 18 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.171675s, 51984 KB] g=17, 103 evaluated, 19 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.171675s, 51984 KB] g=19, 116 evaluated, 21 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.171675s, 51984 KB] g=20, 118 evaluated, 22 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.171675s, 51984 KB] g=21, 126 evaluated, 23 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.171675s, 51984 KB] g=22, 135 evaluated, 24 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.171675s, 51984 KB] g=23, 142 evaluated, 25 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.171675s, 51984 KB] g=24, 148 evaluated, 26 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.171675s, 51984 KB] g=27, 175 evaluated, 31 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=0.171675s, 51984 KB] g=28, 181 evaluated, 32 expanded
[t=0.171675s, 51984 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=0.171675s, 51984 KB] g=29, 187 evaluated, 33 expanded
[t=0.171675s, 51984 KB] Solution found!
[t=0.171675s, 51984 KB] Actual search time: 0s
drive t0 l2 l4 level168 level12 level180 (1)
load p2 t0 l4 (1)
load p0 t0 l4 (1)
drive t0 l4 l2 level156 level12 level168 (1)
drive t0 l2 l7 level138 level18 level156 (1)
load p6 t0 l7 (1)
unload p2 t0 l7 (1)
drive t0 l7 l2 level120 level18 level138 (1)
drive t0 l2 l3 level104 level16 level120 (1)
drive t0 l3 l0 level86 level18 level104 (1)
load p3 t0 l0 (1)
drive t0 l0 l1 level74 level12 level86 (1)
load p7 t0 l1 (1)
load p5 t0 l1 (1)
unload p3 t0 l1 (1)
load p1 t0 l1 (1)
unload p0 t0 l1 (1)
drive t0 l1 l4 level61 level13 level74 (1)
unload p5 t0 l4 (1)
drive t0 l4 l1 level48 level13 level61 (1)
drive t0 l1 l6 level45 level3 level48 (1)
unload p7 t0 l6 (1)
unload p6 t0 l6 (1)
load p4 t0 l6 (1)
drive t0 l6 l1 level42 level3 level45 (1)
unload p4 t0 l1 (1)
drive t0 l1 l6 level39 level3 level42 (1)
drive t0 l6 l5 level21 level18 level39 (1)
unload p1 t0 l5 (1)
[t=0.171675s, 51984 KB] Plan length: 29 step(s).
[t=0.171675s, 51984 KB] Plan cost: 29
[t=0.171675s, 51984 KB] Expanded 34 state(s).
[t=0.171675s, 51984 KB] Reopened 0 state(s).
[t=0.171675s, 51984 KB] Evaluated 187 state(s).
[t=0.171675s, 51984 KB] Evaluations: 220
[t=0.171675s, 51984 KB] Generated 212 state(s).
[t=0.171675s, 51984 KB] Dead ends: 13 state(s).
[t=0.171675s, 51984 KB] Number of registered states: 187
[t=0.171675s, 51984 KB] Int hash set load factor: 187/256 = 0.730469
[t=0.171675s, 51984 KB] Int hash set resizes: 8
[t=0.171675s, 51984 KB] Search time: 0.00400015s
[t=0.171675s, 51984 KB] Total time: 0.171675s
Solution found.
Peak memory: 51984 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 29 

Successful plans:
Value: 29
 sas_plan 29 

validate exit code: 0

