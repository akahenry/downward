INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.040s CPU, 0.046s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.020s CPU, 0.019s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.090s CPU, 0.091s wall-clock]
Generated 23 rules.
Computing model... [0.230s CPU, 0.225s wall-clock]
21039 relevant atoms
38215 auxiliary atoms
59254 final queue length
67201 total queue pushes
Completing instantiation... [0.130s CPU, 0.138s wall-clock]
Instantiating: [0.490s CPU, 0.485s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.010s CPU, 0.003s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.005s wall-clock]
Translating task: [0.110s CPU, 0.107s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
11 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.037s wall-clock]
Reordering and filtering variables...
11 of 11 variables necessary.
0 of 11 mutex groups necessary.
4184 of 4184 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 11
Translator derived variables: 0
Translator facts: 270
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4184
Translator axioms: 0
Translator task size: 21048
Translator peak memory: 58988 KB
Writing output... [0.020s CPU, 0.015s wall-clock]
Done! [0.720s CPU, 0.720s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.24s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0112268s, 47296 KB] done reading input!
[t=0.0112268s, 47968 KB] Simplifying 8206 unary operators... done! [8045 unary operators]
[t=0.0152269s, 48760 KB] time to simplify: 0.00400002s
[t=0.0152269s, 48760 KB] Initializing additive heuristic...
[t=0.0152269s, 48760 KB] Initializing FF heuristic...
[t=0.0152269s, 48760 KB] stop search of patterns: 3355443KB
[t=0.0152269s, 48760 KB] Generating patterns using the systematic generator...
[t=0.0152269s, 48760 KB] building causal graph...done! [t=0s]
[t=0.0152269s, 48760 KB] Found 27 SGA patterns.
[t=0.0152269s, 48760 KB] Found 183 interesting patterns.
[t=0.0152269s, 48760 KB] [9, 9, 45, 120]
[t=0.0152269s, 48760 KB] Systematic generator number of patterns: 54
[t=0.0152269s, 48760 KB] Systematic generator total PDB size: 1381770
[t=0.0152269s, 48760 KB] Systematic generator computation time: 0s
[t=0.0152269s, 48760 KB] Computing PDBs for pattern collection...
[t=0.231206s, 54376 KB] Done computing PDBs for pattern collection: 0.21598s
[t=0.235206s, 55488 KB] Operators: 4184
[t=0.235206s, 55488 KB] Restrictions: 54
[t=0.237516s, 55488 KB] Mean mentions: 43
[t=0.237516s, 55488 KB] Mean operators: 3384
[t=0.237516s, 55488 KB] Building successor generator...done!
[t=0.237516s, 55948 KB] peak memory difference for successor generator creation: 460 KB
[t=0.237516s, 55948 KB] time for successor generation creation: 0s
[t=0.237516s, 55948 KB] Variables: 11
[t=0.237516s, 55948 KB] FactPairs: 270
[t=0.237516s, 55948 KB] Bytes per state: 8
[t=0.237516s, 55948 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=0.237516s, 55948 KB] g=0, 1 evaluated, 0 expanded
[t=0.237516s, 55948 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=0.237516s, 55948 KB] pruning method: none
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=0.237516s, 55948 KB] g=1, 2 evaluated, 1 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=0.237516s, 55948 KB] g=2, 8 evaluated, 2 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=0.237516s, 55948 KB] g=3, 15 evaluated, 3 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=0.237516s, 55948 KB] g=4, 21 evaluated, 4 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=0.237516s, 55948 KB] g=5, 22 evaluated, 5 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=0.237516s, 55948 KB] g=6, 30 evaluated, 6 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.237516s, 55948 KB] g=7, 38 evaluated, 7 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=0.237516s, 55948 KB] g=8, 48 evaluated, 8 expanded
[t=0.237516s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=0.237516s, 55948 KB] g=9, 57 evaluated, 9 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.239209s, 55948 KB] g=10, 65 evaluated, 10 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.239209s, 55948 KB] g=12, 76 evaluated, 12 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.239209s, 55948 KB] g=13, 88 evaluated, 13 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.239209s, 55948 KB] g=14, 96 evaluated, 14 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.239209s, 55948 KB] g=16, 111 evaluated, 16 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.239209s, 55948 KB] g=17, 120 evaluated, 17 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.239209s, 55948 KB] g=18, 122 evaluated, 18 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.239209s, 55948 KB] g=19, 136 evaluated, 19 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.239209s, 55948 KB] g=20, 138 evaluated, 20 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.239209s, 55948 KB] g=21, 148 evaluated, 21 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.239209s, 55948 KB] g=22, 157 evaluated, 22 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.239209s, 55948 KB] g=23, 158 evaluated, 23 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.239209s, 55948 KB] g=24, 165 evaluated, 24 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.239209s, 55948 KB] g=26, 177 evaluated, 26 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.239209s, 55948 KB] g=27, 183 evaluated, 27 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.239209s, 55948 KB] g=28, 196 evaluated, 30 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=0.239209s, 55948 KB] g=29, 199 evaluated, 31 expanded
[t=0.239209s, 55948 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=0.239209s, 55948 KB] g=30, 201 evaluated, 32 expanded
[t=0.239209s, 55948 KB] Solution found!
[t=0.239209s, 55948 KB] Actual search time: 0.0016927s
drive t0 l7 l5 level163 level14 level177 (1)
load p7 t0 l5 (1)
load p5 t0 l5 (1)
load p4 t0 l5 (1)
drive t0 l5 l0 level142 level21 level163 (1)
drive t0 l0 l6 level132 level10 level142 (1)
load p8 t0 l6 (1)
load p6 t0 l6 (1)
unload p4 t0 l6 (1)
load p3 t0 l6 (1)
drive t0 l6 l2 level126 level6 level132 (1)
unload p8 t0 l2 (1)
unload p3 t0 l2 (1)
load p1 t0 l2 (1)
drive t0 l2 l0 level116 level10 level126 (1)
load p2 t0 l0 (1)
unload p1 t0 l0 (1)
drive t0 l0 l2 level106 level10 level116 (1)
unload p2 t0 l2 (1)
drive t0 l2 l3 level92 level14 level106 (1)
unload p7 t0 l3 (1)
load p0 t0 l3 (1)
drive t0 l3 l1 level67 level25 level92 (1)
drive t0 l1 l5 level64 level3 level67 (1)
drive t0 l5 l4 level39 level25 level64 (1)
unload p0 t0 l4 (1)
drive t0 l4 l8 level21 level18 level39 (1)
unload p6 t0 l8 (1)
drive t0 l8 l7 level2 level19 level21 (1)
unload p5 t0 l7 (1)
[t=0.239209s, 55948 KB] Plan length: 30 step(s).
[t=0.239209s, 55948 KB] Plan cost: 30
[t=0.239209s, 55948 KB] Expanded 33 state(s).
[t=0.239209s, 55948 KB] Reopened 0 state(s).
[t=0.239209s, 55948 KB] Evaluated 201 state(s).
[t=0.239209s, 55948 KB] Evaluations: 233
[t=0.239209s, 55948 KB] Generated 227 state(s).
[t=0.239209s, 55948 KB] Dead ends: 22 state(s).
[t=0.239209s, 55948 KB] Number of registered states: 201
[t=0.239209s, 55948 KB] Int hash set load factor: 201/256 = 0.785156
[t=0.239209s, 55948 KB] Int hash set resizes: 8
[t=0.239209s, 55948 KB] Search time: 0.0016927s
[t=0.239209s, 55948 KB] Total time: 0.239209s
Solution found.
Peak memory: 55948 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 30 

Successful plans:
Value: 30
 sas_plan 30 

validate exit code: 0

