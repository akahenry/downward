INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.016s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.005s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.030s CPU, 0.025s wall-clock]
Generated 23 rules.
Computing model... [0.080s CPU, 0.079s wall-clock]
7333 relevant atoms
12880 auxiliary atoms
20213 final queue length
23431 total queue pushes
Completing instantiation... [0.040s CPU, 0.046s wall-clock]
Instantiating: [0.160s CPU, 0.159s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.034s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.015s wall-clock]
Reordering and filtering variables...
9 of 9 variables necessary.
0 of 9 mutex groups necessary.
1732 of 1732 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 9
Translator derived variables: 0
Translator facts: 157
Translator goal facts: 7
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1732
Translator axioms: 0
Translator task size: 8735
Translator peak memory: 41372 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.240s CPU, 0.243s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.73s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.00399099s, 46536 KB] done reading input!
[t=0.00399099s, 47004 KB] Simplifying 3366 unary operators... done! [3366 unary operators]
[t=0.00399099s, 47268 KB] time to simplify: 0s
[t=0.00399099s, 47268 KB] Initializing additive heuristic...
[t=0.00399099s, 47268 KB] Initializing FF heuristic...
[t=0.00399099s, 47268 KB] stop search of patterns: 3355443KB
[t=0.00399099s, 47268 KB] Generating patterns using the systematic generator...
[t=0.00399099s, 47268 KB] building causal graph...done! [t=0s]
[t=0.00399099s, 47268 KB] Found 21 SGA patterns.
[t=0.0079904s, 47268 KB] Found 98 interesting patterns.
[t=0.0079904s, 47268 KB] [7, 7, 28, 56]
[t=0.0079904s, 47268 KB] Systematic generator number of patterns: 42
[t=0.0079904s, 47268 KB] Systematic generator total PDB size: 307328
[t=0.0079904s, 47268 KB] Systematic generator computation time: 0.00399941s
[t=0.0079904s, 47268 KB] Computing PDBs for pattern collection...
[t=0.0599707s, 48616 KB] Done computing PDBs for pattern collection: 0.0519803s
[t=0.0599707s, 49068 KB] Operators: 1732
[t=0.0599707s, 49068 KB] Restrictions: 42
[t=0.0599707s, 49068 KB] Mean mentions: 33
[t=0.0599707s, 49068 KB] Mean operators: 1386
[t=0.0599707s, 49068 KB] Building successor generator...done!
[t=0.0599707s, 49224 KB] peak memory difference for successor generator creation: 156 KB
[t=0.0599707s, 49224 KB] time for successor generation creation: 0s
[t=0.0599707s, 49224 KB] Variables: 9
[t=0.0599707s, 49224 KB] FactPairs: 157
[t=0.0599707s, 49224 KB] Bytes per state: 4
[t=0.0599707s, 49224 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.0599707s, 49224 KB] g=0, 1 evaluated, 0 expanded
[t=0.0599707s, 49224 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.0599707s, 49224 KB] pruning method: none
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=0.0599707s, 49224 KB] g=1, 4 evaluated, 1 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=0.0599707s, 49224 KB] g=2, 9 evaluated, 2 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.0599707s, 49224 KB] g=3, 14 evaluated, 3 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.0599707s, 49224 KB] g=5, 23 evaluated, 5 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.0599707s, 49224 KB] g=6, 30 evaluated, 6 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.0599707s, 49224 KB] g=7, 32 evaluated, 7 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.0599707s, 49224 KB] g=8, 36 evaluated, 8 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.0599707s, 49224 KB] g=9, 47 evaluated, 9 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.0599707s, 49224 KB] g=10, 56 evaluated, 10 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.0599707s, 49224 KB] g=11, 63 evaluated, 11 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.0599707s, 49224 KB] g=12, 65 evaluated, 12 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.0599707s, 49224 KB] g=13, 74 evaluated, 13 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.0599707s, 49224 KB] g=14, 77 evaluated, 14 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.0599707s, 49224 KB] g=15, 86 evaluated, 15 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.0599707s, 49224 KB] g=16, 94 evaluated, 16 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.0599707s, 49224 KB] g=17, 101 evaluated, 17 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.0599707s, 49224 KB] g=18, 108 evaluated, 18 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.0599707s, 49224 KB] g=19, 115 evaluated, 19 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=0.0599707s, 49224 KB] g=20, 116 evaluated, 20 expanded
[t=0.0599707s, 49224 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=0.0599707s, 49224 KB] g=21, 125 evaluated, 21 expanded
[t=0.0599707s, 49224 KB] Solution found!
[t=0.0599707s, 49224 KB] Actual search time: 0s
drive t0 l5 l4 level87 level12 level99 (1)
load p6 t0 l4 (1)
load p2 t0 l4 (1)
drive t0 l4 l3 level79 level8 level87 (1)
load p1 t0 l3 (1)
load p0 t0 l3 (1)
drive t0 l3 l1 level67 level12 level79 (1)
drive t0 l1 l2 level64 level3 level67 (1)
load p3 t0 l2 (1)
unload p1 t0 l2 (1)
unload p0 t0 l2 (1)
drive t0 l2 l5 level51 level13 level64 (1)
load p5 t0 l5 (1)
drive t0 l5 l0 level45 level6 level51 (1)
unload p6 t0 l0 (1)
unload p5 t0 l0 (1)
load p4 t0 l0 (1)
unload p3 t0 l0 (1)
unload p2 t0 l0 (1)
drive t0 l0 l3 level27 level18 level45 (1)
unload p4 t0 l3 (1)
[t=0.0599707s, 49224 KB] Plan length: 21 step(s).
[t=0.0599707s, 49224 KB] Plan cost: 21
[t=0.0599707s, 49224 KB] Expanded 22 state(s).
[t=0.0599707s, 49224 KB] Reopened 0 state(s).
[t=0.0599707s, 49224 KB] Evaluated 125 state(s).
[t=0.0599707s, 49224 KB] Evaluations: 146
[t=0.0599707s, 49224 KB] Generated 145 state(s).
[t=0.0599707s, 49224 KB] Dead ends: 5 state(s).
[t=0.0599707s, 49224 KB] Number of registered states: 125
[t=0.0599707s, 49224 KB] Int hash set load factor: 125/128 = 0.976562
[t=0.0599707s, 49224 KB] Int hash set resizes: 7
[t=0.0599707s, 49224 KB] Search time: 0s
[t=0.0599707s, 49224 KB] Total time: 0.0599707s
Solution found.
Peak memory: 49224 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 21 

Successful plans:
Value: 21
 sas_plan 21 

validate exit code: 0

