INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.030s CPU, 0.027s wall-clock]
Normalizing task... [0.000s CPU, 0.001s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.008s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.050s CPU, 0.057s wall-clock]
Generated 23 rules.
Computing model... [0.150s CPU, 0.153s wall-clock]
14411 relevant atoms
24285 auxiliary atoms
38696 final queue length
47795 total queue pushes
Completing instantiation... [0.140s CPU, 0.148s wall-clock]
Instantiating: [0.370s CPU, 0.372s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.002s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.006s wall-clock]
Translating task: [0.090s CPU, 0.098s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.044s wall-clock]
Reordering and filtering variables...
15 of 15 variables necessary.
0 of 15 mutex groups necessary.
4874 of 4874 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 15
Translator derived variables: 0
Translator facts: 326
Translator goal facts: 13
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4874
Translator axioms: 0
Translator task size: 24386
Translator peak memory: 52904 KB
Writing output... [0.010s CPU, 0.017s wall-clock]
Done! [0.580s CPU, 0.588s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.38s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.011999s, 47492 KB] done reading input!
[t=0.011999s, 48184 KB] Simplifying 9410 unary operators... done! [9293 unary operators]
[t=0.0159994s, 49108 KB] time to simplify: 0.00400045s
[t=0.0159994s, 49108 KB] Initializing additive heuristic...
[t=0.0159994s, 49108 KB] Initializing FF heuristic...
[t=0.0159994s, 49108 KB] stop search of patterns: 3355443KB
[t=0.0159994s, 49108 KB] Generating patterns using the systematic generator...
[t=0.0159994s, 49108 KB] building causal graph...done! [t=0s]
[t=0.0159994s, 49108 KB] Found 39 SGA patterns.
[t=0.0199995s, 49108 KB] Found 481 interesting patterns.
[t=0.0199995s, 49108 KB] [13, 13, 91, 364]
[t=0.0199995s, 49108 KB] Systematic generator number of patterns: 78
[t=0.0199995s, 49108 KB] Systematic generator total PDB size: 1635088
[t=0.0199995s, 49108 KB] Systematic generator computation time: 0.00400007s
[t=0.0199995s, 49108 KB] Computing PDBs for pattern collection...
[t=0.843921s, 56520 KB] Done computing PDBs for pattern collection: 0.823921s
[t=0.847924s, 59324 KB] Operators: 4874
[t=0.847924s, 59324 KB] Restrictions: 78
[t=0.847924s, 59324 KB] Mean mentions: 61
[t=0.847924s, 59324 KB] Mean operators: 3830
[t=0.847924s, 59324 KB] Building successor generator...done!
[t=0.847924s, 59860 KB] peak memory difference for successor generator creation: 536 KB
[t=0.847924s, 59860 KB] time for successor generation creation: 0s
[t=0.847924s, 59860 KB] Variables: 15
[t=0.847924s, 59860 KB] FactPairs: 326
[t=0.847924s, 59860 KB] Bytes per state: 8
[t=0.847924s, 59860 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.847924s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=0.847924s, 59860 KB] g=0, 1 evaluated, 0 expanded
[t=0.847924s, 59860 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=0.847924s, 59860 KB] pruning method: none
[t=0.847924s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=0.847924s, 59860 KB] g=1, 3 evaluated, 1 expanded
[t=0.847924s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=0.847924s, 59860 KB] g=2, 7 evaluated, 2 expanded
[t=0.847924s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=0.847924s, 59860 KB] g=3, 16 evaluated, 3 expanded
[t=0.847924s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=0.847924s, 59860 KB] g=4, 24 evaluated, 4 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=0.851921s, 59860 KB] g=5, 32 evaluated, 5 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=0.851921s, 59860 KB] g=6, 40 evaluated, 6 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=0.851921s, 59860 KB] g=7, 48 evaluated, 7 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=0.851921s, 59860 KB] g=10, 71 evaluated, 10 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=0.851921s, 59860 KB] g=11, 85 evaluated, 11 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=0.851921s, 59860 KB] g=12, 88 evaluated, 12 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=0.851921s, 59860 KB] g=13, 103 evaluated, 13 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=0.851921s, 59860 KB] g=14, 120 evaluated, 14 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=0.851921s, 59860 KB] g=16, 144 evaluated, 16 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=0.851921s, 59860 KB] g=17, 145 evaluated, 17 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.851921s, 59860 KB] g=19, 188 evaluated, 20 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=0.851921s, 59860 KB] g=20, 202 evaluated, 21 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=0.851921s, 59860 KB] g=22, 225 evaluated, 23 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.851921s, 59860 KB] g=24, 392 evaluated, 38 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.851921s, 59860 KB] g=25, 412 evaluated, 40 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.851921s, 59860 KB] g=27, 475 evaluated, 46 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.851921s, 59860 KB] g=28, 477 evaluated, 47 expanded
[t=0.851921s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.851921s, 59860 KB] g=29, 485 evaluated, 48 expanded
[t=0.87592s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.87592s, 59860 KB] g=33, 3719 evaluated, 495 expanded
[t=0.87592s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.87592s, 59860 KB] g=34, 3723 evaluated, 496 expanded
[t=0.87592s, 59860 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.87592s, 59860 KB] g=35, 3727 evaluated, 497 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.90392s, 60040 KB] g=33, 7820 evaluated, 1134 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.90392s, 60040 KB] g=34, 7829 evaluated, 1135 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.90392s, 60040 KB] g=35, 7843 evaluated, 1137 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.90392s, 60040 KB] g=36, 7857 evaluated, 1139 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.90392s, 60040 KB] g=37, 7871 evaluated, 1141 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.90392s, 60040 KB] g=38, 7881 evaluated, 1143 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.90392s, 60040 KB] g=39, 7893 evaluated, 1145 expanded
[t=0.90392s, 60040 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.90392s, 60040 KB] g=40, 7905 evaluated, 1147 expanded
[t=7.67547s, 113936 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=7.67547s, 113936 KB] g=43, 968736 evaluated, 196283 expanded
[t=7.67547s, 113936 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=7.67547s, 113936 KB] g=44, 968738 evaluated, 196284 expanded
[t=7.67547s, 113936 KB] Solution found!
[t=7.67547s, 113936 KB] Actual search time: 6.82755s
drive t0 l9 l5 level112 level18 level130 (1)
load p7 t0 l5 (1)
load p6 t0 l5 (1)
load p3 t0 l5 (1)
load p12 t0 l5 (1)
load p11 t0 l5 (1)
load p1 t0 l5 (1)
drive t0 l5 l0 level108 level4 level112 (1)
unload p3 t0 l0 (1)
unload p12 t0 l0 (1)
drive t0 l0 l7 level107 level1 level108 (1)
load p9 t0 l7 (1)
drive t0 l7 l8 level89 level18 level107 (1)
drive t0 l8 l12 level82 level7 level89 (1)
load p2 t0 l12 (1)
load p0 t0 l12 (1)
drive t0 l12 l3 level76 level6 level82 (1)
load p4 t0 l3 (1)
load p10 t0 l3 (1)
unload p0 t0 l3 (1)
drive t0 l3 l12 level70 level6 level76 (1)
drive t0 l12 l8 level63 level7 level70 (1)
unload p9 t0 l8 (1)
drive t0 l8 l10 level43 level20 level63 (1)
drive t0 l10 l2 level40 level3 level43 (1)
load p8 t0 l2 (1)
drive t0 l2 l1 level30 level10 level40 (1)
unload p7 t0 l1 (1)
unload p6 t0 l1 (1)
unload p11 t0 l1 (1)
drive t0 l1 l11 level29 level1 level30 (1)
drive t0 l11 l5 level24 level5 level29 (1)
drive t0 l5 l0 level20 level4 level24 (1)
drive t0 l0 l7 level19 level1 level20 (1)
unload p10 t0 l7 (1)
drive t0 l7 l0 level18 level1 level19 (1)
unload p8 t0 l0 (1)
unload p2 t0 l0 (1)
drive t0 l0 l4 level4 level14 level18 (1)
load p5 t0 l4 (1)
unload p4 t0 l4 (1)
drive t0 l4 l9 level1 level3 level4 (1)
unload p5 t0 l9 (1)
unload p1 t0 l9 (1)
[t=7.67547s, 113936 KB] Plan length: 44 step(s).
[t=7.67547s, 113936 KB] Plan cost: 44
[t=7.67547s, 113936 KB] Expanded 196285 state(s).
[t=7.67547s, 113936 KB] Reopened 0 state(s).
[t=7.67547s, 113936 KB] Evaluated 968738 state(s).
[t=7.67547s, 113936 KB] Evaluations: 1165022
[t=7.67547s, 113936 KB] Generated 1377169 state(s).
[t=7.67547s, 113936 KB] Dead ends: 180299 state(s).
[t=7.67547s, 113936 KB] Number of registered states: 968738
[t=7.67547s, 113936 KB] Int hash set load factor: 968738/2097152 = 0.46193
[t=7.67547s, 113936 KB] Int hash set resizes: 21
[t=7.67547s, 113936 KB] Search time: 6.82755s
[t=7.67547s, 113936 KB] Total time: 7.67547s
Solution found.
Peak memory: 113936 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 44 

Successful plans:
Value: 44
 sas_plan 44 

validate exit code: 0

