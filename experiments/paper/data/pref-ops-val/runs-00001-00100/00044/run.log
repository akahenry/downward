INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
453 relevant atoms
548 auxiliary atoms
1001 final queue length
1271 total queue pushes
Completing instantiation... [0.000s CPU, 0.004s wall-clock]
Instantiating: [0.010s CPU, 0.012s wall-clock]
Computing fact groups...
Finding invariants...
11 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
22 of 22 variables necessary.
36 of 40 mutex groups necessary.
232 of 232 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 22
Translator derived variables: 0
Translator facts: 112
Translator goal facts: 15
Translator mutex groups: 36
Translator total mutex groups size: 144
Translator operators: 232
Translator axioms: 0
Translator task size: 1553
Translator peak memory: 30124 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.020s CPU, 0.029s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.93s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.00186465s, 46116 KB] done reading input!
[t=0.00260278s, 46504 KB] Simplifying 448 unary operators... done! [448 unary operators]
[t=0.00354863s, 46504 KB] time to simplify: 0.000945845s
[t=0.00357662s, 46504 KB] Initializing additive heuristic...
[t=0.0036071s, 46504 KB] Initializing FF heuristic...
[t=0.00361881s, 46504 KB] stop search of patterns: 3355443KB
[t=0.00366235s, 46504 KB] Generating patterns using the systematic generator...
[t=0.00370243s, 46504 KB] building causal graph...done! [t=1.2714e-05s]
[t=0.00743409s, 47388 KB] Found 3299 SGA patterns.
[t=0.0473798s, 47584 KB] Found 4436 interesting patterns.
[t=0.0473798s, 47584 KB] [15, 85, 663, 3673]
[t=0.0473798s, 47584 KB] Systematic generator number of patterns: 300
[t=0.0473798s, 47584 KB] Systematic generator total PDB size: 110108
[t=0.0473798s, 47584 KB] Systematic generator computation time: 0.0437174s
[t=0.0473798s, 47584 KB] Computing PDBs for pattern collection...
[t=0.0790787s, 47584 KB] Done computing PDBs for pattern collection: 0.0316989s
[t=0.0830806s, 47584 KB] Operators: 232
[t=0.0830806s, 47584 KB] Restrictions: 300
[t=0.0830806s, 47584 KB] Mean mentions: 79
[t=0.0830806s, 47584 KB] Mean operators: 61
[t=0.0830806s, 47584 KB] Building successor generator...done!
[t=0.0830806s, 47584 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0830806s, 47584 KB] time for successor generation creation: 0s
[t=0.0830806s, 47584 KB] Variables: 22
[t=0.0830806s, 47584 KB] FactPairs: 112
[t=0.0830806s, 47584 KB] Bytes per state: 8
[t=0.0830806s, 47584 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.0830806s, 47584 KB] g=0, 1 evaluated, 0 expanded
[t=0.0830806s, 47584 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.0830806s, 47584 KB] pruning method: none
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.0830806s, 47584 KB] g=3, 28 evaluated, 3 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.0830806s, 47584 KB] g=10, 45 evaluated, 6 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.0830806s, 47584 KB] g=17, 56 evaluated, 8 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.0830806s, 47584 KB] g=25, 79 evaluated, 17 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.0830806s, 47584 KB] g=31, 154 evaluated, 46 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.0830806s, 47584 KB] g=58, 222 evaluated, 66 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.0830806s, 47584 KB] g=61, 242 evaluated, 71 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.0830806s, 47584 KB] g=63, 256 evaluated, 73 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.0830806s, 47584 KB] g=69, 359 evaluated, 95 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.0830806s, 47584 KB] g=84, 522 evaluated, 144 expanded
[t=0.0830806s, 47584 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.0830806s, 47584 KB] g=91, 613 evaluated, 176 expanded
[t=1.24671s, 60752 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=1.24671s, 60752 KB] g=141, 233616 evaluated, 91629 expanded
[t=1.69856s, 62296 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=1.69856s, 62296 KB] g=112, 323221 evaluated, 127829 expanded
[t=3.214s, 76296 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=3.214s, 76296 KB] g=135, 611065 evaluated, 241740 expanded
[t=23.8249s, 264372 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=23.8249s, 264372 KB] g=156, 4423831 evaluated, 1753521 expanded
[t=23.8249s, 264372 KB] Solution found!
[t=23.8249s, 264372 KB] Actual search time: 23.7418s
change-color robot2 black white (5)
up robot2 tile_1-1 tile_2-1 (3)
up robot2 tile_2-1 tile_3-1 (3)
change-color robot1 white black (5)
up robot2 tile_3-1 tile_4-1 (3)
paint-up robot2 tile_5-1 tile_4-1 white (2)
down robot2 tile_4-1 tile_3-1 (1)
down robot2 tile_3-1 tile_2-1 (1)
right robot2 tile_2-1 tile_2-2 (1)
right robot2 tile_2-2 tile_2-3 (1)
up robot2 tile_2-3 tile_3-3 (3)
up robot2 tile_3-3 tile_4-3 (3)
paint-up robot2 tile_5-3 tile_4-3 white (2)
change-color robot2 white black (5)
down robot2 tile_4-3 tile_3-3 (1)
paint-up robot2 tile_4-3 tile_3-3 black (2)
change-color robot2 black white (5)
down robot2 tile_3-3 tile_2-3 (1)
paint-up robot2 tile_3-3 tile_2-3 white (2)
left robot2 tile_2-3 tile_2-2 (1)
right robot1 tile_0-2 tile_0-3 (1)
up robot1 tile_0-3 tile_1-3 (3)
paint-up robot1 tile_2-3 tile_1-3 black (2)
down robot1 tile_1-3 tile_0-3 (1)
left robot1 tile_0-3 tile_0-2 (1)
left robot1 tile_0-2 tile_0-1 (1)
down robot2 tile_2-2 tile_1-2 (1)
down robot2 tile_1-2 tile_0-2 (1)
right robot2 tile_0-2 tile_0-3 (1)
paint-up robot2 tile_1-3 tile_0-3 white (2)
left robot2 tile_0-3 tile_0-2 (1)
up robot2 tile_0-2 tile_1-2 (3)
up robot2 tile_1-2 tile_2-2 (3)
left robot2 tile_2-2 tile_2-1 (1)
change-color robot2 white black (5)
up robot2 tile_2-1 tile_3-1 (3)
paint-up robot2 tile_4-1 tile_3-1 black (2)
change-color robot2 black white (5)
down robot2 tile_3-1 tile_2-1 (1)
paint-up robot2 tile_3-1 tile_2-1 white (2)
right robot2 tile_2-1 tile_2-2 (1)
up robot1 tile_0-1 tile_1-1 (3)
paint-up robot1 tile_2-1 tile_1-1 black (2)
down robot1 tile_1-1 tile_0-1 (1)
down robot2 tile_2-2 tile_1-2 (1)
down robot2 tile_1-2 tile_0-2 (1)
right robot2 tile_0-2 tile_0-3 (1)
right robot1 tile_0-1 tile_0-2 (1)
up robot1 tile_0-2 tile_1-2 (3)
left robot2 tile_0-3 tile_0-2 (1)
left robot2 tile_0-2 tile_0-1 (1)
paint-up robot2 tile_1-1 tile_0-1 white (2)
up robot1 tile_1-2 tile_2-2 (3)
up robot1 tile_2-2 tile_3-2 (3)
up robot1 tile_3-2 tile_4-2 (3)
paint-up robot1 tile_5-2 tile_4-2 black (2)
change-color robot1 black white (5)
down robot1 tile_4-2 tile_3-2 (1)
paint-up robot1 tile_4-2 tile_3-2 white (2)
change-color robot1 white black (5)
down robot1 tile_3-2 tile_2-2 (1)
paint-up robot1 tile_3-2 tile_2-2 black (2)
change-color robot1 black white (5)
down robot1 tile_2-2 tile_1-2 (1)
change-color robot2 white black (5)
paint-up robot1 tile_2-2 tile_1-2 white (2)
down robot1 tile_1-2 tile_0-2 (1)
change-color robot1 white black (5)
paint-up robot1 tile_1-2 tile_0-2 black (2)
[t=23.8249s, 264372 KB] Plan length: 69 step(s).
[t=23.8249s, 264372 KB] Plan cost: 156
[t=23.8249s, 264372 KB] Expanded 1753522 state(s).
[t=23.8249s, 264372 KB] Reopened 0 state(s).
[t=23.8249s, 264372 KB] Evaluated 4423831 state(s).
[t=23.8249s, 264372 KB] Evaluations: 6177352
[t=23.8249s, 264372 KB] Generated 11081905 state(s).
[t=23.8249s, 264372 KB] Dead ends: 438097 state(s).
[t=23.8249s, 264372 KB] Number of registered states: 4423831
[t=23.8249s, 264372 KB] Int hash set load factor: 4423831/8388608 = 0.527362
[t=23.8249s, 264372 KB] Int hash set resizes: 23
[t=23.8249s, 264372 KB] Search time: 23.7418s
[t=23.8249s, 264372 KB] Total time: 23.8249s
Solution found.
Peak memory: 264372 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 156 

Successful plans:
Value: 156
 sas_plan 156 

validate exit code: 0

