INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 50 rules.
Computing model... [0.010s CPU, 0.005s wall-clock]
501 relevant atoms
606 auxiliary atoms
1107 final queue length
1409 total queue pushes
Completing instantiation... [0.000s CPU, 0.005s wall-clock]
Instantiating: [0.010s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
11 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.006s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.003s wall-clock]
Reordering and filtering variables...
24 of 24 variables necessary.
40 of 44 mutex groups necessary.
256 of 256 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 24
Translator derived variables: 0
Translator facts: 124
Translator goal facts: 16
Translator mutex groups: 40
Translator total mutex groups size: 160
Translator operators: 256
Translator axioms: 0
Translator task size: 1720
Translator peak memory: 30380 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.031s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.93s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.00240583s, 46116 KB] done reading input!
[t=0.00263264s, 46504 KB] Simplifying 504 unary operators... done! [504 unary operators]
[t=0.00356231s, 46504 KB] time to simplify: 0.000929673s
[t=0.00359232s, 46504 KB] Initializing additive heuristic...
[t=0.00362427s, 46504 KB] Initializing FF heuristic...
[t=0.00363642s, 46504 KB] stop search of patterns: 3355443KB
[t=0.0036833s, 46504 KB] Generating patterns using the systematic generator...
[t=0.00372319s, 46504 KB] building causal graph...done! [t=1.2844e-05s]
[t=0.0103378s, 47892 KB] Found 4276 SGA patterns.
[t=0.0623177s, 47892 KB] Found 5680 interesting patterns.
[t=0.0623177s, 47892 KB] [16, 92, 780, 4792]
[t=0.0623177s, 47892 KB] Systematic generator number of patterns: 324
[t=0.0623177s, 47892 KB] Systematic generator total PDB size: 147168
[t=0.0623177s, 47892 KB] Systematic generator computation time: 0.0586345s
[t=0.0623177s, 47892 KB] Computing PDBs for pattern collection...
[t=0.106223s, 47892 KB] Done computing PDBs for pattern collection: 0.0439054s
[t=0.106223s, 47892 KB] Operators: 256
[t=0.106223s, 47892 KB] Restrictions: 324
[t=0.106223s, 47892 KB] Mean mentions: 85
[t=0.106223s, 47892 KB] Mean operators: 67
[t=0.106223s, 47892 KB] Building successor generator...done!
[t=0.106223s, 47892 KB] peak memory difference for successor generator creation: 0 KB
[t=0.106223s, 47892 KB] time for successor generation creation: 0s
[t=0.106223s, 47892 KB] Variables: 24
[t=0.106223s, 47892 KB] FactPairs: 124
[t=0.106223s, 47892 KB] Bytes per state: 8
[t=0.106223s, 47892 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.106223s, 47892 KB] g=0, 1 evaluated, 0 expanded
[t=0.106223s, 47892 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.106223s, 47892 KB] pruning method: none
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.106223s, 47892 KB] g=2, 3 evaluated, 1 expanded
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.106223s, 47892 KB] g=4, 15 evaluated, 2 expanded
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.106223s, 47892 KB] g=6, 89 evaluated, 13 expanded
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.106223s, 47892 KB] g=10, 133 evaluated, 19 expanded
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.106223s, 47892 KB] g=12, 197 evaluated, 29 expanded
[t=0.106223s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.106223s, 47892 KB] g=14, 206 evaluated, 31 expanded
[t=0.110228s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.110228s, 47892 KB] g=20, 479 evaluated, 77 expanded
[t=0.110228s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.110228s, 47892 KB] g=21, 493 evaluated, 79 expanded
[t=0.110228s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.110228s, 47892 KB] g=24, 552 evaluated, 89 expanded
[t=0.110228s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.110228s, 47892 KB] g=44, 920 evaluated, 171 expanded
[t=0.110228s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.110228s, 47892 KB] g=57, 991 evaluated, 191 expanded
[t=0.118214s, 47892 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.118214s, 47892 KB] g=78, 2257 evaluated, 650 expanded
[t=0.754199s, 54292 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.754199s, 54292 KB] g=72, 116835 evaluated, 46276 expanded
[t=0.754199s, 54292 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.754199s, 54292 KB] g=79, 116847 evaluated, 46280 expanded
[t=2.45814s, 66124 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=2.45814s, 66124 KB] g=117, 427933 evaluated, 169684 expanded
[t=7.34995s, 107848 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=7.34995s, 107848 KB] g=135, 1286946 evaluated, 519458 expanded
[t=32.4571s, 304704 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=32.4571s, 304704 KB] g=136, 5592681 evaluated, 2263084 expanded
[t=32.4571s, 304704 KB] Solution found!
[t=32.4571s, 304704 KB] Actual search time: 32.3509s
right robot2 tile_4-2 tile_4-3 (1)
down robot2 tile_4-3 tile_3-3 (1)
paint-up robot2 tile_4-3 tile_3-3 black (2)
right robot2 tile_3-3 tile_3-4 (1)
down robot2 tile_3-4 tile_2-4 (1)
down robot1 tile_2-1 tile_1-1 (1)
down robot1 tile_1-1 tile_0-1 (1)
down robot2 tile_2-4 tile_1-4 (1)
left robot2 tile_1-4 tile_1-3 (1)
left robot2 tile_1-3 tile_1-2 (1)
left robot2 tile_1-2 tile_1-1 (1)
up robot2 tile_1-1 tile_2-1 (3)
up robot2 tile_2-1 tile_3-1 (3)
paint-up robot2 tile_4-1 tile_3-1 black (2)
change-color robot2 black white (5)
down robot2 tile_3-1 tile_2-1 (1)
paint-up robot2 tile_3-1 tile_2-1 white (2)
change-color robot2 white black (5)
down robot2 tile_2-1 tile_1-1 (1)
paint-up robot2 tile_2-1 tile_1-1 black (2)
right robot2 tile_1-1 tile_1-2 (1)
paint-up robot1 tile_1-1 tile_0-1 white (2)
change-color robot2 black white (5)
right robot2 tile_1-2 tile_1-3 (1)
up robot2 tile_1-3 tile_2-3 (3)
paint-up robot2 tile_3-3 tile_2-3 white (2)
change-color robot2 white black (5)
down robot2 tile_2-3 tile_1-3 (1)
paint-up robot2 tile_2-3 tile_1-3 black (2)
right robot2 tile_1-3 tile_1-4 (1)
right robot1 tile_0-1 tile_0-2 (1)
right robot1 tile_0-2 tile_0-3 (1)
paint-up robot1 tile_1-3 tile_0-3 white (2)
change-color robot2 black white (5)
up robot2 tile_1-4 tile_2-4 (3)
up robot2 tile_2-4 tile_3-4 (3)
paint-up robot2 tile_4-4 tile_3-4 white (2)
change-color robot2 white black (5)
down robot2 tile_3-4 tile_2-4 (1)
paint-up robot2 tile_3-4 tile_2-4 black (2)
left robot1 tile_0-3 tile_0-2 (1)
down robot2 tile_2-4 tile_1-4 (1)
change-color robot2 black white (5)
paint-up robot2 tile_2-4 tile_1-4 white (2)
down robot2 tile_1-4 tile_0-4 (1)
change-color robot2 white black (5)
paint-up robot2 tile_1-4 tile_0-4 black (2)
up robot1 tile_0-2 tile_1-2 (3)
up robot1 tile_1-2 tile_2-2 (3)
up robot1 tile_2-2 tile_3-2 (3)
paint-up robot1 tile_4-2 tile_3-2 white (2)
change-color robot1 white black (5)
down robot1 tile_3-2 tile_2-2 (1)
paint-up robot1 tile_3-2 tile_2-2 black (2)
change-color robot1 black white (5)
down robot1 tile_2-2 tile_1-2 (1)
paint-up robot1 tile_2-2 tile_1-2 white (2)
change-color robot1 white black (5)
down robot1 tile_1-2 tile_0-2 (1)
paint-up robot1 tile_1-2 tile_0-2 black (2)
[t=32.4571s, 304704 KB] Plan length: 60 step(s).
[t=32.4571s, 304704 KB] Plan cost: 136
[t=32.4571s, 304704 KB] Expanded 2263085 state(s).
[t=32.4571s, 304704 KB] Reopened 0 state(s).
[t=32.4571s, 304704 KB] Evaluated 5592684 state(s).
[t=32.4571s, 304704 KB] Evaluations: 7855768
[t=32.4571s, 304704 KB] Generated 14398875 state(s).
[t=32.4571s, 304704 KB] Dead ends: 498995 state(s).
[t=32.4571s, 304704 KB] Number of registered states: 5592684
[t=32.4571s, 304704 KB] Int hash set load factor: 5592684/8388608 = 0.6667
[t=32.4571s, 304704 KB] Int hash set resizes: 23
[t=32.4571s, 304704 KB] Search time: 32.3509s
[t=32.4571s, 304704 KB] Total time: 32.4571s
Solution found.
Peak memory: 304704 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 136 

Successful plans:
Value: 136
 sas_plan 136 

validate exit code: 0

