INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.240s CPU, 0.236s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.410s CPU, 1.420s wall-clock]
Instantiating: [1.680s CPU, 1.664s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.057s wall-clock]
Translating task: [1.650s CPU, 1.651s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [0.880s CPU, 0.876s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.240s CPU, 0.241s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 220952 KB
Writing output... [0.220s CPU, 0.220s wall-clock]
Done! [4.750s CPU, 4.742s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1795.19s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.13904s, 61168 KB] done reading input!
[t=0.147041s, 68336 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.271038s, 81268 KB] time to simplify: 0.127998s
[t=0.279039s, 81268 KB] Initializing additive heuristic...
[t=0.279039s, 81268 KB] Initializing FF heuristic...
[t=0.279039s, 81268 KB] stop search of patterns: 3355443KB
[t=0.279039s, 81268 KB] Generating patterns using the systematic generator...
[t=0.279039s, 81268 KB] building causal graph...done! [t=0.0199982s]
[t=4.54492s, 567592 KB] Found 1972347 SGA patterns.
[t=34.2992s, 679564 KB] Found 2137447 interesting patterns.
[t=34.8632s, 679564 KB] [26, 1716, 77220, 2058485]
[t=36.3911s, 679564 KB] Systematic generator number of patterns: 5226
[t=36.3911s, 679564 KB] Systematic generator total PDB size: 25033040
[t=36.3911s, 679564 KB] Systematic generator computation time: 36.1121s
[t=36.3911s, 679564 KB] Computing PDBs for pattern collection...
[t=113.084s, 679564 KB] Done computing PDBs for pattern collection: 76.6928s
[t=118.044s, 679564 KB] Operators: 39546
[t=118.044s, 679564 KB] Restrictions: 5226
[t=118.044s, 679564 KB] Mean mentions: 572
[t=118.044s, 679564 KB] Mean operators: 4333
[t=118.048s, 679564 KB] Building successor generator...done!
[t=118.06s, 679564 KB] peak memory difference for successor generator creation: 0 KB
[t=118.06s, 679564 KB] time for successor generation creation: 0.0119744s
[t=118.06s, 679564 KB] Variables: 92
[t=118.06s, 679564 KB] FactPairs: 1172
[t=118.06s, 679564 KB] Bytes per state: 28
[t=118.06s, 679564 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=118.06s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=118.06s, 679564 KB] g=0, 1 evaluated, 0 expanded
[t=118.06s, 679564 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=118.06s, 679564 KB] pruning method: none
[t=118.064s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 51
[t=118.064s, 679564 KB] g=1, 3 evaluated, 1 expanded
[t=118.064s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=118.064s, 679564 KB] g=1, 7 evaluated, 1 expanded
[t=118.064s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=118.064s, 679564 KB] g=2, 30 evaluated, 2 expanded
[t=118.076s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=118.076s, 679564 KB] g=3, 100 evaluated, 5 expanded
[t=118.08s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=118.08s, 679564 KB] g=4, 121 evaluated, 6 expanded
[t=118.084s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=118.084s, 679564 KB] g=5, 141 evaluated, 7 expanded
[t=118.084s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=118.084s, 679564 KB] g=6, 160 evaluated, 8 expanded
[t=118.084s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=118.084s, 679564 KB] g=6, 164 evaluated, 8 expanded
[t=118.088s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=118.088s, 679564 KB] g=7, 196 evaluated, 9 expanded
[t=118.096s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=118.096s, 679564 KB] g=9, 248 evaluated, 11 expanded
[t=118.1s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=118.1s, 679564 KB] g=10, 264 evaluated, 12 expanded
[t=118.1s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=118.1s, 679564 KB] g=10, 265 evaluated, 12 expanded
[t=118.104s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=118.104s, 679564 KB] g=11, 290 evaluated, 13 expanded
[t=118.116s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=118.116s, 679564 KB] g=12, 363 evaluated, 16 expanded
[t=118.12s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=118.12s, 679564 KB] g=13, 390 evaluated, 17 expanded
[t=118.12s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=118.12s, 679564 KB] g=14, 406 evaluated, 18 expanded
[t=118.124s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=118.124s, 679564 KB] g=15, 418 evaluated, 19 expanded
[t=118.124s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=118.124s, 679564 KB] g=15, 437 evaluated, 19 expanded
[t=118.128s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=118.128s, 679564 KB] g=16, 446 evaluated, 20 expanded
[t=118.132s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=118.132s, 679564 KB] g=17, 484 evaluated, 21 expanded
[t=118.136s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=118.136s, 679564 KB] g=18, 528 evaluated, 23 expanded
[t=118.14s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=118.14s, 679564 KB] g=19, 548 evaluated, 24 expanded
[t=118.144s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=118.144s, 679564 KB] g=20, 567 evaluated, 25 expanded
[t=118.148s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=118.148s, 679564 KB] g=21, 597 evaluated, 26 expanded
[t=118.268s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=118.268s, 679564 KB] g=28, 1337 evaluated, 57 expanded
[t=125.551s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=125.551s, 679564 KB] g=32, 41229 evaluated, 2118 expanded
[t=125.563s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=125.563s, 679564 KB] g=34, 41294 evaluated, 2121 expanded
[t=130.955s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=130.955s, 679564 KB] g=38, 71009 evaluated, 3643 expanded
[t=130.967s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=130.967s, 679564 KB] g=40, 71074 evaluated, 3646 expanded
[t=134.815s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=134.815s, 679564 KB] g=44, 92464 evaluated, 4723 expanded
[t=134.827s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=134.827s, 679564 KB] g=46, 92529 evaluated, 4726 expanded
[t=137.343s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=137.343s, 679564 KB] g=50, 106828 evaluated, 5419 expanded
[t=137.351s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=137.351s, 679564 KB] g=52, 106892 evaluated, 5422 expanded
[t=139.011s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=139.011s, 679564 KB] g=56, 116432 evaluated, 5877 expanded
[t=139.023s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=139.023s, 679564 KB] g=58, 116497 evaluated, 5880 expanded
[t=139.879s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=139.879s, 679564 KB] g=62, 121448 evaluated, 6119 expanded
[t=139.883s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=139.883s, 679564 KB] g=64, 121487 evaluated, 6121 expanded
[t=140.279s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=140.279s, 679564 KB] g=68, 123799 evaluated, 6232 expanded
[t=140.287s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=140.287s, 679564 KB] g=70, 123837 evaluated, 6234 expanded
[t=140.447s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=140.447s, 679564 KB] g=74, 124829 evaluated, 6281 expanded
[t=140.455s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=140.455s, 679564 KB] g=75, 124879 evaluated, 6283 expanded
[t=140.455s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=140.455s, 679564 KB] g=76, 124893 evaluated, 6284 expanded
[t=140.459s, 679564 KB] Solution found!
[t=140.459s, 679564 KB] Actual search time: 22.3992s
move-car-to-curb car_13 car_02 curb_13 (1)
move-car-to-car car_09 car_16 car_13 (1)
move-curb-to-car car_16 curb_00 car_02 (1)
move-car-to-curb car_04 car_11 curb_00 (1)
move-car-to-car car_18 car_00 car_04 (1)
move-car-to-car car_14 car_08 car_00 (1)
move-car-to-car car_22 car_24 car_08 (1)
move-car-to-car car_06 car_25 car_24 (1)
move-curb-to-car car_25 curb_09 car_11 (1)
move-car-to-curb car_09 car_13 curb_09 (1)
move-car-to-car car_15 car_07 car_13 (1)
move-car-to-car car_21 car_23 car_07 (1)
move-curb-to-car car_23 curb_03 car_09 (1)
move-car-to-curb car_03 car_01 curb_03 (1)
move-car-to-car car_17 car_05 car_03 (1)
move-car-to-car car_15 car_13 car_01 (1)
move-car-to-car car_12 car_19 car_13 (1)
move-curb-to-car car_19 curb_04 car_05 (1)
move-car-to-curb car_06 car_24 curb_04 (1)
move-car-to-car car_20 car_10 car_06 (1)
move-curb-to-car car_24 curb_01 car_10 (1)
move-car-to-curb car_16 car_02 curb_01 (1)
move-curb-to-car car_02 curb_12 car_16 (1)
move-car-to-curb car_12 car_13 curb_12 (1)
move-car-to-car car_02 car_16 car_12 (1)
move-curb-to-car car_16 curb_01 car_13 (1)
move-car-to-curb car_22 car_08 curb_01 (1)
move-curb-to-car car_08 curb_02 car_22 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_16 car_13 car_02 (1)
move-car-to-car car_08 car_22 car_12 (1)
move-curb-to-car car_22 curb_01 car_13 (1)
move-car-to-curb car_24 car_10 curb_01 (1)
move-curb-to-car car_10 curb_08 car_24 (1)
move-car-to-curb car_08 car_12 curb_08 (1)
move-car-to-car car_22 car_13 car_08 (1)
move-car-to-car car_10 car_24 car_12 (1)
move-curb-to-car car_24 curb_01 car_13 (1)
move-car-to-curb car_25 car_11 curb_01 (1)
move-curb-to-car car_11 curb_10 car_25 (1)
move-car-to-curb car_10 car_12 curb_10 (1)
move-car-to-car car_24 car_13 car_10 (1)
move-car-to-car car_11 car_25 car_12 (1)
move-curb-to-car car_25 curb_01 car_13 (1)
move-car-to-curb car_14 car_00 curb_01 (1)
move-curb-to-car car_00 curb_11 car_14 (1)
move-car-to-curb car_11 car_12 curb_11 (1)
move-car-to-car car_25 car_13 car_11 (1)
move-car-to-car car_00 car_14 car_12 (1)
move-curb-to-car car_14 curb_01 car_13 (1)
move-car-to-curb car_18 car_04 curb_01 (1)
move-curb-to-car car_04 curb_00 car_18 (1)
move-car-to-curb car_00 car_12 curb_00 (1)
move-car-to-car car_14 car_13 car_00 (1)
move-car-to-car car_04 car_18 car_12 (1)
move-curb-to-car car_18 curb_01 car_13 (1)
move-car-to-curb car_20 car_06 curb_01 (1)
move-curb-to-car car_06 curb_04 car_20 (1)
move-car-to-curb car_04 car_12 curb_04 (1)
move-car-to-car car_18 car_13 car_04 (1)
move-car-to-car car_06 car_20 car_13 (1)
move-curb-to-car car_20 curb_01 car_12 (1)
move-car-to-curb car_19 car_05 curb_01 (1)
move-curb-to-car car_05 curb_06 car_19 (1)
move-car-to-curb car_06 car_13 curb_06 (1)
move-car-to-car car_20 car_12 car_06 (1)
move-car-to-car car_05 car_19 car_13 (1)
move-curb-to-car car_19 curb_01 car_12 (1)
move-car-to-curb car_15 car_01 curb_01 (1)
move-curb-to-car car_01 curb_05 car_15 (1)
move-car-to-curb car_05 car_13 curb_05 (1)
move-car-to-car car_19 car_12 car_05 (1)
move-car-to-car car_01 car_15 car_12 (1)
move-curb-to-car car_15 curb_01 car_13 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_15 car_13 car_01 (1)
[t=140.459s, 679564 KB] Plan length: 76 step(s).
[t=140.459s, 679564 KB] Plan cost: 76
[t=140.459s, 679564 KB] Expanded 6285 state(s).
[t=140.459s, 679564 KB] Reopened 0 state(s).
[t=140.459s, 679564 KB] Evaluated 124917 state(s).
[t=140.459s, 679564 KB] Evaluations: 131201
[t=140.459s, 679564 KB] Generated 162422 state(s).
[t=140.459s, 679564 KB] Dead ends: 10764 state(s).
[t=140.459s, 679564 KB] Number of registered states: 124917
[t=140.459s, 679564 KB] Int hash set load factor: 124917/262144 = 0.476521
[t=140.459s, 679564 KB] Int hash set resizes: 18
[t=140.459s, 679564 KB] Search time: 22.3992s
[t=140.459s, 679564 KB] Total time: 140.459s
Solution found.
Peak memory: 679564 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 76 

Successful plans:
Value: 76
 sas_plan 76 

validate exit code: 0

