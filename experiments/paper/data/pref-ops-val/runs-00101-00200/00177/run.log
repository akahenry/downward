INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.160s CPU, 0.161s wall-clock]
27101 relevant atoms
8686 auxiliary atoms
35787 final queue length
88923 total queue pushes
Completing instantiation... [0.710s CPU, 0.715s wall-clock]
Instantiating: [0.880s CPU, 0.883s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.017s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.030s CPU, 0.020s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.031s wall-clock]
Translating task: [0.660s CPU, 0.655s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.340s CPU, 0.346s wall-clock]
Reordering and filtering variables...
36 of 36 variables necessary.
18 of 36 mutex groups necessary.
25092 of 25092 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.070s CPU, 0.069s wall-clock]
Translator variables: 36
Translator derived variables: 0
Translator facts: 360
Translator goal facts: 36
Translator mutex groups: 18
Translator total mutex groups size: 324
Translator operators: 25092
Translator axioms: 0
Translator task size: 126522
Translator peak memory: 122252 KB
Writing output... [0.100s CPU, 0.090s wall-clock]
Done! [2.110s CPU, 2.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.85s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0636251s, 53480 KB] done reading input!
[t=0.0676255s, 55960 KB] Simplifying 50490 unary operators... done! [49878 unary operators]
[t=0.0796244s, 60736 KB] time to simplify: 0.0159988s
[t=0.0836243s, 60736 KB] Initializing additive heuristic...
[t=0.0836243s, 60736 KB] Initializing FF heuristic...
[t=0.0836243s, 60736 KB] stop search of patterns: 3355443KB
[t=0.0836243s, 60736 KB] Generating patterns using the systematic generator...
[t=0.0836243s, 60736 KB] building causal graph...done! [t=0.0040005s]
[t=0.131564s, 62184 KB] Found 21831 SGA patterns.
[t=0.749652s, 67624 KB] Found 62682 interesting patterns.
[t=0.753572s, 67624 KB] [36, 477, 6324, 55845]
[t=0.761571s, 69176 KB] Systematic generator number of patterns: 1539
[t=0.761571s, 69176 KB] Systematic generator total PDB size: 4972212
[t=0.761571s, 69176 KB] Systematic generator computation time: 0.677947s
[t=0.761571s, 69176 KB] Computing PDBs for pattern collection...
[t=11.4329s, 78056 KB] Done computing PDBs for pattern collection: 10.6713s
[t=12.0048s, 170400 KB] Operators: 25092
[t=12.0048s, 170400 KB] Restrictions: 1539
[t=12.0048s, 170400 KB] Mean mentions: 280
[t=12.0048s, 170400 KB] Mean operators: 4572
[t=12.0048s, 170400 KB] Building successor generator...done!
[t=12.0088s, 171968 KB] peak memory difference for successor generator creation: 1568 KB
[t=12.0088s, 171968 KB] time for successor generation creation: 0.0039993s
[t=12.0088s, 171968 KB] Variables: 36
[t=12.0088s, 171968 KB] FactPairs: 360
[t=12.0088s, 171968 KB] Bytes per state: 16
[t=12.0088s, 171968 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=12.0088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 61
[t=12.0088s, 171968 KB] g=0, 1 evaluated, 0 expanded
[t=12.0088s, 171968 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 61
[t=12.0088s, 171968 KB] pruning method: none
[t=12.0088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 60
[t=12.0088s, 171968 KB] g=1, 4 evaluated, 1 expanded
[t=12.0168s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 58
[t=12.0168s, 171968 KB] g=4, 156 evaluated, 2 expanded
[t=12.0168s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 57
[t=12.0168s, 171968 KB] g=5, 190 evaluated, 3 expanded
[t=12.0208s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 56
[t=12.0208s, 171968 KB] g=7, 238 evaluated, 3 expanded
[t=12.0208s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 55
[t=12.0208s, 171968 KB] g=8, 255 evaluated, 4 expanded
[t=12.0248s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 54
[t=12.0248s, 171968 KB] g=9, 330 evaluated, 5 expanded
[t=12.0288s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 53
[t=12.0288s, 171968 KB] g=12, 481 evaluated, 6 expanded
[t=12.0328s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=12.0328s, 171968 KB] g=13, 516 evaluated, 7 expanded
[t=12.0328s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 51
[t=12.0328s, 171968 KB] g=14, 578 evaluated, 8 expanded
[t=12.0328s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=12.0328s, 171968 KB] g=16, 601 evaluated, 8 expanded
[t=12.0448s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=12.0448s, 171968 KB] g=16, 840 evaluated, 11 expanded
[t=12.0608s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=12.0608s, 171968 KB] g=20, 1329 evaluated, 17 expanded
[t=12.0648s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=12.0648s, 171968 KB] g=21, 1376 evaluated, 18 expanded
[t=12.0648s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=12.0648s, 171968 KB] g=21, 1400 evaluated, 18 expanded
[t=12.0648s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=12.0648s, 171968 KB] g=23, 1408 evaluated, 18 expanded
[t=12.0688s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=12.0688s, 171968 KB] g=24, 1463 evaluated, 19 expanded
[t=12.0728s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=12.0728s, 171968 KB] g=25, 1563 evaluated, 20 expanded
[t=12.0728s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=12.0728s, 171968 KB] g=26, 1644 evaluated, 21 expanded
[t=12.0888s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=12.0888s, 171968 KB] g=30, 2064 evaluated, 26 expanded
[t=12.0928s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=12.0928s, 171968 KB] g=31, 2105 evaluated, 27 expanded
[t=12.0928s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=12.0928s, 171968 KB] g=31, 2129 evaluated, 27 expanded
[t=12.0928s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=12.0928s, 171968 KB] g=33, 2145 evaluated, 27 expanded
[t=12.0928s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=12.0928s, 171968 KB] g=34, 2191 evaluated, 28 expanded
[t=12.0968s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=12.0968s, 171968 KB] g=35, 2291 evaluated, 29 expanded
[t=12.1008s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=12.1008s, 171968 KB] g=36, 2373 evaluated, 30 expanded
[t=12.1128s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=12.1128s, 171968 KB] g=40, 2718 evaluated, 34 expanded
[t=12.1128s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=12.1128s, 171968 KB] g=41, 2753 evaluated, 35 expanded
[t=12.1168s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=12.1168s, 171968 KB] g=41, 2777 evaluated, 35 expanded
[t=12.1168s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=12.1168s, 171968 KB] g=43, 2801 evaluated, 35 expanded
[t=12.1168s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=12.1168s, 171968 KB] g=44, 2838 evaluated, 36 expanded
[t=12.1208s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=12.1208s, 171968 KB] g=45, 2938 evaluated, 37 expanded
[t=12.1248s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=12.1248s, 171968 KB] g=46, 3021 evaluated, 38 expanded
[t=12.1328s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=12.1328s, 171968 KB] g=50, 3291 evaluated, 41 expanded
[t=12.1328s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=12.1328s, 171968 KB] g=51, 3320 evaluated, 42 expanded
[t=12.1368s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=12.1368s, 171968 KB] g=51, 3344 evaluated, 42 expanded
[t=12.1368s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=12.1368s, 171968 KB] g=53, 3376 evaluated, 42 expanded
[t=12.1368s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=12.1368s, 171968 KB] g=54, 3404 evaluated, 43 expanded
[t=12.1408s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=12.1408s, 171968 KB] g=55, 3504 evaluated, 44 expanded
[t=12.1448s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=12.1448s, 171968 KB] g=61, 3640 evaluated, 46 expanded
[t=12.1488s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=12.1488s, 171968 KB] g=62, 3752 evaluated, 47 expanded
[t=12.1568s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=12.1568s, 171968 KB] g=69, 4040 evaluated, 50 expanded
[t=12.1568s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=12.1568s, 171968 KB] g=68, 4050 evaluated, 51 expanded
[t=12.1648s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=12.1648s, 171968 KB] g=72, 4274 evaluated, 53 expanded
[t=12.1688s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=12.1688s, 171968 KB] g=75, 4363 evaluated, 54 expanded
[t=12.1688s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=12.1688s, 171968 KB] g=74, 4372 evaluated, 55 expanded
[t=12.2088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=12.2088s, 171968 KB] g=80, 5634 evaluated, 71 expanded
[t=12.2088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=12.2088s, 171968 KB] g=82, 5641 evaluated, 71 expanded
[t=12.3008s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=12.3008s, 171968 KB] g=88, 8644 evaluated, 110 expanded
[t=12.3048s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=12.3048s, 171968 KB] g=89, 8729 evaluated, 111 expanded
[t=12.3088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=12.3088s, 171968 KB] g=92, 8858 evaluated, 112 expanded
[t=12.3088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=12.3088s, 171968 KB] g=93, 8868 evaluated, 113 expanded
[t=12.3088s, 171968 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=12.3088s, 171968 KB] g=96, 8955 evaluated, 114 expanded
[t=12.3128s, 171968 KB] Solution found!
[t=12.3128s, 171968 KB] Actual search time: 0.303992s
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-1 (3)
rotate-2 seg-in-4 seg-out-1 car-in-4 car-out-3 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-in-1 (1)
rotate-2 seg-in-4 seg-out-3 car-out-3 car-out-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-5 car-in-4 (1)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-5 (3)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-out-4 (3)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-4 car-in-5 (1)
rotate-2 seg-in-6 seg-out-1 car-in-6 car-in-4 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-in-6 (3)
analyze-2 seg-in-1 seg-out-1 car-in-6 car-out-5 (3)
rotate-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (1)
rotate-2 seg-in-6 seg-out-1 car-in-4 car-in-6 (1)
rotate-2 seg-in-7 seg-out-1 car-in-7 car-in-4 (1)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-in-7 (3)
analyze-2 seg-in-1 seg-out-1 car-in-7 car-out-6 (3)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (1)
rotate-2 seg-in-7 seg-out-1 car-in-4 car-in-7 (1)
rotate-2 seg-in-8 seg-out-1 car-in-8 car-in-4 (1)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-1 car-out-7 car-in-8 (3)
analyze-2 seg-in-1 seg-out-1 car-in-8 car-out-7 (3)
rotate-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (1)
rotate-2 seg-in-8 seg-out-1 car-in-4 car-in-8 (1)
analyze-2 seg-in-1 seg-out-1 car-in-1 car-in-4 (3)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-in-1 (3)
rotate-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (1)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-8 (1)
rotate-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (1)
rotate-2 seg-in-1 seg-out-9 car-in-1 car-out-9 (1)
analyze-2 seg-in-1 seg-out-1 car-out-9 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-9 (1)
rotate-2 seg-in-2 seg-out-9 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-9 car-out-9 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
rotate-2 seg-in-3 seg-out-9 car-in-3 car-out-9 (1)
rotate-2 seg-in-1 seg-out-9 car-in-1 car-in-3 (1)
rotate-2 seg-in-9 seg-out-9 car-in-9 car-in-1 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-9 car-in-3 car-in-9 (1)
rotate-2 seg-in-3 seg-out-9 car-out-9 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-9 car-out-1 (3)
rotate-2 seg-in-9 seg-out-1 car-in-1 car-in-9 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
[t=12.3128s, 171968 KB] Plan length: 58 step(s).
[t=12.3128s, 171968 KB] Plan cost: 94
[t=12.3128s, 171968 KB] Expanded 115 state(s).
[t=12.3128s, 171968 KB] Reopened 0 state(s).
[t=12.3128s, 171968 KB] Evaluated 9027 state(s).
[t=12.3128s, 171968 KB] Evaluations: 9141
[t=12.3128s, 171968 KB] Generated 9348 state(s).
[t=12.3128s, 171968 KB] Dead ends: 0 state(s).
[t=12.3128s, 171968 KB] Number of registered states: 9027
[t=12.3128s, 171968 KB] Int hash set load factor: 9027/16384 = 0.550964
[t=12.3128s, 171968 KB] Int hash set resizes: 14
[t=12.3128s, 171968 KB] Search time: 0.303992s
[t=12.3128s, 171968 KB] Total time: 12.3128s
Solution found.
Peak memory: 171968 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 94 

Successful plans:
Value: 94
 sas_plan 94 

validate exit code: 0

