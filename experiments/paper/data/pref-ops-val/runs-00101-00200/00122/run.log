INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.140s CPU, 0.149s wall-clock]
26339 relevant atoms
3192 auxiliary atoms
29531 final queue length
85444 total queue pushes
Completing instantiation... [0.770s CPU, 0.769s wall-clock]
Instantiating: [0.930s CPU, 0.924s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
56 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.034s wall-clock]
Translating task: [0.970s CPU, 0.966s wall-clock]
29766 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
22 propositions removed
Detecting unreachable propositions: [0.500s CPU, 0.499s wall-clock]
Reordering and filtering variables...
78 of 78 variables necessary.
34 of 56 mutex groups necessary.
23958 of 23958 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.140s CPU, 0.143s wall-clock]
Translator variables: 78
Translator derived variables: 0
Translator facts: 860
Translator goal facts: 22
Translator mutex groups: 34
Translator total mutex groups size: 782
Translator operators: 23958
Translator axioms: 0
Translator task size: 195584
Translator peak memory: 146224 KB
Writing output... [0.130s CPU, 0.134s wall-clock]
Done! [2.730s CPU, 2.723s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.22s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0799865s, 55220 KB] done reading input!
[t=0.0879876s, 60964 KB] Simplifying 83226 unary operators... done! [83226 unary operators]
[t=0.155985s, 68384 KB] time to simplify: 0.0679977s
[t=0.159986s, 68384 KB] Initializing additive heuristic...
[t=0.159986s, 68384 KB] Initializing FF heuristic...
[t=0.159986s, 68384 KB] stop search of patterns: 3355443KB
[t=0.159986s, 68384 KB] Generating patterns using the systematic generator...
[t=0.159986s, 68384 KB] building causal graph...done! [t=0.00799867s]
[t=2.33616s, 319256 KB] Found 1017500 SGA patterns.
[t=16.6143s, 371736 KB] Found 1099890 interesting patterns.
[t=16.8543s, 371736 KB] [22, 1232, 46816, 1051820]
[t=17.5183s, 371736 KB] Systematic generator number of patterns: 3762
[t=17.5183s, 371736 KB] Systematic generator total PDB size: 11186748
[t=17.5183s, 371736 KB] Systematic generator computation time: 17.3583s
[t=17.5183s, 371736 KB] Computing PDBs for pattern collection...
[t=46.6369s, 371736 KB] Done computing PDBs for pattern collection: 29.1186s
[t=48.4129s, 371736 KB] Operators: 23958
[t=48.4129s, 371736 KB] Restrictions: 3762
[t=48.4129s, 371736 KB] Mean mentions: 483
[t=48.4129s, 371736 KB] Mean operators: 3079
[t=48.4129s, 371736 KB] Building successor generator...done!
[t=48.4209s, 371736 KB] peak memory difference for successor generator creation: 0 KB
[t=48.4209s, 371736 KB] time for successor generation creation: 0.00799805s
[t=48.4209s, 371736 KB] Variables: 78
[t=48.4209s, 371736 KB] FactPairs: 860
[t=48.4209s, 371736 KB] Bytes per state: 24
[t=48.4209s, 371736 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=48.4209s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=48.4209s, 371736 KB] g=0, 1 evaluated, 0 expanded
[t=48.4209s, 371736 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=48.4209s, 371736 KB] pruning method: none
[t=48.4209s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=48.4209s, 371736 KB] g=1, 2 evaluated, 1 expanded
[t=48.4209s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=48.4209s, 371736 KB] g=1, 7 evaluated, 1 expanded
[t=48.4249s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=48.4249s, 371736 KB] g=2, 13 evaluated, 2 expanded
[t=48.4409s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=48.4409s, 371736 KB] g=4, 152 evaluated, 8 expanded
[t=48.4449s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=48.4449s, 371736 KB] g=5, 165 evaluated, 9 expanded
[t=48.4449s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=48.4449s, 371736 KB] g=6, 176 evaluated, 10 expanded
[t=48.4489s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=48.4489s, 371736 KB] g=7, 200 evaluated, 11 expanded
[t=48.4608s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=48.4608s, 371736 KB] g=9, 306 evaluated, 16 expanded
[t=48.4608s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=48.4608s, 371736 KB] g=10, 318 evaluated, 17 expanded
[t=48.4648s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=48.4648s, 371736 KB] g=10, 333 evaluated, 17 expanded
[t=48.4648s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=48.4648s, 371736 KB] g=11, 342 evaluated, 18 expanded
[t=48.4648s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=48.4648s, 371736 KB] g=11, 354 evaluated, 18 expanded
[t=48.4688s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=48.4688s, 371736 KB] g=12, 363 evaluated, 19 expanded
[t=48.4768s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=48.4768s, 371736 KB] g=14, 453 evaluated, 23 expanded
[t=48.4808s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=48.4808s, 371736 KB] g=15, 467 evaluated, 24 expanded
[t=48.4808s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=48.4808s, 371736 KB] g=16, 483 evaluated, 25 expanded
[t=48.4848s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=48.4848s, 371736 KB] g=17, 503 evaluated, 26 expanded
[t=48.4928s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=48.4928s, 371736 KB] g=18, 561 evaluated, 29 expanded
[t=48.4928s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=48.4928s, 371736 KB] g=19, 573 evaluated, 30 expanded
[t=48.4928s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=48.4928s, 371736 KB] g=20, 584 evaluated, 31 expanded
[t=48.4968s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=48.4968s, 371736 KB] g=21, 609 evaluated, 32 expanded
[t=48.5008s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=48.5008s, 371736 KB] g=22, 651 evaluated, 34 expanded
[t=48.5048s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=48.5048s, 371736 KB] g=24, 688 evaluated, 36 expanded
[t=48.5888s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=48.5888s, 371736 KB] g=29, 1379 evaluated, 75 expanded
[t=48.6008s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=48.6008s, 371736 KB] g=31, 1456 evaluated, 79 expanded
[t=49.2408s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=49.2408s, 371736 KB] g=35, 6324 evaluated, 361 expanded
[t=49.2488s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=49.2488s, 371736 KB] g=37, 6409 evaluated, 365 expanded
[t=49.2528s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=49.2528s, 371736 KB] g=38, 6429 evaluated, 366 expanded
[t=49.7568s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=49.7568s, 371736 KB] g=43, 10352 evaluated, 589 expanded
[t=49.7568s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=49.7568s, 371736 KB] g=44, 10364 evaluated, 590 expanded
[t=49.9927s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=49.9927s, 371736 KB] g=49, 12248 evaluated, 696 expanded
[t=49.9927s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=49.9927s, 371736 KB] g=50, 12265 evaluated, 697 expanded
[t=50.0807s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=50.0807s, 371736 KB] g=54, 12980 evaluated, 737 expanded
[t=50.0807s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=50.0807s, 371736 KB] g=55, 13021 evaluated, 739 expanded
[t=50.0847s, 371736 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=50.0847s, 371736 KB] g=56, 13034 evaluated, 740 expanded
[t=50.0847s, 371736 KB] Solution found!
[t=50.0847s, 371736 KB] Actual search time: 1.66389s
move-car-to-curb car_11 car_19 curb_11 (1)
move-car-to-car car_00 car_08 car_11 (1)
move-car-to-car car_13 car_20 car_19 (1)
move-curb-to-car car_20 curb_00 car_08 (1)
move-car-to-curb car_00 car_11 curb_00 (1)
move-car-to-car car_04 car_21 car_00 (1)
move-car-to-car car_06 car_14 car_11 (1)
move-curb-to-car car_14 curb_04 car_21 (1)
move-car-to-curb car_04 car_00 curb_04 (1)
move-car-to-car car_16 car_02 car_04 (1)
move-car-to-car car_14 car_21 car_02 (1)
move-car-to-car car_13 car_19 car_00 (1)
move-car-to-car car_17 car_07 car_21 (1)
move-curb-to-car car_19 curb_05 car_07 (1)
move-car-to-curb car_05 car_10 curb_05 (1)
move-car-to-car car_17 car_21 car_05 (1)
move-car-to-car car_18 car_09 car_10 (1)
move-curb-to-car car_21 curb_10 car_09 (1)
move-car-to-curb car_03 car_01 curb_10 (1)
move-car-to-car car_13 car_00 car_01 (1)
move-car-to-car car_15 car_12 car_03 (1)
move-curb-to-car car_12 curb_01 car_00 (1)
move-car-to-curb car_06 car_11 curb_01 (1)
move-car-to-car car_18 car_10 car_06 (1)
move-curb-to-car car_10 curb_02 car_11 (1)
move-car-to-curb car_15 car_03 curb_02 (1)
move-curb-to-car car_03 curb_10 car_15 (1)
move-car-to-curb car_10 car_11 curb_10 (1)
move-car-to-car car_03 car_15 car_11 (1)
move-curb-to-car car_15 curb_02 car_10 (1)
move-car-to-curb car_21 car_09 curb_02 (1)
move-curb-to-car car_09 curb_03 car_21 (1)
move-car-to-curb car_03 car_11 curb_03 (1)
move-car-to-car car_15 car_10 car_03 (1)
move-car-to-car car_09 car_21 car_10 (1)
move-curb-to-car car_21 curb_02 car_11 (1)
move-car-to-curb car_13 car_01 curb_02 (1)
move-curb-to-car car_01 curb_09 car_13 (1)
move-car-to-curb car_09 car_10 curb_09 (1)
move-car-to-car car_21 car_11 car_09 (1)
move-car-to-car car_01 car_13 car_11 (1)
move-curb-to-car car_13 curb_02 car_10 (1)
move-car-to-curb car_18 car_06 curb_02 (1)
move-curb-to-car car_06 curb_01 car_18 (1)
move-car-to-curb car_01 car_11 curb_01 (1)
move-car-to-car car_13 car_10 car_01 (1)
move-car-to-car car_06 car_18 car_10 (1)
move-curb-to-car car_18 curb_02 car_11 (1)
move-car-to-curb car_14 car_02 curb_02 (1)
move-curb-to-car car_02 curb_06 car_14 (1)
move-car-to-curb car_06 car_10 curb_06 (1)
move-car-to-car car_18 car_11 car_06 (1)
move-car-to-car car_02 car_14 car_10 (1)
move-curb-to-car car_14 curb_02 car_11 (1)
move-car-to-curb car_02 car_10 curb_02 (1)
move-car-to-car car_14 car_11 car_02 (1)
[t=50.0847s, 371736 KB] Plan length: 56 step(s).
[t=50.0847s, 371736 KB] Plan cost: 56
[t=50.0847s, 371736 KB] Expanded 741 state(s).
[t=50.0847s, 371736 KB] Reopened 0 state(s).
[t=50.0847s, 371736 KB] Evaluated 13053 state(s).
[t=50.0847s, 371736 KB] Evaluations: 13793
[t=50.0847s, 371736 KB] Generated 16135 state(s).
[t=50.0847s, 371736 KB] Dead ends: 1230 state(s).
[t=50.0847s, 371736 KB] Number of registered states: 13053
[t=50.0847s, 371736 KB] Int hash set load factor: 13053/16384 = 0.796692
[t=50.0847s, 371736 KB] Int hash set resizes: 14
[t=50.0847s, 371736 KB] Search time: 1.66389s
[t=50.0847s, 371736 KB] Total time: 50.0847s
Solution found.
Peak memory: 371736 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 56 

Successful plans:
Value: 56
 sas_plan 56 

validate exit code: 0

