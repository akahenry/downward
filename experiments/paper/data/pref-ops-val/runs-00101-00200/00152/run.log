INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 25 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
461 relevant atoms
611 auxiliary atoms
1072 final queue length
1647 total queue pushes
Completing instantiation... [0.010s CPU, 0.006s wall-clock]
Instantiating: [0.010s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
7 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.010s CPU, 0.005s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
34 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]
Reordering and filtering variables...
34 of 34 variables necessary.
0 of 34 mutex groups necessary.
185 of 185 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 34
Translator derived variables: 0
Translator facts: 100
Translator goal facts: 33
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 185
Translator axioms: 0
Translator task size: 1634
Translator peak memory: 30380 KB
Writing output... [0.000s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.030s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.93s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0017951s, 46116 KB] done reading input!
[t=0.00248369s, 46512 KB] Simplifying 641 unary operators... done! [641 unary operators]
[t=0.00375951s, 46512 KB] time to simplify: 0.00127582s
[t=0.00379272s, 46512 KB] Initializing additive heuristic...
[t=0.00383598s, 46512 KB] Initializing FF heuristic...
[t=0.00384778s, 46512 KB] stop search of patterns: 3355443KB
[t=0.00389756s, 46512 KB] Generating patterns using the systematic generator...
[t=0.00393895s, 46512 KB] building causal graph...done! [t=1.2945e-05s]
[t=0.0158734s, 49088 KB] Found 8209 SGA patterns.
[t=0.0917562s, 49088 KB] Found 8209 interesting patterns.
[t=0.0917562s, 49088 KB] [33, 123, 896, 7157]
[t=0.0917562s, 49088 KB] Systematic generator number of patterns: 468
[t=0.0917562s, 49088 KB] Systematic generator total PDB size: 50062
[t=0.0917562s, 49088 KB] Systematic generator computation time: 0.0878587s
[t=0.0917562s, 49088 KB] Computing PDBs for pattern collection...
[t=0.12326s, 49088 KB] Done computing PDBs for pattern collection: 0.0315037s
[t=0.12326s, 49088 KB] Operators: 185
[t=0.12326s, 49088 KB] Restrictions: 468
[t=0.12326s, 49088 KB] Mean mentions: 285
[t=0.12326s, 49088 KB] Mean operators: 113
[t=0.12326s, 49088 KB] Building successor generator...done!
[t=0.12326s, 49088 KB] peak memory difference for successor generator creation: 0 KB
[t=0.127261s, 49088 KB] time for successor generation creation: 0s
[t=0.127261s, 49088 KB] Variables: 34
[t=0.127261s, 49088 KB] FactPairs: 100
[t=0.127261s, 49088 KB] Bytes per state: 8
[t=0.127261s, 49088 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.127261s, 49088 KB] g=0, 1 evaluated, 0 expanded
[t=0.127261s, 49088 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.127261s, 49088 KB] pruning method: none
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.127261s, 49088 KB] g=1, 4 evaluated, 1 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.127261s, 49088 KB] g=2, 22 evaluated, 5 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.127261s, 49088 KB] g=2, 29 evaluated, 5 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.127261s, 49088 KB] g=3, 34 evaluated, 7 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.127261s, 49088 KB] g=3, 46 evaluated, 8 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.127261s, 49088 KB] g=4, 51 evaluated, 10 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.127261s, 49088 KB] g=6, 77 evaluated, 17 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.127261s, 49088 KB] g=8, 158 evaluated, 33 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.127261s, 49088 KB] g=10, 189 evaluated, 45 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.127261s, 49088 KB] g=11, 247 evaluated, 82 expanded
[t=0.127261s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.127261s, 49088 KB] g=13, 268 evaluated, 96 expanded
[t=0.13126s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=0.13126s, 49088 KB] g=12, 597 evaluated, 302 expanded
[t=0.13126s, 49088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=0.13126s, 49088 KB] g=13, 599 evaluated, 303 expanded
[t=0.13126s, 49088 KB] Solution found!
[t=0.13126s, 49088 KB] Actual search time: 0.00399907s
jump-new-move pos-6-4 pos-6-3 pos-6-2 (1)
end-move pos-6-2 (0)
jump-new-move pos-2-2 pos-3-2 pos-4-2 (1)
end-move pos-4-2 (0)
jump-new-move pos-3-0 pos-3-1 pos-3-2 (1)
jump-continue-move pos-3-2 pos-4-2 pos-5-2 (0)
end-move pos-5-2 (0)
jump-new-move pos-6-2 pos-5-2 pos-4-2 (1)
end-move pos-4-2 (0)
jump-new-move pos-0-4 pos-0-3 pos-0-2 (1)
end-move pos-0-2 (0)
jump-new-move pos-2-3 pos-1-3 pos-0-3 (1)
end-move pos-0-3 (0)
jump-new-move pos-2-5 pos-2-4 pos-2-3 (1)
end-move pos-2-3 (0)
jump-new-move pos-0-2 pos-0-3 pos-0-4 (1)
jump-continue-move pos-0-4 pos-1-4 pos-2-4 (0)
end-move pos-2-4 (0)
jump-new-move pos-2-3 pos-2-4 pos-2-5 (1)
end-move pos-2-5 (0)
jump-new-move pos-5-4 pos-4-4 pos-3-4 (1)
end-move pos-3-4 (0)
jump-new-move pos-4-2 pos-4-3 pos-4-4 (1)
jump-continue-move pos-4-4 pos-3-4 pos-2-4 (0)
end-move pos-2-4 (0)
jump-new-move pos-2-5 pos-2-4 pos-2-3 (1)
jump-continue-move pos-2-3 pos-3-3 pos-4-3 (0)
end-move pos-4-3 (0)
jump-new-move pos-5-3 pos-4-3 pos-3-3 (1)
[t=0.13126s, 49088 KB] Plan length: 29 step(s).
[t=0.13126s, 49088 KB] Plan cost: 13
[t=0.13126s, 49088 KB] Expanded 304 state(s).
[t=0.13126s, 49088 KB] Reopened 0 state(s).
[t=0.13126s, 49088 KB] Evaluated 599 state(s).
[t=0.13126s, 49088 KB] Evaluations: 902
[t=0.13126s, 49088 KB] Generated 699 state(s).
[t=0.13126s, 49088 KB] Dead ends: 0 state(s).
[t=0.13126s, 49088 KB] Number of registered states: 599
[t=0.13126s, 49088 KB] Int hash set load factor: 599/1024 = 0.584961
[t=0.13126s, 49088 KB] Int hash set resizes: 10
[t=0.13126s, 49088 KB] Search time: 0.00399907s
[t=0.13126s, 49088 KB] Total time: 0.13126s
Solution found.
Peak memory: 49088 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 13 

Successful plans:
Value: 13
 sas_plan 13 

validate exit code: 0

