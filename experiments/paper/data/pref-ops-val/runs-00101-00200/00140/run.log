INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.430s CPU, 0.445s wall-clock]
78629 relevant atoms
6562 auxiliary atoms
85191 final queue length
254680 total queue pushes
Completing instantiation... [2.630s CPU, 2.627s wall-clock]
Instantiating: [3.090s CPU, 3.087s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.005s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
81 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.021s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.110s CPU, 0.105s wall-clock]
Translating task: [2.970s CPU, 2.973s wall-clock]
91136 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
32 propositions removed
Detecting unreachable propositions: [1.560s CPU, 1.550s wall-clock]
Reordering and filtering variables...
113 of 113 variables necessary.
49 of 81 mutex groups necessary.
73728 of 73728 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.440s CPU, 0.441s wall-clock]
Translator variables: 113
Translator derived variables: 0
Translator facts: 1730
Translator goal facts: 32
Translator mutex groups: 49
Translator total mutex groups size: 1617
Translator operators: 73728
Translator axioms: 0
Translator task size: 600484
Translator peak memory: 383504 KB
Writing output... [0.420s CPU, 0.419s wall-clock]
Done! [8.620s CPU, 8.622s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1791.31s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.262921s, 74012 KB] done reading input!
[t=0.286921s, 87568 KB] Simplifying 255456 unary operators... done! [255456 unary operators]
[t=0.730906s, 111408 KB] time to simplify: 0.443985s
[t=0.738906s, 111408 KB] Initializing additive heuristic...
[t=0.738906s, 111408 KB] Initializing FF heuristic...
[t=0.738906s, 111408 KB] stop search of patterns: 3355443KB
[t=0.738906s, 111408 KB] Generating patterns using the systematic generator...
[t=0.738906s, 111408 KB] building causal graph...done! [t=0.0359971s]
[t=10.7742s, 1435748 KB] Found 4496160 SGA patterns.
[t=88.3134s, 1435748 KB] Found 4885520 interesting patterns.
[t=89.4802s, 1435748 KB] [32, 2592, 143856, 4739040]
[t=93.1801s, 1435748 KB] Systematic generator number of patterns: 7872
[t=93.1801s, 1435748 KB] Systematic generator total PDB size: 66729278
[t=93.1801s, 1435748 KB] Systematic generator computation time: 92.4411s
[t=93.1801s, 1435748 KB] Computing PDBs for pattern collection...
[t=355.108s, 1435748 KB] Done computing PDBs for pattern collection: 261.928s
[t=370.666s, 1435748 KB] Operators: 73728
[t=370.666s, 1435748 KB] Restrictions: 7872
[t=370.666s, 1435748 KB] Mean mentions: 704
[t=370.666s, 1435748 KB] Mean operators: 6600
[t=370.67s, 1435748 KB] Building successor generator...done!
[t=370.698s, 1435748 KB] peak memory difference for successor generator creation: 0 KB
[t=370.698s, 1435748 KB] time for successor generation creation: 0.0239949s
[t=370.698s, 1435748 KB] Variables: 113
[t=370.698s, 1435748 KB] FactPairs: 1730
[t=370.698s, 1435748 KB] Bytes per state: 36
[t=370.698s, 1435748 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=370.698s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 70
[t=370.698s, 1435748 KB] g=0, 1 evaluated, 0 expanded
[t=370.698s, 1435748 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 70
[t=370.698s, 1435748 KB] pruning method: none
[t=370.734s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 68
[t=370.734s, 1435748 KB] g=2, 111 evaluated, 4 expanded
[t=370.818s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 67
[t=370.818s, 1435748 KB] g=4, 355 evaluated, 12 expanded
[t=370.822s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 65
[t=370.822s, 1435748 KB] g=5, 374 evaluated, 13 expanded
[t=370.83s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 64
[t=370.83s, 1435748 KB] g=6, 389 evaluated, 14 expanded
[t=370.834s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 63
[t=370.834s, 1435748 KB] g=6, 398 evaluated, 14 expanded
[t=370.974s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 62
[t=370.974s, 1435748 KB] g=8, 811 evaluated, 28 expanded
[t=371.15s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 59
[t=371.15s, 1435748 KB] g=10, 1308 evaluated, 46 expanded
[t=371.158s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 57
[t=371.158s, 1435748 KB] g=11, 1333 evaluated, 47 expanded
[t=371.246s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 55
[t=371.246s, 1435748 KB] g=13, 1581 evaluated, 55 expanded
[t=371.25s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 54
[t=371.25s, 1435748 KB] g=14, 1600 evaluated, 56 expanded
[t=371.274s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=371.274s, 1435748 KB] g=15, 1663 evaluated, 58 expanded
[t=371.282s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=371.282s, 1435748 KB] g=16, 1692 evaluated, 59 expanded
[t=371.418s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=371.418s, 1435748 KB] g=18, 2093 evaluated, 73 expanded
[t=371.418s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=371.418s, 1435748 KB] g=18, 2098 evaluated, 73 expanded
[t=371.426s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=371.426s, 1435748 KB] g=19, 2124 evaluated, 74 expanded
[t=371.478s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=371.478s, 1435748 KB] g=20, 2283 evaluated, 79 expanded
[t=371.486s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=371.486s, 1435748 KB] g=21, 2301 evaluated, 80 expanded
[t=371.494s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=371.494s, 1435748 KB] g=22, 2327 evaluated, 81 expanded
[t=371.574s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=371.574s, 1435748 KB] g=24, 2564 evaluated, 89 expanded
[t=371.606s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=371.606s, 1435748 KB] g=25, 2660 evaluated, 92 expanded
[t=371.634s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=371.634s, 1435748 KB] g=27, 2754 evaluated, 95 expanded
[t=371.642s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=371.642s, 1435748 KB] g=28, 2773 evaluated, 96 expanded
[t=371.674s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=371.674s, 1435748 KB] g=30, 2866 evaluated, 99 expanded
[t=371.682s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=371.682s, 1435748 KB] g=31, 2886 evaluated, 100 expanded
[t=371.706s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=371.706s, 1435748 KB] g=34, 2949 evaluated, 103 expanded
[t=374.03s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=374.03s, 1435748 KB] g=39, 10144 evaluated, 363 expanded
[t=379.973s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=379.973s, 1435748 KB] g=41, 28169 evaluated, 1033 expanded
[t=379.981s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=379.981s, 1435748 KB] g=42, 28193 evaluated, 1034 expanded
[t=409.213s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=409.213s, 1435748 KB] g=49, 115022 evaluated, 4406 expanded
[t=409.225s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=409.225s, 1435748 KB] g=50, 115066 evaluated, 4407 expanded
[t=409.253s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=409.253s, 1435748 KB] g=52, 115145 evaluated, 4410 expanded
[t=417.771s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=417.771s, 1435748 KB] g=55, 140823 evaluated, 5382 expanded
[t=417.779s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=417.779s, 1435748 KB] g=56, 140858 evaluated, 5383 expanded
[t=426.047s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=426.047s, 1435748 KB] g=61, 165464 evaluated, 6321 expanded
[t=426.059s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=426.059s, 1435748 KB] g=62, 165509 evaluated, 6322 expanded
[t=426.087s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=426.087s, 1435748 KB] g=64, 165589 evaluated, 6325 expanded
[t=450.335s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=450.335s, 1435748 KB] g=68, 235751 evaluated, 9193 expanded
[t=450.359s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=450.359s, 1435748 KB] g=70, 235830 evaluated, 9196 expanded
[t=467.864s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=467.864s, 1435748 KB] g=74, 288918 evaluated, 11359 expanded
[t=467.888s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=467.888s, 1435748 KB] g=76, 288997 evaluated, 11362 expanded
[t=480.798s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=480.798s, 1435748 KB] g=80, 328543 evaluated, 12955 expanded
[t=480.822s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=480.822s, 1435748 KB] g=82, 328623 evaluated, 12958 expanded
[t=489.593s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=489.593s, 1435748 KB] g=86, 356090 evaluated, 14025 expanded
[t=489.617s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=489.617s, 1435748 KB] g=88, 356169 evaluated, 14028 expanded
[t=495.689s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=495.689s, 1435748 KB] g=92, 375690 evaluated, 14756 expanded
[t=495.705s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=495.705s, 1435748 KB] g=93, 375753 evaluated, 14758 expanded
[t=495.713s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=495.713s, 1435748 KB] g=94, 375769 evaluated, 14759 expanded
[t=498.201s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=498.201s, 1435748 KB] g=103, 383774 evaluated, 15063 expanded
[t=498.209s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=498.209s, 1435748 KB] g=104, 383797 evaluated, 15064 expanded
[t=499.023s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=499.023s, 1435748 KB] g=109, 386488 evaluated, 15164 expanded
[t=499.031s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=499.031s, 1435748 KB] g=110, 386514 evaluated, 15165 expanded
[t=499.331s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=499.331s, 1435748 KB] g=114, 387543 evaluated, 15202 expanded
[t=499.347s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=499.347s, 1435748 KB] g=115, 387597 evaluated, 15204 expanded
[t=499.351s, 1435748 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=499.351s, 1435748 KB] g=116, 387622 evaluated, 15205 expanded
[t=499.355s, 1435748 KB] Solution found!
[t=499.355s, 1435748 KB] Actual search time: 128.657s
move-car-to-car car_02 car_04 car_08 (1)
move-car-to-car car_21 car_06 car_04 (1)
move-car-to-car car_09 car_23 car_24 (1)
move-curb-to-car car_23 curb_04 car_06 (1)
move-car-to-curb car_01 car_28 curb_04 (1)
move-car-to-car car_18 car_10 car_01 (1)
move-car-to-car car_16 car_03 car_10 (1)
move-car-to-car car_20 car_19 car_03 (1)
move-curb-to-car car_19 curb_02 car_28 (1)
move-car-to-curb car_02 car_08 curb_02 (1)
move-car-to-car car_19 car_28 car_02 (1)
move-car-to-car car_13 car_25 car_28 (1)
move-curb-to-car car_25 curb_10 car_08 (1)
move-car-to-curb car_09 car_24 curb_10 (1)
move-car-to-car car_26 car_05 car_09 (1)
move-car-to-car car_22 car_31 car_05 (1)
move-curb-to-car car_24 curb_16 car_31 (1)
move-car-to-curb car_16 car_10 curb_16 (1)
move-car-to-car car_17 car_27 car_16 (1)
move-curb-to-car car_27 curb_06 car_10 (1)
move-car-to-curb car_07 car_30 curb_06 (1)
move-car-to-car car_24 car_31 car_07 (1)
move-curb-to-car car_31 curb_03 car_30 (1)
move-car-to-curb car_14 car_29 curb_03 (1)
move-car-to-car car_31 car_30 car_14 (1)
move-car-to-car car_11 car_12 car_30 (1)
move-curb-to-car car_29 curb_01 car_12 (1)
move-car-to-curb car_11 car_30 curb_01 (1)
move-car-to-car car_13 car_28 car_30 (1)
move-curb-to-car car_28 curb_00 car_11 (1)
move-car-to-curb car_13 car_30 curb_00 (1)
move-curb-to-car car_30 curb_08 car_13 (1)
move-car-to-curb car_15 car_00 curb_08 (1)
move-car-to-car car_17 car_16 car_00 (1)
move-curb-to-car car_15 curb_08 car_16 (1)
move-car-to-curb car_25 car_08 curb_08 (1)
move-curb-to-car car_08 curb_15 car_25 (1)
move-car-to-curb car_15 car_16 curb_15 (1)
move-car-to-car car_08 car_25 car_16 (1)
move-curb-to-car car_25 curb_08 car_15 (1)
move-car-to-curb car_08 car_16 curb_08 (1)
move-car-to-car car_25 car_15 car_08 (1)
move-car-to-car car_30 car_13 car_15 (1)
move-curb-to-car car_13 curb_00 car_16 (1)
move-car-to-curb car_29 car_12 curb_00 (1)
move-curb-to-car car_12 curb_13 car_29 (1)
move-car-to-curb car_13 car_16 curb_13 (1)
move-car-to-car car_30 car_15 car_13 (1)
move-car-to-car car_12 car_29 car_15 (1)
move-curb-to-car car_29 curb_00 car_16 (1)
move-car-to-curb car_20 car_03 curb_00 (1)
move-curb-to-car car_03 curb_12 car_20 (1)
move-car-to-curb car_12 car_15 curb_12 (1)
move-car-to-car car_29 car_16 car_12 (1)
move-car-to-car car_03 car_20 car_15 (1)
move-curb-to-car car_20 curb_00 car_16 (1)
move-car-to-curb car_31 car_14 curb_00 (1)
move-curb-to-car car_14 curb_03 car_31 (1)
move-car-to-curb car_03 car_15 curb_03 (1)
move-car-to-car car_20 car_16 car_03 (1)
move-car-to-car car_14 car_31 car_15 (1)
move-curb-to-car car_31 curb_00 car_16 (1)
move-car-to-curb car_21 car_04 curb_00 (1)
move-curb-to-car car_04 curb_14 car_21 (1)
move-car-to-curb car_14 car_15 curb_14 (1)
move-car-to-car car_31 car_16 car_14 (1)
move-car-to-car car_04 car_21 car_15 (1)
move-curb-to-car car_21 curb_00 car_16 (1)
move-car-to-curb car_18 car_01 curb_00 (1)
move-curb-to-car car_01 curb_04 car_18 (1)
move-car-to-curb car_04 car_15 curb_04 (1)
move-car-to-car car_21 car_16 car_04 (1)
move-car-to-car car_01 car_18 car_15 (1)
move-curb-to-car car_18 curb_00 car_16 (1)
move-car-to-curb car_28 car_11 curb_00 (1)
move-curb-to-car car_11 curb_01 car_28 (1)
move-car-to-curb car_01 car_15 curb_01 (1)
move-car-to-car car_18 car_16 car_01 (1)
move-car-to-car car_11 car_28 car_15 (1)
move-curb-to-car car_28 curb_00 car_16 (1)
move-car-to-curb car_22 car_05 curb_00 (1)
move-curb-to-car car_05 curb_11 car_22 (1)
move-car-to-curb car_11 car_15 curb_11 (1)
move-car-to-car car_28 car_16 car_11 (1)
move-car-to-car car_05 car_22 car_15 (1)
move-curb-to-car car_22 curb_00 car_16 (1)
move-car-to-curb car_17 car_00 curb_00 (1)
move-curb-to-car car_00 curb_05 car_17 (1)
move-car-to-curb car_05 car_15 curb_05 (1)
move-car-to-car car_22 car_16 car_05 (1)
move-car-to-car car_00 car_17 car_15 (1)
move-curb-to-car car_17 curb_00 car_16 (1)
move-car-to-curb car_00 car_15 curb_00 (1)
move-car-to-car car_17 car_16 car_00 (1)
move-car-to-car car_23 car_06 car_16 (1)
move-curb-to-car car_06 curb_09 car_15 (1)
move-car-to-curb car_24 car_07 curb_09 (1)
move-curb-to-car car_07 curb_06 car_24 (1)
move-car-to-curb car_06 car_15 curb_06 (1)
move-car-to-car car_23 car_16 car_06 (1)
move-car-to-car car_07 car_24 car_16 (1)
move-curb-to-car car_24 curb_09 car_15 (1)
move-car-to-curb car_27 car_10 curb_09 (1)
move-curb-to-car car_10 curb_07 car_27 (1)
move-car-to-curb car_07 car_16 curb_07 (1)
move-car-to-car car_24 car_15 car_07 (1)
move-car-to-car car_10 car_27 car_16 (1)
move-curb-to-car car_27 curb_09 car_15 (1)
move-car-to-curb car_26 car_09 curb_09 (1)
move-curb-to-car car_09 curb_10 car_26 (1)
move-car-to-curb car_10 car_16 curb_10 (1)
move-car-to-car car_27 car_15 car_10 (1)
move-car-to-car car_09 car_26 car_15 (1)
move-curb-to-car car_26 curb_09 car_16 (1)
move-car-to-curb car_09 car_15 curb_09 (1)
move-car-to-car car_26 car_16 car_09 (1)
[t=499.355s, 1435748 KB] Plan length: 116 step(s).
[t=499.355s, 1435748 KB] Plan cost: 116
[t=499.355s, 1435748 KB] Expanded 15206 state(s).
[t=499.355s, 1435748 KB] Reopened 0 state(s).
[t=499.355s, 1435748 KB] Evaluated 387644 state(s).
[t=499.355s, 1435748 KB] Evaluations: 402849
[t=499.355s, 1435748 KB] Generated 485308 state(s).
[t=499.355s, 1435748 KB] Dead ends: 26892 state(s).
[t=499.355s, 1435748 KB] Number of registered states: 387644
[t=499.355s, 1435748 KB] Int hash set load factor: 387644/524288 = 0.739372
[t=499.355s, 1435748 KB] Int hash set resizes: 19
[t=499.355s, 1435748 KB] Search time: 128.657s
[t=499.355s, 1435748 KB] Total time: 499.355s
Solution found.
Peak memory: 1435748 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 116 

Successful plans:
Value: 116
 sas_plan 116 

validate exit code: 0

