INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [1.850s CPU, 1.854s wall-clock]
207599 relevant atoms
22008 auxiliary atoms
229607 final queue length
1079639 total queue pushes
Completing instantiation... [10.670s CPU, 10.670s wall-clock]
Instantiating: [12.570s CPU, 12.574s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.240s CPU, 0.235s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
12 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.240s CPU, 0.236s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.370s CPU, 0.368s wall-clock]
Translating task: [8.120s CPU, 8.123s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [4.330s CPU, 4.322s wall-clock]
Reordering and filtering variables...
24 of 24 variables necessary.
0 of 12 mutex groups necessary.
207252 of 207252 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [1.150s CPU, 1.147s wall-clock]
Translator variables: 24
Translator derived variables: 0
Translator facts: 168
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 207252
Translator axioms: 0
Translator task size: 1817532
Translator peak memory: 1257836 KB
Writing output... [1.040s CPU, 1.039s wall-clock]
Done! [27.850s CPU, 27.851s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1772.0s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.751867s, 132068 KB] done reading input!
[t=0.811831s, 178328 KB] Simplifying 781056 unary operators... done! [705024 unary operators]
[t=1.79145s, 242648 KB] time to simplify: 0.979623s
[t=1.80345s, 242648 KB] Initializing additive heuristic...
[t=1.80345s, 242648 KB] Initializing FF heuristic...
[t=1.80345s, 242648 KB] stop search of patterns: 3355443KB
[t=1.80345s, 242648 KB] Generating patterns using the systematic generator...
[t=1.80345s, 242648 KB] building causal graph...done! [t=0.0839809s]
[t=1.89143s, 242648 KB] Found 2607 SGA patterns.
[t=1.93533s, 242648 KB] Found 5203 interesting patterns.
[t=1.93533s, 242648 KB] [24, 90, 708, 4381]
[t=1.93533s, 242648 KB] Systematic generator number of patterns: 342
[t=1.93533s, 242648 KB] Systematic generator total PDB size: 469224
[t=1.93533s, 242648 KB] Systematic generator computation time: 0.131881s
[t=1.93533s, 242648 KB] Computing PDBs for pattern collection...
[t=24.1577s, 242648 KB] Done computing PDBs for pattern collection: 22.2224s
[t=27.5038s, 592940 KB] Operators: 207252
[t=27.5038s, 592940 KB] Restrictions: 342
[t=27.5038s, 592940 KB] Mean mentions: 169
[t=27.5038s, 592940 KB] Mean operators: 102429
[t=27.5038s, 592940 KB] Building successor generator...done!
[t=27.5678s, 616528 KB] peak memory difference for successor generator creation: 23588 KB
[t=27.5678s, 616528 KB] time for successor generation creation: 0.0639653s
[t=27.5678s, 616528 KB] Variables: 24
[t=27.5678s, 616528 KB] FactPairs: 168
[t=27.5678s, 616528 KB] Bytes per state: 8
[t=27.5678s, 616528 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=27.5678s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=27.5678s, 616528 KB] g=0, 1 evaluated, 0 expanded
[t=27.5678s, 616528 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=27.5678s, 616528 KB] pruning method: none
[t=27.5798s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=27.5798s, 616528 KB] g=1, 3 evaluated, 1 expanded
[t=27.5958s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=27.5958s, 616528 KB] g=2, 15 evaluated, 2 expanded
[t=27.6078s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=27.6078s, 616528 KB] g=5, 30 evaluated, 3 expanded
[t=27.6358s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=27.6358s, 616528 KB] g=11, 50 evaluated, 5 expanded
[t=27.6517s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=27.6517s, 616528 KB] g=14, 60 evaluated, 6 expanded
[t=27.6637s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=27.6637s, 616528 KB] g=17, 70 evaluated, 7 expanded
[t=27.9356s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=27.9356s, 616528 KB] g=25, 233 evaluated, 26 expanded
[t=28.2194s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=28.2194s, 616528 KB] g=35, 408 evaluated, 46 expanded
[t=28.8431s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=28.8431s, 616528 KB] g=47, 789 evaluated, 90 expanded
[t=29.3988s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=29.3988s, 616528 KB] g=59, 1128 evaluated, 129 expanded
[t=29.8425s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=29.8425s, 616528 KB] g=69, 1395 evaluated, 160 expanded
[t=35.3635s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=35.3635s, 616528 KB] g=102, 4693 evaluated, 550 expanded
[t=35.3715s, 616528 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=35.3715s, 616528 KB] g=105, 4703 evaluated, 551 expanded
[t=35.3715s, 616528 KB] Solution found!
[t=35.3715s, 616528 KB] Actual search time: 7.80365s
rotate-4 seg-in-2a seg-in-2b seg-out-3a seg-out-3b car-in-2a car-in-2b car-out-3a car-out-3b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-2a seg-out-2b car-in-3a car-in-3b car-out-2a car-out-2b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2b car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-3a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-3a car-in-1b car-out-1a (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-3a car-in-1b car-out-1b car-in-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1b car-in-1a car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-3a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-3a car-in-1b car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-3a car-in-1b car-out-1a car-out-2b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-1b car-out-1a car-out-3b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-1a car-out-3b car-in-2a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-3b car-in-2a car-in-1b car-out-1a (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-2a car-in-1b car-out-1b car-in-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1b car-in-1a car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-2a car-in-1b car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-2a car-in-1b car-out-1a car-out-3b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2b car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-3a car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-2b car-in-3a car-out-1b car-in-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-3a car-out-1b car-in-1b car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1b car-in-1a car-out-2b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-in-1a car-out-1a car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-out-1a car-out-2b car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-3a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-3a car-in-1b car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-3a car-in-1b car-out-1a car-out-2b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-1b car-out-1a car-out-3b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-1a car-out-3b car-in-2a car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-3b car-in-2a car-out-1b car-in-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-2a car-out-1b car-in-1b car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1b car-in-1a car-out-3b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-1b car-in-1a car-out-1a car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-out-1a car-out-3b car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-1a car-out-3b car-in-2a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-3b car-in-2a car-in-1b car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-2a car-in-1b car-out-1a car-out-3b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-3a car-out-1b car-in-1a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-3a car-out-1b car-in-1a car-in-2b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-3a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-3a car-out-1b car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-3a car-out-1b car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1b car-out-1a car-out-3a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-3a car-out-1b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-in-3b car-out-2a car-out-1b car-in-1a (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-2a car-out-1b car-in-1a car-in-3b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-3b car-out-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-2a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-2a car-out-1b car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-2a car-out-1b car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1b car-out-1a car-out-2a (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-in-1a car-in-3b car-out-2a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-3a car-in-1b car-out-1a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-3a car-in-1b car-out-1a car-in-2b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-3a car-out-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-2b car-out-3a car-out-1b car-in-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-3a car-out-1b car-in-1a car-in-2b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1b car-out-1a car-in-2b car-out-3a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1a car-in-2b car-out-3a car-in-1b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-in-3b car-out-2a car-in-1b car-out-1a (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-2a car-in-1b car-out-1a car-in-3b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-3b car-out-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-3b car-out-2a car-out-1b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-3b car-out-2a car-in-1a car-in-1b (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-2a car-in-1a car-in-1b car-in-3b (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-3b car-out-2a (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-1b car-in-3b car-out-2a car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (1)
[t=35.3715s, 616528 KB] Plan length: 79 step(s).
[t=35.3715s, 616528 KB] Plan cost: 103
[t=35.3715s, 616528 KB] Expanded 552 state(s).
[t=35.3715s, 616528 KB] Reopened 0 state(s).
[t=35.3715s, 616528 KB] Evaluated 4703 state(s).
[t=35.3715s, 616528 KB] Evaluations: 5254
[t=35.3715s, 616528 KB] Generated 5510 state(s).
[t=35.3715s, 616528 KB] Dead ends: 0 state(s).
[t=35.3715s, 616528 KB] Number of registered states: 4703
[t=35.3715s, 616528 KB] Int hash set load factor: 4703/8192 = 0.574097
[t=35.3715s, 616528 KB] Int hash set resizes: 13
[t=35.3715s, 616528 KB] Search time: 7.80365s
[t=35.3715s, 616528 KB] Total time: 35.3715s
Solution found.
Peak memory: 616528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 103 

Successful plans:
Value: 103
 sas_plan 103 

validate exit code: 0

