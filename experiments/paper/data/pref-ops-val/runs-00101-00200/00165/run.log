INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.130s CPU, 0.126s wall-clock]
19601 relevant atoms
5782 auxiliary atoms
25383 final queue length
73207 total queue pushes
Completing instantiation... [0.530s CPU, 0.535s wall-clock]
Instantiating: [0.670s CPU, 0.667s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.014s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
14 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.023s wall-clock]
Translating task: [0.450s CPU, 0.451s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.260s CPU, 0.257s wall-clock]
Reordering and filtering variables...
28 of 28 variables necessary.
14 of 28 mutex groups necessary.
17836 of 17836 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.060s CPU, 0.059s wall-clock]
Translator variables: 28
Translator derived variables: 0
Translator facts: 224
Translator goal facts: 28
Translator mutex groups: 14
Translator total mutex groups size: 196
Translator operators: 17836
Translator axioms: 0
Translator task size: 98574
Translator peak memory: 101196 KB
Writing output... [0.070s CPU, 0.070s wall-clock]
Done! [1.550s CPU, 1.549s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1798.4s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0475764s, 51480 KB] done reading input!
[t=0.0515547s, 53868 KB] Simplifying 44590 unary operators... done! [26754 unary operators]
[t=0.0623958s, 56340 KB] time to simplify: 0.0108411s
[t=0.0631849s, 56340 KB] Initializing additive heuristic...
[t=0.0634405s, 56340 KB] Initializing FF heuristic...
[t=0.0634523s, 56340 KB] stop search of patterns: 3355443KB
[t=0.0635109s, 56340 KB] Generating patterns using the systematic generator...
[t=0.0635543s, 56340 KB] building causal graph...done! [t=1.2423e-05s]
[t=0.083482s, 56340 KB] Found 8050 SGA patterns.
[t=0.306766s, 58216 KB] Found 22701 interesting patterns.
[t=0.306766s, 58216 KB] [28, 287, 2912, 19474]
[t=0.310775s, 58676 KB] Systematic generator number of patterns: 945
[t=0.310775s, 58676 KB] Systematic generator total PDB size: 1201060
[t=0.310775s, 58676 KB] Systematic generator computation time: 0.247265s
[t=0.310775s, 58676 KB] Computing PDBs for pattern collection...
[t=4.62167s, 60732 KB] Done computing PDBs for pattern collection: 4.3109s
[t=4.90962s, 113900 KB] Operators: 17836
[t=4.90962s, 113900 KB] Restrictions: 945
[t=4.90962s, 113900 KB] Mean mentions: 251
[t=4.90962s, 113900 KB] Mean operators: 4745
[t=4.90962s, 113900 KB] Building successor generator...done!
[t=4.91362s, 115012 KB] peak memory difference for successor generator creation: 1112 KB
[t=4.91362s, 115012 KB] time for successor generation creation: 0.00400258s
[t=4.91362s, 115012 KB] Variables: 28
[t=4.91362s, 115012 KB] FactPairs: 224
[t=4.91362s, 115012 KB] Bytes per state: 12
[t=4.91362s, 115012 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=4.91362s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=4.91362s, 115012 KB] g=0, 1 evaluated, 0 expanded
[t=4.91362s, 115012 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=4.91362s, 115012 KB] pruning method: none
[t=4.91362s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=4.91362s, 115012 KB] g=3, 16 evaluated, 1 expanded
[t=4.91761s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=4.91761s, 115012 KB] g=6, 124 evaluated, 2 expanded
[t=4.91761s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=4.91761s, 115012 KB] g=9, 219 evaluated, 3 expanded
[t=4.91761s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=4.91761s, 115012 KB] g=9, 221 evaluated, 3 expanded
[t=4.92161s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=4.92161s, 115012 KB] g=12, 402 evaluated, 5 expanded
[t=4.92562s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=4.92562s, 115012 KB] g=15, 500 evaluated, 6 expanded
[t=4.92562s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=4.92562s, 115012 KB] g=18, 575 evaluated, 7 expanded
[t=4.92961s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=4.92961s, 115012 KB] g=21, 650 evaluated, 8 expanded
[t=4.92961s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=4.92961s, 115012 KB] g=22, 732 evaluated, 9 expanded
[t=4.92961s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=4.92961s, 115012 KB] g=25, 801 evaluated, 10 expanded
[t=4.93361s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=4.93361s, 115012 KB] g=26, 869 evaluated, 11 expanded
[t=4.93361s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=4.93361s, 115012 KB] g=29, 930 evaluated, 12 expanded
[t=4.93361s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=4.93361s, 115012 KB] g=30, 992 evaluated, 13 expanded
[t=4.93361s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=4.93361s, 115012 KB] g=31, 1005 evaluated, 14 expanded
[t=4.93761s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=4.93761s, 115012 KB] g=34, 1102 evaluated, 15 expanded
[t=4.93761s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=4.93761s, 115012 KB] g=35, 1115 evaluated, 16 expanded
[t=4.94161s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=4.94161s, 115012 KB] g=38, 1213 evaluated, 17 expanded
[t=4.94161s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=4.94161s, 115012 KB] g=39, 1226 evaluated, 18 expanded
[t=4.94161s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=4.94161s, 115012 KB] g=42, 1324 evaluated, 19 expanded
[t=4.94161s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=4.94161s, 115012 KB] g=43, 1337 evaluated, 20 expanded
[t=4.94561s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=4.94561s, 115012 KB] g=46, 1435 evaluated, 21 expanded
[t=4.94561s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=4.94561s, 115012 KB] g=50, 1557 evaluated, 24 expanded
[t=4.9536s, 115012 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=4.9536s, 115012 KB] g=54, 1930 evaluated, 31 expanded
[t=4.9536s, 115012 KB] Solution found!
[t=4.9536s, 115012 KB] Actual search time: 0.0399798s
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (3)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
analyze-2 seg-in-4 seg-out-2 car-in-4 car-out-2 (3)
analyze-2 seg-in-4 seg-out-2 car-out-2 car-in-4 (3)
analyze-2 seg-in-5 seg-out-2 car-in-5 car-out-2 (3)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-out-1 (3)
rotate-2 seg-in-5 seg-out-2 car-out-2 car-in-5 (1)
analyze-2 seg-in-7 seg-out-2 car-in-7 car-out-2 (3)
rotate-2 seg-in-6 seg-out-1 car-out-1 car-in-6 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (3)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (3)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (3)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (3)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (3)
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
rotate-2 seg-in-7 seg-out-2 car-out-2 car-in-7 (1)
[t=4.9536s, 115012 KB] Plan length: 24 step(s).
[t=4.9536s, 115012 KB] Plan cost: 52
[t=4.9536s, 115012 KB] Expanded 33 state(s).
[t=4.9536s, 115012 KB] Reopened 0 state(s).
[t=4.9536s, 115012 KB] Evaluated 1991 state(s).
[t=4.9536s, 115012 KB] Evaluations: 2023
[t=4.9536s, 115012 KB] Generated 3136 state(s).
[t=4.9536s, 115012 KB] Dead ends: 0 state(s).
[t=4.9536s, 115012 KB] Number of registered states: 1991
[t=4.9536s, 115012 KB] Int hash set load factor: 1991/4096 = 0.486084
[t=4.9536s, 115012 KB] Int hash set resizes: 12
[t=4.9536s, 115012 KB] Search time: 0.0399798s
[t=4.9536s, 115012 KB] Total time: 4.9536s
Solution found.
Peak memory: 115012 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 52 

Successful plans:
Value: 52
 sas_plan 52 

validate exit code: 0

