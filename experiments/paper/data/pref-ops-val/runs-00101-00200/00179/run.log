INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [2.460s CPU, 2.456s wall-clock]
249073 relevant atoms
25776 auxiliary atoms
274849 final queue length
1332241 total queue pushes
Completing instantiation... [13.700s CPU, 13.701s wall-clock]
Instantiating: [16.220s CPU, 16.219s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.300s CPU, 0.300s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
12 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.300s CPU, 0.301s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.460s CPU, 0.465s wall-clock]
Translating task: [9.170s CPU, 9.170s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [5.190s CPU, 5.195s wall-clock]
Reordering and filtering variables...
24 of 24 variables necessary.
0 of 12 mutex groups necessary.
248724 of 248724 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [1.440s CPU, 1.432s wall-clock]
Translator variables: 24
Translator derived variables: 0
Translator facts: 168
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 248724
Translator axioms: 0
Translator task size: 2218428
Translator peak memory: 1528032 KB
Writing output... [1.340s CPU, 1.346s wall-clock]
Done! [34.170s CPU, 34.182s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1765.64s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.967804s, 150344 KB] done reading input!
[t=1.04777s, 201976 KB] Simplifying 974592 unary operators... done! [746496 unary operators]
[t=2.28725s, 271372 KB] time to simplify: 1.23948s
[t=2.30324s, 271372 KB] Initializing additive heuristic...
[t=2.30324s, 271372 KB] Initializing FF heuristic...
[t=2.30324s, 271372 KB] stop search of patterns: 3355443KB
[t=2.30324s, 271372 KB] Generating patterns using the systematic generator...
[t=2.30324s, 271372 KB] building causal graph...done! [t=0.10797s]
[t=2.41921s, 271372 KB] Found 3831 SGA patterns.
[t=2.50295s, 271372 KB] Found 9551 interesting patterns.
[t=2.50694s, 271372 KB] [24, 138, 1332, 8057]
[t=2.50694s, 271372 KB] Systematic generator number of patterns: 486
[t=2.50694s, 271372 KB] Systematic generator total PDB size: 439608
[t=2.50694s, 271372 KB] Systematic generator computation time: 0.2037s
[t=2.50694s, 271372 KB] Computing PDBs for pattern collection...
[t=38.1742s, 271372 KB] Done computing PDBs for pattern collection: 35.6672s
[t=44.0472s, 883356 KB] Operators: 248724
[t=44.0472s, 883356 KB] Restrictions: 486
[t=44.0472s, 883356 KB] Mean mentions: 229
[t=44.0472s, 883356 KB] Mean operators: 117691
[t=44.0472s, 883356 KB] Building successor generator...done!
[t=44.1432s, 910620 KB] peak memory difference for successor generator creation: 27264 KB
[t=44.1432s, 910620 KB] time for successor generation creation: 0.0959375s
[t=44.1432s, 910620 KB] Variables: 24
[t=44.1432s, 910620 KB] FactPairs: 168
[t=44.1432s, 910620 KB] Bytes per state: 8
[t=44.1432s, 910620 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=44.1432s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=44.1432s, 910620 KB] g=0, 1 evaluated, 0 expanded
[t=44.1432s, 910620 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=44.1432s, 910620 KB] pruning method: none
[t=44.1592s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=44.1592s, 910620 KB] g=1, 4 evaluated, 1 expanded
[t=44.1791s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=44.1791s, 910620 KB] g=2, 18 evaluated, 2 expanded
[t=44.1951s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=44.1951s, 910620 KB] g=5, 32 evaluated, 3 expanded
[t=44.2711s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=44.2711s, 910620 KB] g=14, 80 evaluated, 7 expanded
[t=44.2871s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=44.2871s, 910620 KB] g=17, 92 evaluated, 8 expanded
[t=44.363s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=44.363s, 910620 KB] g=25, 136 evaluated, 12 expanded
[t=44.4749s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=44.4749s, 910620 KB] g=33, 194 evaluated, 18 expanded
[t=44.8507s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=44.8507s, 910620 KB] g=41, 368 evaluated, 38 expanded
[t=53.9616s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=53.9616s, 910620 KB] g=60, 4645 evaluated, 537 expanded
[t=53.9856s, 910620 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=53.9856s, 910620 KB] g=59, 4659 evaluated, 539 expanded
[t=53.9856s, 910620 KB] Solution found!
[t=53.9856s, 910620 KB] Actual search time: 9.84247s
rotate-4 seg-in-3a seg-in-3b seg-out-2a seg-out-2b car-in-3a car-in-3b car-out-2a car-out-2b (1)
rotate-4 seg-in-2a seg-in-2b seg-out-3a seg-out-3b car-in-2a car-in-2b car-out-3a car-out-3b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-out-1b car-in-1a car-in-1b (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-1b car-out-1a (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-1b car-out-1a car-out-1b (1)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-2b car-out-3a car-out-1b car-in-1a (3)
analyze-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-3a car-out-1b car-in-1a car-in-2b (3)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2b car-out-3a (1)
analyze-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-in-3b car-out-2a car-out-3a car-out-1b (3)
analyze-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-2a car-out-3a car-out-1b car-in-3b (3)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-3a car-out-1b car-in-3b car-out-2a (1)
rotate-4 seg-in-3a seg-in-3b seg-out-1a seg-out-1b car-out-1b car-in-3b car-out-2a car-out-3a (1)
rotate-4 seg-in-2a seg-in-2b seg-out-1a seg-out-1b car-in-1a car-in-2b car-out-3a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1b car-out-1a car-out-2b car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-1a car-out-2b car-in-3a car-in-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-2b car-in-3a car-out-1b car-in-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-3a car-out-1b car-in-1a car-out-2b (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-out-2b car-in-3a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-1a car-out-2b car-in-1b car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-out-2b car-in-1b car-out-1a car-in-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-in-3a car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1a car-in-3a car-out-1b car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-2a seg-out-2b car-in-3a car-out-1b car-in-1a car-out-2b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-1b car-in-1a car-out-3b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-1a car-out-3b car-in-2a car-out-1b (1)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-3b car-in-2a car-in-1b car-out-1a (3)
analyze-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-2a car-in-1b car-out-1a car-out-3b (3)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1b car-out-1a car-out-3b car-in-2a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-1a car-out-3b car-out-1b car-in-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-out-3b car-out-1b car-in-1a car-out-1a (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-out-1b car-in-1a car-in-2a car-in-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-1a seg-out-1b car-in-1a car-in-2a car-in-1b car-out-1b (1)
rotate-4 seg-in-1a seg-in-1b seg-out-3a seg-out-3b car-in-2a car-in-1b car-out-1a car-out-3b (1)
[t=53.9856s, 910620 KB] Plan length: 35 step(s).
[t=53.9856s, 910620 KB] Plan cost: 59
[t=53.9856s, 910620 KB] Expanded 540 state(s).
[t=53.9856s, 910620 KB] Reopened 0 state(s).
[t=53.9856s, 910620 KB] Evaluated 4664 state(s).
[t=53.9856s, 910620 KB] Evaluations: 5203
[t=53.9856s, 910620 KB] Generated 6468 state(s).
[t=53.9856s, 910620 KB] Dead ends: 0 state(s).
[t=53.9856s, 910620 KB] Number of registered states: 4664
[t=53.9856s, 910620 KB] Int hash set load factor: 4664/8192 = 0.569336
[t=53.9856s, 910620 KB] Int hash set resizes: 13
[t=53.9856s, 910620 KB] Search time: 9.84247s
[t=53.9856s, 910620 KB] Total time: 53.9856s
Solution found.
Peak memory: 910620 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 59 

Successful plans:
Value: 59
 sas_plan 59 

validate exit code: 0

