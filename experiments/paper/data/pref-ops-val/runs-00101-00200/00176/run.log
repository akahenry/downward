INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.180s CPU, 0.178s wall-clock]
29701 relevant atoms
8838 auxiliary atoms
38539 final queue length
99451 total queue pushes
Completing instantiation... [0.900s CPU, 0.902s wall-clock]
Instantiating: [1.090s CPU, 1.089s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.010s CPU, 0.016s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
18 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.019s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.034s wall-clock]
Translating task: [0.670s CPU, 0.673s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.400s CPU, 0.395s wall-clock]
Reordering and filtering variables...
36 of 36 variables necessary.
18 of 36 mutex groups necessary.
27540 of 27540 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.080s CPU, 0.081s wall-clock]
Translator variables: 36
Translator derived variables: 0
Translator facts: 360
Translator goal facts: 36
Translator mutex groups: 18
Translator total mutex groups size: 324
Translator operators: 27540
Translator axioms: 0
Translator task size: 141210
Translator peak memory: 133016 KB
Writing output... [0.090s CPU, 0.098s wall-clock]
Done! [2.400s CPU, 2.397s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.53s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0708793s, 54236 KB] done reading input!
[t=0.07488s, 56924 KB] Simplifying 57834 unary operators... done! [52326 unary operators]
[t=0.0908794s, 62036 KB] time to simplify: 0.0159994s
[t=0.0948794s, 62036 KB] Initializing additive heuristic...
[t=0.0948794s, 62036 KB] Initializing FF heuristic...
[t=0.0948794s, 62036 KB] stop search of patterns: 3355443KB
[t=0.0948794s, 62036 KB] Generating patterns using the systematic generator...
[t=0.0948794s, 62036 KB] building causal graph...done! [t=0.00400165s]
[t=0.142805s, 63136 KB] Found 21831 SGA patterns.
[t=0.780698s, 68572 KB] Found 62682 interesting patterns.
[t=0.784615s, 68572 KB] [36, 477, 6324, 55845]
[t=0.796615s, 70124 KB] Systematic generator number of patterns: 1539
[t=0.796615s, 70124 KB] Systematic generator total PDB size: 4972212
[t=0.796615s, 70124 KB] Systematic generator computation time: 0.701736s
[t=0.796615s, 70124 KB] Computing PDBs for pattern collection...
[t=12.698s, 79576 KB] Done computing PDBs for pattern collection: 11.9014s
[t=13.3419s, 182728 KB] Operators: 27540
[t=13.3419s, 182728 KB] Restrictions: 1539
[t=13.3419s, 182728 KB] Mean mentions: 288
[t=13.3419s, 182728 KB] Mean operators: 5163
[t=13.3419s, 182728 KB] Building successor generator...done!
[t=13.3498s, 184452 KB] peak memory difference for successor generator creation: 1724 KB
[t=13.3498s, 184452 KB] time for successor generation creation: 0.00798887s
[t=13.3498s, 184452 KB] Variables: 36
[t=13.3498s, 184452 KB] FactPairs: 360
[t=13.3498s, 184452 KB] Bytes per state: 16
[t=13.3498s, 184452 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=13.3498s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=13.3498s, 184452 KB] g=0, 1 evaluated, 0 expanded
[t=13.3498s, 184452 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=13.3498s, 184452 KB] pruning method: none
[t=13.3498s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=13.3498s, 184452 KB] g=1, 4 evaluated, 1 expanded
[t=13.3498s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=13.3498s, 184452 KB] g=3, 32 evaluated, 1 expanded
[t=13.3539s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=13.3539s, 184452 KB] g=6, 122 evaluated, 2 expanded
[t=13.3539s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=13.3539s, 184452 KB] g=6, 132 evaluated, 2 expanded
[t=13.3578s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=13.3578s, 184452 KB] g=7, 184 evaluated, 3 expanded
[t=13.3618s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=13.3618s, 184452 KB] g=8, 281 evaluated, 4 expanded
[t=13.3658s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=13.3658s, 184452 KB] g=11, 430 evaluated, 5 expanded
[t=13.3658s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=13.3658s, 184452 KB] g=14, 478 evaluated, 6 expanded
[t=13.3698s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=13.3698s, 184452 KB] g=14, 525 evaluated, 6 expanded
[t=13.3698s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=13.3698s, 184452 KB] g=17, 566 evaluated, 7 expanded
[t=13.3738s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=13.3738s, 184452 KB] g=20, 653 evaluated, 8 expanded
[t=13.3778s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=13.3778s, 184452 KB] g=23, 739 evaluated, 9 expanded
[t=13.3818s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=13.3818s, 184452 KB] g=24, 824 evaluated, 10 expanded
[t=13.3818s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=13.3818s, 184452 KB] g=27, 908 evaluated, 11 expanded
[t=13.3858s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=13.3858s, 184452 KB] g=28, 993 evaluated, 12 expanded
[t=13.3898s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=13.3898s, 184452 KB] g=31, 1075 evaluated, 13 expanded
[t=13.3938s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=13.3938s, 184452 KB] g=32, 1160 evaluated, 14 expanded
[t=13.3938s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=13.3938s, 184452 KB] g=35, 1240 evaluated, 15 expanded
[t=13.3978s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=13.3978s, 184452 KB] g=36, 1325 evaluated, 16 expanded
[t=13.4058s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=13.4058s, 184452 KB] g=35, 1484 evaluated, 18 expanded
[t=13.4098s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=13.4098s, 184452 KB] g=36, 1652 evaluated, 20 expanded
[t=13.4178s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=13.4178s, 184452 KB] g=41, 1841 evaluated, 22 expanded
[t=13.4178s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=13.4178s, 184452 KB] g=40, 1897 evaluated, 23 expanded
[t=13.4218s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=13.4218s, 184452 KB] g=41, 2014 evaluated, 24 expanded
[t=13.4258s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=13.4258s, 184452 KB] g=42, 2091 evaluated, 25 expanded
[t=13.4298s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=13.4298s, 184452 KB] g=44, 2182 evaluated, 27 expanded
[t=13.4298s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=13.4298s, 184452 KB] g=44, 2195 evaluated, 27 expanded
[t=13.4538s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=13.4538s, 184452 KB] g=50, 2943 evaluated, 36 expanded
[t=13.4578s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=13.4578s, 184452 KB] g=50, 2989 evaluated, 36 expanded
[t=13.4578s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=13.4578s, 184452 KB] g=49, 3071 evaluated, 37 expanded
[t=13.4618s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=13.4618s, 184452 KB] g=52, 3152 evaluated, 38 expanded
[t=13.4658s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=13.4658s, 184452 KB] g=55, 3236 evaluated, 39 expanded
[t=13.4698s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=13.4698s, 184452 KB] g=54, 3318 evaluated, 40 expanded
[t=13.4698s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=13.4698s, 184452 KB] g=55, 3333 evaluated, 41 expanded
[t=13.4738s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=13.4738s, 184452 KB] g=58, 3476 evaluated, 42 expanded
[t=13.4778s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=13.4778s, 184452 KB] g=61, 3562 evaluated, 43 expanded
[t=13.4778s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=13.4778s, 184452 KB] g=60, 3649 evaluated, 44 expanded
[t=13.4858s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=13.4858s, 184452 KB] g=62, 3893 evaluated, 47 expanded
[t=13.4858s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=13.4858s, 184452 KB] g=63, 3911 evaluated, 48 expanded
[t=13.4938s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=13.4938s, 184452 KB] g=66, 4051 evaluated, 49 expanded
[t=13.4938s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=13.4938s, 184452 KB] g=69, 4074 evaluated, 50 expanded
[t=13.4978s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=13.4978s, 184452 KB] g=73, 4224 evaluated, 52 expanded
[t=13.5018s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=13.5018s, 184452 KB] g=76, 4315 evaluated, 53 expanded
[t=13.5098s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=13.5098s, 184452 KB] g=80, 4574 evaluated, 56 expanded
[t=13.5138s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=13.5138s, 184452 KB] g=85, 4807 evaluated, 59 expanded
[t=13.5178s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=13.5178s, 184452 KB] g=85, 4871 evaluated, 59 expanded
[t=13.5178s, 184452 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=13.5178s, 184452 KB] g=84, 4880 evaluated, 60 expanded
[t=13.5178s, 184452 KB] Solution found!
[t=13.5178s, 184452 KB] Actual search time: 0.167965s
analyze-2 seg-in-4 seg-out-1 car-in-4 car-out-1 (3)
analyze-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (3)
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
rotate-2 seg-in-2 seg-out-3 car-in-2 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-out-3 car-out-2 (3)
analyze-2 seg-in-5 seg-out-1 car-in-5 car-out-3 (3)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-in-5 (3)
rotate-2 seg-in-6 seg-out-1 car-in-5 car-in-6 (1)
analyze-2 seg-in-7 seg-out-1 car-in-7 car-in-5 (3)
rotate-2 seg-in-7 seg-out-1 car-in-5 car-in-7 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-in-5 (3)
rotate-2 seg-in-8 seg-out-1 car-in-5 car-in-8 (1)
analyze-2 seg-in-9 seg-out-1 car-in-9 car-in-5 (3)
rotate-2 seg-in-9 seg-out-1 car-in-5 car-in-9 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-5 (1)
rotate-2 seg-in-1 seg-out-4 car-in-5 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-4 (1)
rotate-2 seg-in-5 seg-out-4 car-out-3 car-in-5 (1)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-out-3 (1)
rotate-2 seg-in-2 seg-out-5 car-out-2 car-out-5 (1)
rotate-2 seg-in-1 seg-out-3 car-out-3 car-in-2 (1)
rotate-2 seg-in-1 seg-out-6 car-in-2 car-out-6 (1)
analyze-2 seg-in-2 seg-out-1 car-out-5 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-out-5 (1)
rotate-2 seg-in-2 seg-out-5 car-out-5 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-6 (1)
rotate-2 seg-in-2 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-2 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-2 seg-out-1 car-out-7 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-out-1 car-out-7 (1)
rotate-2 seg-in-1 seg-out-7 car-out-6 car-in-1 (1)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
rotate-2 seg-in-2 seg-out-7 car-out-7 car-out-6 (1)
rotate-2 seg-in-2 seg-out-6 car-out-6 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-8 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-8 (3)
rotate-2 seg-in-2 seg-out-8 car-out-8 car-in-1 (1)
analyze-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-9 car-in-1 car-out-9 (1)
analyze-2 seg-in-1 seg-out-1 car-out-9 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-9 (1)
rotate-2 seg-in-1 seg-out-9 car-out-9 car-in-1 (1)
[t=13.5178s, 184452 KB] Plan length: 48 step(s).
[t=13.5178s, 184452 KB] Plan cost: 84
[t=13.5178s, 184452 KB] Expanded 61 state(s).
[t=13.5178s, 184452 KB] Reopened 0 state(s).
[t=13.5178s, 184452 KB] Evaluated 4951 state(s).
[t=13.5178s, 184452 KB] Evaluations: 5011
[t=13.5178s, 184452 KB] Generated 5400 state(s).
[t=13.5178s, 184452 KB] Dead ends: 0 state(s).
[t=13.5178s, 184452 KB] Number of registered states: 4951
[t=13.5178s, 184452 KB] Int hash set load factor: 4951/8192 = 0.60437
[t=13.5178s, 184452 KB] Int hash set resizes: 13
[t=13.5178s, 184452 KB] Search time: 0.167965s
[t=13.5178s, 184452 KB] Total time: 13.5178s
Solution found.
Peak memory: 184452 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 84 

Successful plans:
Value: 84
 sas_plan 84 

validate exit code: 0

