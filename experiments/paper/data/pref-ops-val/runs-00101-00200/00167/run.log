INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.210s CPU, 0.210s wall-clock]
33265 relevant atoms
7808 auxiliary atoms
41073 final queue length
122737 total queue pushes
Completing instantiation... [0.970s CPU, 0.968s wall-clock]
Instantiating: [1.190s CPU, 1.187s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
16 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.018s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.040s wall-clock]
Translating task: [0.890s CPU, 0.889s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
16 propositions removed
Detecting unreachable propositions: [0.480s CPU, 0.478s wall-clock]
Reordering and filtering variables...
32 of 32 variables necessary.
16 of 32 mutex groups necessary.
30720 of 30720 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.100s CPU, 0.104s wall-clock]
Translator variables: 32
Translator derived variables: 0
Translator facts: 288
Translator goal facts: 32
Translator mutex groups: 16
Translator total mutex groups size: 256
Translator operators: 30720
Translator axioms: 0
Translator task size: 169568
Translator peak memory: 152372 KB
Writing output... [0.120s CPU, 0.122s wall-clock]
Done! [2.850s CPU, 2.846s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1797.1s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0839908s, 55460 KB] done reading input!
[t=0.0879924s, 59412 KB] Simplifying 76800 unary operators... done! [46080 unary operators]
[t=0.103991s, 63736 KB] time to simplify: 0.0159982s
[t=0.103991s, 63736 KB] Initializing additive heuristic...
[t=0.103991s, 63736 KB] Initializing FF heuristic...
[t=0.107992s, 63736 KB] stop search of patterns: 3355443KB
[t=0.107992s, 63736 KB] Generating patterns using the systematic generator...
[t=0.107992s, 63736 KB] building causal graph...done! [t=0.00399955s]
[t=0.13999s, 63736 KB] Found 13668 SGA patterns.
[t=0.51874s, 66956 KB] Found 38948 interesting patterns.
[t=0.51874s, 66956 KB] [32, 376, 4400, 34140]
[t=0.526704s, 67648 KB] Systematic generator number of patterns: 1224
[t=0.526704s, 67648 KB] Systematic generator total PDB size: 3292064
[t=0.526704s, 67648 KB] Systematic generator computation time: 0.418713s
[t=0.526704s, 67648 KB] Computing PDBs for pattern collection...
[t=12.422s, 74624 KB] Done computing PDBs for pattern collection: 11.8953s
[t=13.078s, 186052 KB] Operators: 30720
[t=13.078s, 186052 KB] Restrictions: 1224
[t=13.078s, 186052 KB] Mean mentions: 290
[t=13.078s, 186052 KB] Mean operators: 7300
[t=13.078s, 186052 KB] Building successor generator...done!
[t=13.082s, 187972 KB] peak memory difference for successor generator creation: 1920 KB
[t=13.082s, 187972 KB] time for successor generation creation: 0.00399993s
[t=13.082s, 187972 KB] Variables: 32
[t=13.082s, 187972 KB] FactPairs: 288
[t=13.082s, 187972 KB] Bytes per state: 12
[t=13.082s, 187972 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=13.086s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=13.086s, 187972 KB] g=0, 1 evaluated, 0 expanded
[t=13.086s, 187972 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=13.086s, 187972 KB] pruning method: none
[t=13.086s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=13.086s, 187972 KB] g=3, 18 evaluated, 1 expanded
[t=13.09s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=13.09s, 187972 KB] g=6, 158 evaluated, 2 expanded
[t=13.094s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=13.094s, 187972 KB] g=9, 282 evaluated, 3 expanded
[t=13.094s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=13.094s, 187972 KB] g=9, 284 evaluated, 3 expanded
[t=13.102s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=13.102s, 187972 KB] g=12, 524 evaluated, 5 expanded
[t=13.102s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=13.106s, 187972 KB] g=15, 653 evaluated, 6 expanded
[t=13.106s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=13.106s, 187972 KB] g=18, 754 evaluated, 7 expanded
[t=13.11s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=13.11s, 187972 KB] g=21, 856 evaluated, 8 expanded
[t=13.114s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=13.114s, 187972 KB] g=22, 966 evaluated, 9 expanded
[t=13.118s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=13.118s, 187972 KB] g=25, 1061 evaluated, 10 expanded
[t=13.118s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=13.118s, 187972 KB] g=26, 1155 evaluated, 11 expanded
[t=13.122s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=13.122s, 187972 KB] g=29, 1241 evaluated, 12 expanded
[t=13.122s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=13.122s, 187972 KB] g=30, 1328 evaluated, 13 expanded
[t=13.126s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=13.126s, 187972 KB] g=33, 1407 evaluated, 14 expanded
[t=13.13s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=13.13s, 187972 KB] g=34, 1485 evaluated, 15 expanded
[t=13.13s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=13.13s, 187972 KB] g=35, 1500 evaluated, 16 expanded
[t=13.134s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=13.134s, 187972 KB] g=38, 1627 evaluated, 17 expanded
[t=13.134s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=13.134s, 187972 KB] g=39, 1642 evaluated, 18 expanded
[t=13.138s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=13.138s, 187972 KB] g=42, 1770 evaluated, 19 expanded
[t=13.138s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=13.138s, 187972 KB] g=43, 1785 evaluated, 20 expanded
[t=13.142s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=13.142s, 187972 KB] g=46, 1913 evaluated, 21 expanded
[t=13.142s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=13.142s, 187972 KB] g=47, 1928 evaluated, 22 expanded
[t=13.146s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=13.146s, 187972 KB] g=50, 2056 evaluated, 23 expanded
[t=13.146s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=13.146s, 187972 KB] g=51, 2071 evaluated, 24 expanded
[t=13.15s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=13.15s, 187972 KB] g=54, 2199 evaluated, 25 expanded
[t=13.154s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=13.154s, 187972 KB] g=58, 2355 evaluated, 28 expanded
[t=13.162s, 187972 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=13.162s, 187972 KB] g=62, 2745 evaluated, 34 expanded
[t=13.166s, 187972 KB] Solution found!
[t=13.166s, 187972 KB] Actual search time: 0.0799973s
analyze-2 seg-in-2 seg-out-1 car-in-2 car-out-1 (3)
analyze-2 seg-in-2 seg-out-1 car-out-1 car-in-2 (3)
analyze-2 seg-in-3 seg-out-1 car-in-3 car-out-1 (3)
analyze-2 seg-in-4 seg-out-2 car-in-4 car-out-2 (3)
analyze-2 seg-in-4 seg-out-2 car-out-2 car-in-4 (3)
analyze-2 seg-in-5 seg-out-2 car-in-5 car-out-2 (3)
rotate-2 seg-in-3 seg-out-1 car-out-1 car-in-3 (1)
analyze-2 seg-in-6 seg-out-1 car-in-6 car-out-1 (3)
rotate-2 seg-in-5 seg-out-2 car-out-2 car-in-5 (1)
analyze-2 seg-in-7 seg-out-2 car-in-7 car-out-2 (3)
rotate-2 seg-in-6 seg-out-1 car-out-1 car-in-6 (1)
analyze-2 seg-in-8 seg-out-1 car-in-8 car-out-1 (3)
rotate-2 seg-in-7 seg-out-2 car-out-2 car-in-7 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-3 car-out-3 car-in-1 (3)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (3)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (3)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (3)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-7 car-out-7 car-in-1 (3)
rotate-2 seg-in-1 seg-out-8 car-in-1 car-out-8 (1)
analyze-2 seg-in-1 seg-out-8 car-out-8 car-in-1 (3)
rotate-2 seg-in-8 seg-out-1 car-out-1 car-in-8 (1)
analyze-2 seg-in-1 seg-out-1 car-in-1 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
[t=13.166s, 187972 KB] Plan length: 28 step(s).
[t=13.166s, 187972 KB] Plan cost: 60
[t=13.166s, 187972 KB] Expanded 35 state(s).
[t=13.166s, 187972 KB] Reopened 0 state(s).
[t=13.166s, 187972 KB] Evaluated 2801 state(s).
[t=13.166s, 187972 KB] Evaluations: 2835
[t=13.166s, 187972 KB] Generated 4352 state(s).
[t=13.166s, 187972 KB] Dead ends: 0 state(s).
[t=13.166s, 187972 KB] Number of registered states: 2801
[t=13.166s, 187972 KB] Int hash set load factor: 2801/4096 = 0.683838
[t=13.166s, 187972 KB] Int hash set resizes: 12
[t=13.166s, 187972 KB] Search time: 0.0839964s
[t=13.166s, 187972 KB] Total time: 13.166s
Solution found.
Peak memory: 187972 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 60 

Successful plans:
Value: 60
 sas_plan 60 

validate exit code: 0

