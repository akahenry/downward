INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.300s CPU, 0.303s wall-clock]
53177 relevant atoms
5070 auxiliary atoms
58247 final queue length
172333 total queue pushes
Completing instantiation... [1.760s CPU, 1.768s wall-clock]
Instantiating: [2.080s CPU, 2.081s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.000s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
71 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.017s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.070s CPU, 0.070s wall-clock]
Translating task: [2.010s CPU, 2.014s wall-clock]
61152 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
28 propositions removed
Detecting unreachable propositions: [1.050s CPU, 1.058s wall-clock]
Reordering and filtering variables...
99 of 99 variables necessary.
43 of 71 mutex groups necessary.
49392 of 49392 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.310s CPU, 0.297s wall-clock]
Translator variables: 99
Translator derived variables: 0
Translator facts: 1346
Translator goal facts: 28
Translator mutex groups: 43
Translator total mutex groups size: 1247
Translator operators: 49392
Translator axioms: 0
Translator task size: 402560
Translator peak memory: 267876 KB
Writing output... [0.280s CPU, 0.278s wall-clock]
Done! [5.830s CPU, 5.836s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1794.1s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.170368s, 64864 KB] done reading input!
[t=0.18637s, 76076 KB] Simplifying 171276 unary operators... done! [171276 unary operators]
[t=0.466356s, 91344 KB] time to simplify: 0.279986s
[t=0.470356s, 91344 KB] Initializing additive heuristic...
[t=0.470356s, 91344 KB] Initializing FF heuristic...
[t=0.470356s, 91344 KB] stop search of patterns: 3355443KB
[t=0.470356s, 91344 KB] Generating patterns using the systematic generator...
[t=0.470356s, 91344 KB] building causal graph...done! [t=0.0199969s]
[t=6.5912s, 824232 KB] Found 2646294 SGA patterns.
[t=48.9864s, 829652 KB] Found 2870700 interesting patterns.
[t=49.678s, 829652 KB] [28, 1988, 96418, 2772266]
[t=51.7605s, 829652 KB] Systematic generator number of patterns: 6048
[t=51.7605s, 829652 KB] Systematic generator total PDB size: 33979546
[t=51.7605s, 829652 KB] Systematic generator computation time: 51.2901s
[t=51.7605s, 829652 KB] Computing PDBs for pattern collection...
[t=170.906s, 829652 KB] Done computing PDBs for pattern collection: 119.145s
[t=179.852s, 829652 KB] Operators: 49392
[t=179.852s, 829652 KB] Restrictions: 6048
[t=179.852s, 829652 KB] Mean mentions: 615
[t=179.852s, 829652 KB] Mean operators: 5024
[t=179.856s, 829652 KB] Building successor generator...done!
[t=179.872s, 829652 KB] peak memory difference for successor generator creation: 0 KB
[t=179.872s, 829652 KB] time for successor generation creation: 0.0159897s
[t=179.872s, 829652 KB] Variables: 99
[t=179.872s, 829652 KB] FactPairs: 1346
[t=179.872s, 829652 KB] Bytes per state: 32
[t=179.872s, 829652 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=179.872s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 56
[t=179.872s, 829652 KB] g=0, 1 evaluated, 0 expanded
[t=179.872s, 829652 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 56
[t=179.872s, 829652 KB] pruning method: none
[t=179.876s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 54
[t=179.876s, 829652 KB] g=1, 2 evaluated, 1 expanded
[t=179.884s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 53
[t=179.884s, 829652 KB] g=2, 22 evaluated, 2 expanded
[t=179.896s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 51
[t=179.896s, 829652 KB] g=4, 83 evaluated, 4 expanded
[t=179.904s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=179.904s, 829652 KB] g=5, 126 evaluated, 5 expanded
[t=179.908s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=179.908s, 829652 KB] g=6, 137 evaluated, 6 expanded
[t=179.912s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=179.912s, 829652 KB] g=7, 156 evaluated, 7 expanded
[t=179.928s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=179.928s, 829652 KB] g=8, 226 evaluated, 9 expanded
[t=179.944s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=179.944s, 829652 KB] g=9, 307 evaluated, 12 expanded
[t=179.952s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=179.952s, 829652 KB] g=10, 324 evaluated, 13 expanded
[t=179.956s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=179.956s, 829652 KB] g=11, 343 evaluated, 14 expanded
[t=179.964s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=179.964s, 829652 KB] g=12, 376 evaluated, 15 expanded
[t=179.968s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=179.968s, 829652 KB] g=13, 394 evaluated, 16 expanded
[t=179.972s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=179.972s, 829652 KB] g=14, 412 evaluated, 17 expanded
[t=179.98s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=179.98s, 829652 KB] g=15, 445 evaluated, 18 expanded
[t=179.984s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=179.984s, 829652 KB] g=16, 471 evaluated, 19 expanded
[t=179.992s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=179.992s, 829652 KB] g=17, 492 evaluated, 20 expanded
[t=179.996s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=179.996s, 829652 KB] g=18, 513 evaluated, 21 expanded
[t=180.004s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=180.004s, 829652 KB] g=19, 549 evaluated, 22 expanded
[t=180.016s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=180.016s, 829652 KB] g=21, 585 evaluated, 24 expanded
[t=180.028s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=180.028s, 829652 KB] g=23, 633 evaluated, 26 expanded
[t=180.304s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=180.304s, 829652 KB] g=27, 1777 evaluated, 71 expanded
[t=180.324s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=180.324s, 829652 KB] g=28, 1862 evaluated, 74 expanded
[t=182.259s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=182.259s, 829652 KB] g=34, 9452 evaluated, 390 expanded
[t=182.271s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=182.271s, 829652 KB] g=35, 9505 evaluated, 392 expanded
[t=182.275s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=182.275s, 829652 KB] g=36, 9522 evaluated, 393 expanded
[t=199.789s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=199.789s, 829652 KB] g=43, 76087 evaluated, 3356 expanded
[t=199.817s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=199.817s, 829652 KB] g=45, 76196 evaluated, 3360 expanded
[t=199.821s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=199.821s, 829652 KB] g=46, 76214 evaluated, 3361 expanded
[t=206.621s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=206.621s, 829652 KB] g=53, 102145 evaluated, 4522 expanded
[t=206.645s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=206.645s, 829652 KB] g=55, 102254 evaluated, 4526 expanded
[t=206.653s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=206.653s, 829652 KB] g=56, 102273 evaluated, 4527 expanded
[t=219.106s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=219.106s, 829652 KB] g=61, 148487 evaluated, 6697 expanded
[t=219.11s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=219.11s, 829652 KB] g=62, 148505 evaluated, 6698 expanded
[t=228.729s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=228.729s, 829652 KB] g=67, 184286 evaluated, 8381 expanded
[t=228.737s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=228.737s, 829652 KB] g=68, 184308 evaluated, 8382 expanded
[t=235.261s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=235.261s, 829652 KB] g=73, 208767 evaluated, 9520 expanded
[t=235.265s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=235.265s, 829652 KB] g=74, 208788 evaluated, 9521 expanded
[t=239.587s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=239.587s, 829652 KB] g=79, 225398 evaluated, 10265 expanded
[t=239.591s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=239.591s, 829652 KB] g=80, 225422 evaluated, 10266 expanded
[t=242.137s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=242.137s, 829652 KB] g=85, 235561 evaluated, 10696 expanded
[t=242.145s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=242.145s, 829652 KB] g=86, 235586 evaluated, 10697 expanded
[t=243.385s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=243.385s, 829652 KB] g=91, 240527 evaluated, 10909 expanded
[t=243.393s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=243.393s, 829652 KB] g=92, 240547 evaluated, 10910 expanded
[t=243.992s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=243.992s, 829652 KB] g=97, 242939 evaluated, 11013 expanded
[t=243.996s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=243.996s, 829652 KB] g=98, 242953 evaluated, 11014 expanded
[t=244.232s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=244.232s, 829652 KB] g=102, 243928 evaluated, 11055 expanded
[t=244.24s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=244.24s, 829652 KB] g=103, 243974 evaluated, 11057 expanded
[t=244.244s, 829652 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=244.244s, 829652 KB] g=104, 243997 evaluated, 11058 expanded
[t=244.248s, 829652 KB] Solution found!
[t=244.248s, 829652 KB] Actual search time: 64.3758s
move-car-to-curb car_02 car_10 curb_14 (1)
move-car-to-car car_17 car_11 car_02 (1)
move-car-to-car car_03 car_08 car_10 (1)
move-car-to-car car_23 car_12 car_08 (1)
move-car-to-car car_27 car_05 car_12 (1)
move-car-to-car car_20 car_00 car_05 (1)
move-car-to-car car_15 car_13 car_00 (1)
move-car-to-car car_09 car_26 car_13 (1)
move-curb-to-car car_26 curb_13 car_11 (1)
move-car-to-curb car_03 car_10 curb_13 (1)
move-car-to-car car_18 car_25 car_03 (1)
move-curb-to-car car_25 curb_02 car_10 (1)
move-car-to-curb car_04 car_21 curb_02 (1)
move-car-to-car car_19 car_01 car_04 (1)
move-car-to-car car_24 car_06 car_01 (1)
move-curb-to-car car_21 curb_08 car_06 (1)
move-car-to-curb car_07 car_16 curb_08 (1)
move-car-to-car car_22 car_14 car_07 (1)
move-curb-to-car car_14 curb_00 car_16 (1)
move-car-to-curb car_09 car_13 curb_00 (1)
move-car-to-car car_24 car_01 car_09 (1)
move-car-to-car car_14 car_16 car_13 (1)
move-curb-to-car car_16 curb_03 car_01 (1)
move-car-to-curb car_17 car_02 curb_03 (1)
move-curb-to-car car_02 curb_14 car_17 (1)
move-car-to-curb car_14 car_13 curb_14 (1)
move-curb-to-car car_13 curb_05 car_14 (1)
move-car-to-curb car_02 car_17 curb_05 (1)
move-curb-to-car car_17 curb_03 car_02 (1)
move-car-to-curb car_18 car_03 curb_03 (1)
move-curb-to-car car_03 curb_13 car_18 (1)
move-car-to-curb car_13 car_14 curb_13 (1)
move-car-to-car car_03 car_18 car_13 (1)
move-curb-to-car car_18 curb_03 car_14 (1)
move-car-to-curb car_03 car_13 curb_03 (1)
move-car-to-car car_18 car_14 car_03 (1)
move-car-to-car car_17 car_02 car_13 (1)
move-curb-to-car car_02 curb_05 car_14 (1)
move-car-to-curb car_19 car_04 curb_05 (1)
move-curb-to-car car_04 curb_02 car_19 (1)
move-car-to-curb car_02 car_14 curb_02 (1)
move-car-to-car car_17 car_13 car_02 (1)
move-car-to-car car_04 car_19 car_13 (1)
move-curb-to-car car_19 curb_05 car_14 (1)
move-car-to-curb car_04 car_13 curb_05 (1)
move-car-to-car car_19 car_14 car_04 (1)
move-car-to-car car_27 car_12 car_13 (1)
move-curb-to-car car_12 curb_09 car_14 (1)
move-car-to-curb car_20 car_05 curb_09 (1)
move-curb-to-car car_05 curb_12 car_20 (1)
move-car-to-curb car_12 car_14 curb_12 (1)
move-car-to-car car_27 car_13 car_12 (1)
move-car-to-car car_05 car_20 car_13 (1)
move-curb-to-car car_20 curb_09 car_14 (1)
move-car-to-curb car_19 car_04 curb_09 (1)
move-curb-to-car car_04 curb_05 car_19 (1)
move-car-to-curb car_05 car_13 curb_05 (1)
move-car-to-car car_20 car_14 car_05 (1)
move-car-to-car car_04 car_19 car_13 (1)
move-curb-to-car car_19 curb_09 car_14 (1)
move-car-to-curb car_23 car_08 curb_09 (1)
move-curb-to-car car_08 curb_04 car_23 (1)
move-car-to-curb car_04 car_13 curb_04 (1)
move-car-to-car car_19 car_14 car_04 (1)
move-car-to-car car_08 car_23 car_13 (1)
move-curb-to-car car_23 curb_09 car_14 (1)
move-car-to-curb car_22 car_07 curb_09 (1)
move-curb-to-car car_07 curb_08 car_22 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-car-to-car car_23 car_14 car_08 (1)
move-car-to-car car_07 car_22 car_13 (1)
move-curb-to-car car_22 curb_09 car_14 (1)
move-car-to-curb car_25 car_10 curb_09 (1)
move-curb-to-car car_10 curb_07 car_25 (1)
move-car-to-curb car_07 car_13 curb_07 (1)
move-car-to-car car_22 car_14 car_07 (1)
move-car-to-car car_10 car_25 car_13 (1)
move-curb-to-car car_25 curb_09 car_14 (1)
move-car-to-curb car_26 car_11 curb_09 (1)
move-curb-to-car car_11 curb_10 car_26 (1)
move-car-to-curb car_10 car_13 curb_10 (1)
move-car-to-car car_25 car_14 car_10 (1)
move-car-to-car car_11 car_26 car_14 (1)
move-curb-to-car car_26 curb_09 car_13 (1)
move-car-to-curb car_21 car_06 curb_09 (1)
move-curb-to-car car_06 curb_11 car_21 (1)
move-car-to-curb car_11 car_14 curb_11 (1)
move-car-to-car car_26 car_13 car_11 (1)
move-car-to-car car_06 car_21 car_14 (1)
move-curb-to-car car_21 curb_09 car_13 (1)
move-car-to-curb car_15 car_00 curb_09 (1)
move-curb-to-car car_00 curb_06 car_15 (1)
move-car-to-curb car_06 car_14 curb_06 (1)
move-car-to-car car_21 car_13 car_06 (1)
move-car-to-car car_00 car_15 car_14 (1)
move-curb-to-car car_15 curb_09 car_13 (1)
move-car-to-curb car_24 car_09 curb_09 (1)
move-curb-to-car car_09 curb_00 car_24 (1)
move-car-to-curb car_00 car_14 curb_00 (1)
move-car-to-car car_15 car_13 car_00 (1)
move-car-to-car car_09 car_24 car_13 (1)
move-curb-to-car car_24 curb_09 car_14 (1)
move-car-to-curb car_09 car_13 curb_09 (1)
move-car-to-car car_24 car_14 car_09 (1)
[t=244.248s, 829652 KB] Plan length: 104 step(s).
[t=244.248s, 829652 KB] Plan cost: 104
[t=244.248s, 829652 KB] Expanded 11059 state(s).
[t=244.248s, 829652 KB] Reopened 0 state(s).
[t=244.248s, 829652 KB] Evaluated 244015 state(s).
[t=244.248s, 829652 KB] Evaluations: 255073
[t=244.248s, 829652 KB] Generated 310412 state(s).
[t=244.248s, 829652 KB] Dead ends: 19450 state(s).
[t=244.248s, 829652 KB] Number of registered states: 244015
[t=244.248s, 829652 KB] Int hash set load factor: 244015/524288 = 0.465422
[t=244.248s, 829652 KB] Int hash set resizes: 19
[t=244.248s, 829652 KB] Search time: 64.3758s
[t=244.248s, 829652 KB] Total time: 244.248s
Solution found.
Peak memory: 829652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 104 

Successful plans:
Value: 104
 sas_plan 104 

validate exit code: 0

