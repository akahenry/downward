INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.070s CPU, 0.070s wall-clock]
10145 relevant atoms
5062 auxiliary atoms
15207 final queue length
34807 total queue pushes
Completing instantiation... [0.240s CPU, 0.246s wall-clock]
Instantiating: [0.320s CPU, 0.321s wall-clock]
Computing fact groups...
Finding invariants...
5 initial candidates
Finding invariants: [0.020s CPU, 0.013s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
14 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.012s wall-clock]
Translating task: [0.230s CPU, 0.229s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
14 propositions removed
Detecting unreachable propositions: [0.130s CPU, 0.133s wall-clock]
Reordering and filtering variables...
28 of 28 variables necessary.
14 of 28 mutex groups necessary.
9100 of 9100 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.026s wall-clock]
Translator variables: 28
Translator derived variables: 0
Translator facts: 224
Translator goal facts: 28
Translator mutex groups: 14
Translator total mutex groups size: 196
Translator operators: 9100
Translator axioms: 0
Translator task size: 46158
Translator peak memory: 63436 KB
Writing output... [0.030s CPU, 0.033s wall-clock]
Done! [0.770s CPU, 0.774s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.18s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0199735s, 48812 KB] done reading input!
[t=0.0239491s, 50028 KB] Simplifying 18382 unary operators... done! [18018 unary operators]
[t=0.0309321s, 51640 KB] time to simplify: 0.00698293s
[t=0.031526s, 51640 KB] Initializing additive heuristic...
[t=0.0317221s, 51640 KB] Initializing FF heuristic...
[t=0.0317344s, 51640 KB] stop search of patterns: 3355443KB
[t=0.0317891s, 51640 KB] Generating patterns using the systematic generator...
[t=0.0318335s, 51640 KB] building causal graph...done! [t=3.5267e-05s]
[t=0.0518594s, 52020 KB] Found 8050 SGA patterns.
[t=0.263239s, 54420 KB] Found 22701 interesting patterns.
[t=0.267192s, 54420 KB] [28, 287, 2912, 19474]
[t=0.267192s, 54880 KB] Systematic generator number of patterns: 945
[t=0.267192s, 54880 KB] Systematic generator total PDB size: 1201060
[t=0.267192s, 54880 KB] Systematic generator computation time: 0.235403s
[t=0.267192s, 54880 KB] Computing PDBs for pattern collection...
[t=2.30696s, 56436 KB] Done computing PDBs for pattern collection: 2.03977s
[t=2.43896s, 77764 KB] Operators: 9100
[t=2.43896s, 77764 KB] Restrictions: 945
[t=2.43896s, 77764 KB] Mean mentions: 217
[t=2.43896s, 77764 KB] Mean operators: 2095
[t=2.43896s, 77764 KB] Building successor generator...done!
[t=2.44296s, 78088 KB] peak memory difference for successor generator creation: 324 KB
[t=2.44296s, 78088 KB] time for successor generation creation: 0.00399958s
[t=2.44296s, 78088 KB] Variables: 28
[t=2.44296s, 78088 KB] FactPairs: 224
[t=2.44296s, 78088 KB] Bytes per state: 12
[t=2.44296s, 78088 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=2.44296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=2.44296s, 78088 KB] g=0, 1 evaluated, 0 expanded
[t=2.44296s, 78088 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=2.44296s, 78088 KB] pruning method: none
[t=2.44296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=2.44296s, 78088 KB] g=1, 4 evaluated, 1 expanded
[t=2.44296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=2.44296s, 78088 KB] g=4, 94 evaluated, 2 expanded
[t=2.44296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=2.44296s, 78088 KB] g=5, 120 evaluated, 3 expanded
[t=2.44696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=2.44696s, 78088 KB] g=7, 144 evaluated, 3 expanded
[t=2.44696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=2.44696s, 78088 KB] g=8, 157 evaluated, 4 expanded
[t=2.44696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=2.44696s, 78088 KB] g=9, 202 evaluated, 5 expanded
[t=2.44696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=2.44696s, 78088 KB] g=12, 291 evaluated, 6 expanded
[t=2.45096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=2.45096s, 78088 KB] g=13, 318 evaluated, 7 expanded
[t=2.45096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=2.45096s, 78088 KB] g=14, 352 evaluated, 8 expanded
[t=2.45096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=2.45096s, 78088 KB] g=16, 369 evaluated, 8 expanded
[t=2.45496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=2.45496s, 78088 KB] g=16, 514 evaluated, 11 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=2.45896s, 78088 KB] g=20, 711 evaluated, 15 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=2.45896s, 78088 KB] g=21, 736 evaluated, 16 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=2.45896s, 78088 KB] g=21, 754 evaluated, 16 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=2.45896s, 78088 KB] g=23, 760 evaluated, 16 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=2.45896s, 78088 KB] g=24, 789 evaluated, 17 expanded
[t=2.45896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=2.45896s, 78088 KB] g=25, 853 evaluated, 18 expanded
[t=2.46296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=2.46296s, 78088 KB] g=26, 902 evaluated, 19 expanded
[t=2.46296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=2.46296s, 78088 KB] g=30, 1058 evaluated, 22 expanded
[t=2.46296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=2.46296s, 78088 KB] g=31, 1079 evaluated, 23 expanded
[t=2.46296s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=2.46296s, 78088 KB] g=31, 1097 evaluated, 23 expanded
[t=2.46696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=2.46696s, 78088 KB] g=33, 1109 evaluated, 23 expanded
[t=2.46696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=2.46696s, 78088 KB] g=34, 1131 evaluated, 24 expanded
[t=2.46696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=2.46696s, 78088 KB] g=35, 1195 evaluated, 25 expanded
[t=2.46696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=2.46696s, 78088 KB] g=41, 1273 evaluated, 27 expanded
[t=2.47096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=2.47096s, 78088 KB] g=42, 1345 evaluated, 28 expanded
[t=2.47096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=2.47096s, 78088 KB] g=49, 1513 evaluated, 31 expanded
[t=2.47096s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=2.47096s, 78088 KB] g=48, 1521 evaluated, 32 expanded
[t=2.47496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=2.47496s, 78088 KB] g=52, 1653 evaluated, 34 expanded
[t=2.47496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=2.47496s, 78088 KB] g=55, 1708 evaluated, 35 expanded
[t=2.47496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=2.47496s, 78088 KB] g=54, 1715 evaluated, 36 expanded
[t=2.48696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=2.48696s, 78088 KB] g=60, 2467 evaluated, 52 expanded
[t=2.48696s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=2.48696s, 78088 KB] g=62, 2472 evaluated, 52 expanded
[t=2.51496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=2.51496s, 78088 KB] g=68, 4023 evaluated, 86 expanded
[t=2.51496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=2.51496s, 78088 KB] g=69, 4074 evaluated, 87 expanded
[t=2.51496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=2.51496s, 78088 KB] g=72, 4147 evaluated, 88 expanded
[t=2.51496s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=2.51496s, 78088 KB] g=73, 4155 evaluated, 89 expanded
[t=2.51896s, 78088 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=2.51896s, 78088 KB] g=76, 4208 evaluated, 90 expanded
[t=2.51896s, 78088 KB] Solution found!
[t=2.51896s, 78088 KB] Actual search time: 0.0759978s
rotate-2 seg-in-1 seg-out-2 car-in-1 car-out-2 (1)
analyze-2 seg-in-1 seg-out-1 car-out-2 car-out-1 (3)
analyze-2 seg-in-1 seg-out-1 car-out-1 car-out-2 (3)
rotate-2 seg-in-1 seg-out-2 car-out-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-3 car-in-1 car-out-3 (1)
analyze-2 seg-in-1 seg-out-1 car-out-3 car-out-1 (3)
rotate-2 seg-in-4 seg-out-1 car-in-4 car-out-3 (1)
rotate-2 seg-in-1 seg-out-3 car-out-1 car-in-1 (1)
rotate-2 seg-in-4 seg-out-3 car-out-3 car-out-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-5 car-in-4 (1)
rotate-2 seg-in-1 seg-out-4 car-in-1 car-out-4 (1)
analyze-2 seg-in-1 seg-out-1 car-out-4 car-in-5 (3)
analyze-2 seg-in-1 seg-out-1 car-in-5 car-out-4 (3)
rotate-2 seg-in-1 seg-out-4 car-out-4 car-in-1 (1)
rotate-2 seg-in-5 seg-out-1 car-in-4 car-in-5 (1)
rotate-2 seg-in-6 seg-out-1 car-in-6 car-in-4 (1)
rotate-2 seg-in-1 seg-out-5 car-in-1 car-out-5 (1)
analyze-2 seg-in-1 seg-out-1 car-out-5 car-in-6 (3)
analyze-2 seg-in-1 seg-out-1 car-in-6 car-out-5 (3)
rotate-2 seg-in-1 seg-out-5 car-out-5 car-in-1 (1)
rotate-2 seg-in-6 seg-out-1 car-in-4 car-in-6 (1)
analyze-2 seg-in-1 seg-out-1 car-in-1 car-in-4 (3)
analyze-2 seg-in-1 seg-out-1 car-in-4 car-in-1 (3)
rotate-2 seg-in-4 seg-out-1 car-out-1 car-in-4 (1)
rotate-2 seg-in-1 seg-out-6 car-in-1 car-out-6 (1)
analyze-2 seg-in-1 seg-out-1 car-out-6 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-6 (1)
rotate-2 seg-in-1 seg-out-6 car-out-6 car-in-1 (1)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-out-7 (1)
analyze-2 seg-in-1 seg-out-1 car-out-7 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-out-7 (1)
rotate-2 seg-in-2 seg-out-7 car-in-2 car-in-1 (1)
rotate-2 seg-in-1 seg-out-7 car-out-7 car-in-2 (1)
analyze-2 seg-in-1 seg-out-1 car-in-2 car-out-1 (3)
rotate-2 seg-in-2 seg-out-1 car-in-1 car-in-2 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
rotate-2 seg-in-3 seg-out-7 car-in-3 car-out-7 (1)
rotate-2 seg-in-1 seg-out-7 car-in-1 car-in-3 (1)
rotate-2 seg-in-7 seg-out-7 car-in-7 car-in-1 (1)
analyze-2 seg-in-1 seg-out-1 car-in-3 car-out-1 (3)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-3 (1)
rotate-2 seg-in-1 seg-out-7 car-in-3 car-in-7 (1)
rotate-2 seg-in-3 seg-out-7 car-out-7 car-in-3 (1)
analyze-2 seg-in-1 seg-out-1 car-in-7 car-out-1 (3)
rotate-2 seg-in-7 seg-out-1 car-in-1 car-in-7 (1)
rotate-2 seg-in-1 seg-out-1 car-out-1 car-in-1 (1)
[t=2.51896s, 78088 KB] Plan length: 46 step(s).
[t=2.51896s, 78088 KB] Plan cost: 74
[t=2.51896s, 78088 KB] Expanded 91 state(s).
[t=2.51896s, 78088 KB] Reopened 0 state(s).
[t=2.51896s, 78088 KB] Evaluated 4250 state(s).
[t=2.51896s, 78088 KB] Evaluations: 4340
[t=2.51896s, 78088 KB] Generated 4500 state(s).
[t=2.51896s, 78088 KB] Dead ends: 0 state(s).
[t=2.51896s, 78088 KB] Number of registered states: 4250
[t=2.51896s, 78088 KB] Int hash set load factor: 4250/8192 = 0.518799
[t=2.51896s, 78088 KB] Int hash set resizes: 13
[t=2.51896s, 78088 KB] Search time: 0.0759978s
[t=2.51896s, 78088 KB] Total time: 2.51896s
Solution found.
Peak memory: 78088 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 74 

Successful plans:
Value: 74
 sas_plan 74 

validate exit code: 0

