INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.350s CPU, 0.347s wall-clock]
65075 relevant atoms
5792 auxiliary atoms
70867 final queue length
210833 total queue pushes
Completing instantiation... [2.110s CPU, 2.099s wall-clock]
Instantiating: [2.460s CPU, 2.460s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.006s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
76 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.019s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.080s CPU, 0.080s wall-clock]
Translating task: [2.320s CPU, 2.321s wall-clock]
75150 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
30 propositions removed
Detecting unreachable propositions: [1.210s CPU, 1.205s wall-clock]
Reordering and filtering variables...
106 of 106 variables necessary.
46 of 76 mutex groups necessary.
60750 of 60750 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.330s CPU, 0.337s wall-clock]
Translator variables: 106
Translator derived variables: 0
Translator facts: 1532
Translator goal facts: 30
Translator mutex groups: 46
Translator total mutex groups size: 1426
Translator operators: 60750
Translator axioms: 0
Translator task size: 494944
Translator peak memory: 322872 KB
Writing output... [0.330s CPU, 0.329s wall-clock]
Done! [6.770s CPU, 6.774s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1793.13s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.205964s, 69096 KB] done reading input!
[t=0.221965s, 81436 KB] Simplifying 210570 unary operators... done! [210570 unary operators]
[t=0.509961s, 100760 KB] time to simplify: 0.287996s
[t=0.509961s, 100760 KB] Initializing additive heuristic...
[t=0.509961s, 100760 KB] Initializing FF heuristic...
[t=0.509961s, 100760 KB] stop search of patterns: 3355443KB
[t=0.509961s, 100760 KB] Generating patterns using the systematic generator...
[t=0.509961s, 100760 KB] building causal graph...done! [t=0.0279974s]
[t=8.42013s, 962384 KB] Found 3479770 SGA patterns.
[t=64.8696s, 995056 KB] Found 3778180 interesting patterns.
[t=65.6656s, 995056 KB] [30, 2280, 118560, 3657310]
[t=68.2174s, 995056 KB] Systematic generator number of patterns: 6930
[t=68.2174s, 995056 KB] Systematic generator total PDB size: 46277380
[t=68.2174s, 995056 KB] Systematic generator computation time: 67.7074s
[t=68.2174s, 995056 KB] Computing PDBs for pattern collection...
[t=239.198s, 995056 KB] Done computing PDBs for pattern collection: 170.981s
[t=253.253s, 995056 KB] Operators: 60750
[t=253.253s, 995056 KB] Restrictions: 6930
[t=253.253s, 995056 KB] Mean mentions: 664
[t=253.253s, 995056 KB] Mean operators: 5822
[t=253.261s, 995056 KB] Building successor generator...done!
[t=253.285s, 995056 KB] peak memory difference for successor generator creation: 0 KB
[t=253.285s, 995056 KB] time for successor generation creation: 0.0239835s
[t=253.285s, 995056 KB] Variables: 106
[t=253.285s, 995056 KB] FactPairs: 1532
[t=253.285s, 995056 KB] Bytes per state: 32
[t=253.285s, 995056 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=253.285s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 63
[t=253.285s, 995056 KB] g=0, 1 evaluated, 0 expanded
[t=253.285s, 995056 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 63
[t=253.285s, 995056 KB] pruning method: none
[t=253.289s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 62
[t=253.289s, 995056 KB] g=1, 2 evaluated, 1 expanded
[t=253.381s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 60
[t=253.381s, 995056 KB] g=3, 315 evaluated, 11 expanded
[t=253.405s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 58
[t=253.405s, 995056 KB] g=5, 404 evaluated, 14 expanded
[t=253.413s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 57
[t=253.413s, 995056 KB] g=6, 424 evaluated, 15 expanded
[t=253.421s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 55
[t=253.421s, 995056 KB] g=7, 445 evaluated, 16 expanded
[t=253.429s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 54
[t=253.429s, 995056 KB] g=8, 469 evaluated, 17 expanded
[t=253.433s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=253.437s, 995056 KB] g=9, 491 evaluated, 18 expanded
[t=253.445s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=253.445s, 995056 KB] g=10, 525 evaluated, 19 expanded
[t=253.525s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=253.525s, 995056 KB] g=12, 798 evaluated, 29 expanded
[t=253.525s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=253.525s, 995056 KB] g=12, 799 evaluated, 29 expanded
[t=253.633s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=253.633s, 995056 KB] g=14, 1152 evaluated, 42 expanded
[t=253.641s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=253.641s, 995056 KB] g=15, 1172 evaluated, 43 expanded
[t=253.641s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=253.641s, 995056 KB] g=15, 1173 evaluated, 43 expanded
[t=253.649s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=253.649s, 995056 KB] g=16, 1186 evaluated, 44 expanded
[t=253.649s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=253.649s, 995056 KB] g=16, 1190 evaluated, 44 expanded
[t=253.725s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=253.725s, 995056 KB] g=18, 1451 evaluated, 53 expanded
[t=253.733s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=253.733s, 995056 KB] g=19, 1471 evaluated, 54 expanded
[t=253.749s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=253.749s, 995056 KB] g=20, 1529 evaluated, 56 expanded
[t=253.813s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=253.813s, 995056 KB] g=22, 1748 evaluated, 64 expanded
[t=253.821s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=253.821s, 995056 KB] g=23, 1770 evaluated, 65 expanded
[t=253.837s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=253.841s, 995056 KB] g=25, 1835 evaluated, 67 expanded
[t=253.845s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=253.845s, 995056 KB] g=26, 1853 evaluated, 68 expanded
[t=253.853s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=253.853s, 995056 KB] g=27, 1879 evaluated, 69 expanded
[t=253.861s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=253.861s, 995056 KB] g=28, 1897 evaluated, 70 expanded
[t=253.865s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=253.865s, 995056 KB] g=29, 1912 evaluated, 71 expanded
[t=253.881s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=253.881s, 995056 KB] g=30, 1973 evaluated, 73 expanded
[t=254.344s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=254.344s, 995056 KB] g=36, 3509 evaluated, 130 expanded
[t=254.352s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=254.352s, 995056 KB] g=37, 3527 evaluated, 131 expanded
[t=274.827s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=274.827s, 995056 KB] g=42, 66413 evaluated, 2922 expanded
[t=274.831s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=274.831s, 995056 KB] g=43, 66436 evaluated, 2923 expanded
[t=290.653s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=290.653s, 995056 KB] g=48, 115342 evaluated, 5070 expanded
[t=290.657s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=290.661s, 995056 KB] g=49, 115367 evaluated, 5071 expanded
[t=302.362s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=302.362s, 995056 KB] g=54, 151787 evaluated, 6664 expanded
[t=302.37s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=302.37s, 995056 KB] g=55, 151803 evaluated, 6665 expanded
[t=310.405s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=310.405s, 995056 KB] g=59, 177482 evaluated, 7763 expanded
[t=310.421s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=310.421s, 995056 KB] g=60, 177538 evaluated, 7765 expanded
[t=310.429s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=310.429s, 995056 KB] g=61, 177557 evaluated, 7766 expanded
[t=314.85s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=314.85s, 995056 KB] g=69, 192185 evaluated, 8352 expanded
[t=314.874s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=314.874s, 995056 KB] g=71, 192260 evaluated, 8355 expanded
[t=316.413s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=316.413s, 995056 KB] g=75, 197407 evaluated, 8559 expanded
[t=316.425s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=316.425s, 995056 KB] g=77, 197452 evaluated, 8561 expanded
[t=317.348s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=317.348s, 995056 KB] g=81, 200475 evaluated, 8688 expanded
[t=317.36s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=317.36s, 995056 KB] g=83, 200520 evaluated, 8690 expanded
[t=317.696s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=317.696s, 995056 KB] g=87, 201689 evaluated, 8737 expanded
[t=317.712s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=317.712s, 995056 KB] g=88, 201748 evaluated, 8739 expanded
[t=317.716s, 995056 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=317.716s, 995056 KB] g=89, 201763 evaluated, 8740 expanded
[t=317.72s, 995056 KB] Solution found!
[t=317.72s, 995056 KB] Actual search time: 64.4349s
move-car-to-car car_01 car_22 car_14 (1)
move-car-to-car car_11 car_05 car_22 (1)
move-car-to-car car_21 car_08 car_05 (1)
move-car-to-car car_02 car_24 car_18 (1)
move-curb-to-car car_24 curb_13 car_08 (1)
move-car-to-curb car_02 car_18 curb_13 (1)
move-curb-to-car car_18 curb_15 car_02 (1)
move-car-to-curb car_03 car_15 curb_15 (1)
move-car-to-car car_19 car_10 car_03 (1)
move-car-to-car car_26 car_25 car_10 (1)
move-curb-to-car car_15 curb_07 car_25 (1)
move-car-to-curb car_07 car_28 curb_07 (1)
move-car-to-car car_27 car_23 car_28 (1)
move-curb-to-car car_23 curb_09 car_07 (1)
move-car-to-curb car_09 car_00 curb_09 (1)
move-car-to-car car_16 car_17 car_00 (1)
move-car-to-car car_15 car_25 car_17 (1)
move-curb-to-car car_25 curb_00 car_09 (1)
move-car-to-curb car_11 car_22 curb_00 (1)
move-car-to-car car_27 car_28 car_11 (1)
move-curb-to-car car_22 curb_06 car_28 (1)
move-car-to-curb car_06 car_13 curb_06 (1)
move-car-to-car car_22 car_28 car_06 (1)
move-car-to-car car_12 car_29 car_28 (1)
move-curb-to-car car_29 curb_12 car_13 (1)
move-car-to-curb car_12 car_28 curb_12 (1)
move-curb-to-car car_28 curb_10 car_12 (1)
move-car-to-curb car_01 car_14 curb_10 (1)
move-car-to-car car_15 car_17 car_14 (1)
move-curb-to-car car_17 curb_04 car_01 (1)
move-car-to-curb car_19 car_03 curb_04 (1)
move-curb-to-car car_03 curb_15 car_19 (1)
move-car-to-curb car_15 car_14 curb_15 (1)
move-car-to-car car_03 car_19 car_14 (1)
move-curb-to-car car_19 curb_04 car_15 (1)
move-car-to-curb car_24 car_08 curb_04 (1)
move-curb-to-car car_08 curb_03 car_24 (1)
move-car-to-curb car_03 car_14 curb_03 (1)
move-car-to-car car_19 car_15 car_03 (1)
move-car-to-car car_08 car_24 car_14 (1)
move-curb-to-car car_24 curb_04 car_15 (1)
move-car-to-curb car_26 car_10 curb_04 (1)
move-curb-to-car car_10 curb_08 car_26 (1)
move-car-to-curb car_08 car_14 curb_08 (1)
move-car-to-car car_24 car_15 car_08 (1)
move-car-to-car car_10 car_26 car_14 (1)
move-curb-to-car car_26 curb_04 car_15 (1)
move-car-to-curb car_17 car_01 curb_04 (1)
move-curb-to-car car_01 curb_10 car_17 (1)
move-car-to-curb car_10 car_14 curb_10 (1)
move-car-to-car car_26 car_15 car_10 (1)
move-car-to-car car_01 car_17 car_14 (1)
move-curb-to-car car_17 curb_04 car_15 (1)
move-car-to-curb car_20 car_04 curb_04 (1)
move-curb-to-car car_04 curb_01 car_20 (1)
move-car-to-curb car_01 car_14 curb_01 (1)
move-car-to-car car_17 car_15 car_01 (1)
move-car-to-car car_04 car_20 car_14 (1)
move-curb-to-car car_20 curb_04 car_15 (1)
move-car-to-curb car_04 car_14 curb_04 (1)
move-car-to-car car_20 car_15 car_04 (1)
move-car-to-car car_27 car_11 car_15 (1)
move-curb-to-car car_11 curb_00 car_14 (1)
move-car-to-curb car_29 car_13 curb_00 (1)
move-curb-to-car car_13 curb_11 car_29 (1)
move-car-to-curb car_11 car_14 curb_11 (1)
move-car-to-car car_27 car_15 car_11 (1)
move-car-to-car car_13 car_29 car_14 (1)
move-curb-to-car car_29 curb_00 car_15 (1)
move-car-to-curb car_18 car_02 curb_00 (1)
move-curb-to-car car_02 curb_13 car_18 (1)
move-car-to-curb car_13 car_14 curb_13 (1)
move-car-to-car car_29 car_15 car_13 (1)
move-car-to-car car_02 car_18 car_15 (1)
move-curb-to-car car_18 curb_00 car_14 (1)
move-car-to-curb car_21 car_05 curb_00 (1)
move-curb-to-car car_05 curb_02 car_21 (1)
move-car-to-curb car_02 car_15 curb_02 (1)
move-car-to-car car_18 car_14 car_02 (1)
move-car-to-car car_05 car_21 car_15 (1)
move-curb-to-car car_21 curb_00 car_14 (1)
move-car-to-curb car_16 car_00 curb_00 (1)
move-curb-to-car car_00 curb_05 car_16 (1)
move-car-to-curb car_05 car_15 curb_05 (1)
move-car-to-car car_21 car_14 car_05 (1)
move-car-to-car car_00 car_16 car_14 (1)
move-curb-to-car car_16 curb_00 car_15 (1)
move-car-to-curb car_00 car_14 curb_00 (1)
move-car-to-car car_16 car_15 car_00 (1)
[t=317.72s, 995056 KB] Plan length: 89 step(s).
[t=317.72s, 995056 KB] Plan cost: 89
[t=317.72s, 995056 KB] Expanded 8741 state(s).
[t=317.72s, 995056 KB] Reopened 0 state(s).
[t=317.72s, 995056 KB] Evaluated 201792 state(s).
[t=317.72s, 995056 KB] Evaluations: 210532
[t=317.72s, 995056 KB] Generated 259994 state(s).
[t=317.72s, 995056 KB] Dead ends: 15164 state(s).
[t=317.72s, 995056 KB] Number of registered states: 201792
[t=317.72s, 995056 KB] Int hash set load factor: 201792/262144 = 0.769775
[t=317.72s, 995056 KB] Int hash set resizes: 18
[t=317.72s, 995056 KB] Search time: 64.4349s
[t=317.72s, 995056 KB] Total time: 317.72s
Solution found.
Peak memory: 995056 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 89 

Successful plans:
Value: 89
 sas_plan 89 

validate exit code: 0

