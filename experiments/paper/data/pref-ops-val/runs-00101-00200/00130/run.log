INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.99s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.230s CPU, 0.238s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.350s CPU, 1.353s wall-clock]
Instantiating: [1.590s CPU, 1.598s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.050s CPU, 0.055s wall-clock]
Translating task: [1.600s CPU, 1.597s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [0.820s CPU, 0.820s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.230s CPU, 0.237s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 220932 KB
Writing output... [0.230s CPU, 0.226s wall-clock]
Done! [4.560s CPU, 4.562s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1795.39s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.139972s, 61168 KB] done reading input!
[t=0.151965s, 68336 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.267934s, 81268 KB] time to simplify: 0.119964s
[t=0.275929s, 81268 KB] Initializing additive heuristic...
[t=0.275929s, 81268 KB] Initializing FF heuristic...
[t=0.275929s, 81268 KB] stop search of patterns: 3355443KB
[t=0.275929s, 81268 KB] Generating patterns using the systematic generator...
[t=0.275929s, 81268 KB] building causal graph...done! [t=0.0159972s]
[t=4.39865s, 567592 KB] Found 1972347 SGA patterns.
[t=33.9546s, 679564 KB] Found 2137447 interesting patterns.
[t=34.3946s, 679564 KB] [26, 1716, 77220, 2058485]
[t=35.7905s, 679564 KB] Systematic generator number of patterns: 5226
[t=35.7905s, 679564 KB] Systematic generator total PDB size: 25033040
[t=35.7905s, 679564 KB] Systematic generator computation time: 35.5146s
[t=35.7905s, 679564 KB] Computing PDBs for pattern collection...
[t=110.824s, 679564 KB] Done computing PDBs for pattern collection: 75.0336s
[t=114.988s, 679564 KB] Operators: 39546
[t=114.988s, 679564 KB] Restrictions: 5226
[t=114.988s, 679564 KB] Mean mentions: 572
[t=114.988s, 679564 KB] Mean operators: 4333
[t=114.988s, 679564 KB] Building successor generator...done!
[t=115s, 679564 KB] peak memory difference for successor generator creation: 0 KB
[t=115s, 679564 KB] time for successor generation creation: 0.0119966s
[t=115s, 679564 KB] Variables: 92
[t=115s, 679564 KB] FactPairs: 1172
[t=115s, 679564 KB] Bytes per state: 28
[t=115s, 679564 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=115s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=115s, 679564 KB] g=0, 1 evaluated, 0 expanded
[t=115s, 679564 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=115s, 679564 KB] pruning method: none
[t=115.004s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=115.004s, 679564 KB] g=1, 2 evaluated, 1 expanded
[t=115.008s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=115.008s, 679564 KB] g=2, 48 evaluated, 3 expanded
[t=115.012s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=115.012s, 679564 KB] g=3, 76 evaluated, 4 expanded
[t=115.016s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=115.016s, 679564 KB] g=4, 95 evaluated, 5 expanded
[t=115.016s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=115.016s, 679564 KB] g=4, 99 evaluated, 5 expanded
[t=115.032s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=115.032s, 679564 KB] g=6, 201 evaluated, 9 expanded
[t=115.036s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=115.036s, 679564 KB] g=7, 233 evaluated, 10 expanded
[t=115.04s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=115.04s, 679564 KB] g=8, 259 evaluated, 11 expanded
[t=115.04s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=115.04s, 679564 KB] g=9, 283 evaluated, 12 expanded
[t=115.044s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=115.044s, 679564 KB] g=10, 300 evaluated, 13 expanded
[t=115.048s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=115.048s, 679564 KB] g=12, 343 evaluated, 15 expanded
[t=115.056s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=115.056s, 679564 KB] g=14, 387 evaluated, 17 expanded
[t=115.06s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=115.06s, 679564 KB] g=15, 405 evaluated, 18 expanded
[t=115.068s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=115.068s, 679564 KB] g=16, 482 evaluated, 21 expanded
[t=115.072s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=115.072s, 679564 KB] g=17, 494 evaluated, 22 expanded
[t=115.084s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=115.084s, 679564 KB] g=19, 596 evaluated, 26 expanded
[t=115.088s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=115.088s, 679564 KB] g=20, 622 evaluated, 27 expanded
[t=115.092s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=115.092s, 679564 KB] g=21, 645 evaluated, 28 expanded
[t=115.268s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=115.268s, 679564 KB] g=27, 1676 evaluated, 77 expanded
[t=115.268s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=115.268s, 679564 KB] g=28, 1695 evaluated, 78 expanded
[t=126.94s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=126.94s, 679564 KB] g=33, 69407 evaluated, 3461 expanded
[t=126.94s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=126.94s, 679564 KB] g=34, 69424 evaluated, 3462 expanded
[t=135.855s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=135.855s, 679564 KB] g=38, 120375 evaluated, 6076 expanded
[t=135.863s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=135.863s, 679564 KB] g=39, 120416 evaluated, 6078 expanded
[t=135.863s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=135.863s, 679564 KB] g=40, 120440 evaluated, 6079 expanded
[t=142.071s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=142.071s, 679564 KB] g=48, 156033 evaluated, 7919 expanded
[t=142.079s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=142.079s, 679564 KB] g=50, 156097 evaluated, 7922 expanded
[t=145.619s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=145.619s, 679564 KB] g=54, 176742 evaluated, 8962 expanded
[t=145.631s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=145.631s, 679564 KB] g=56, 176807 evaluated, 8965 expanded
[t=148.087s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=148.087s, 679564 KB] g=60, 191465 evaluated, 9674 expanded
[t=148.095s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=148.095s, 679564 KB] g=62, 191529 evaluated, 9677 expanded
[t=149.663s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=149.663s, 679564 KB] g=66, 201069 evaluated, 10124 expanded
[t=149.671s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=149.671s, 679564 KB] g=67, 201120 evaluated, 10126 expanded
[t=149.675s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=149.675s, 679564 KB] g=68, 201133 evaluated, 10127 expanded
[t=150.203s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=150.203s, 679564 KB] g=77, 204385 evaluated, 10283 expanded
[t=150.207s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=150.207s, 679564 KB] g=78, 204408 evaluated, 10284 expanded
[t=150.339s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=150.339s, 679564 KB] g=82, 205294 evaluated, 10325 expanded
[t=150.347s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=150.347s, 679564 KB] g=83, 205336 evaluated, 10327 expanded
[t=150.347s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=150.347s, 679564 KB] g=84, 205358 evaluated, 10328 expanded
[t=150.347s, 679564 KB] Solution found!
[t=150.347s, 679564 KB] Actual search time: 35.3469s
move-car-to-curb car_06 car_04 curb_13 (1)
move-car-to-car car_18 car_21 car_04 (1)
move-car-to-car car_20 car_00 car_06 (1)
move-car-to-car car_14 car_17 car_00 (1)
move-car-to-car car_12 car_02 car_17 (1)
move-car-to-car car_16 car_11 car_02 (1)
move-car-to-car car_25 car_09 car_11 (1)
move-car-to-car car_23 car_07 car_09 (1)
move-curb-to-car car_21 curb_00 car_07 (1)
move-car-to-curb car_03 car_15 curb_00 (1)
move-car-to-car car_12 car_17 car_15 (1)
move-curb-to-car car_17 curb_01 car_03 (1)
move-car-to-curb car_08 car_13 curb_01 (1)
move-car-to-car car_22 car_24 car_08 (1)
move-curb-to-car car_13 curb_12 car_24 (1)
move-car-to-curb car_12 car_15 curb_12 (1)
move-car-to-car car_10 car_01 car_12 (1)
move-curb-to-car car_15 curb_02 car_01 (1)
move-car-to-curb car_10 car_12 curb_02 (1)
move-car-to-car car_13 car_24 car_12 (1)
move-curb-to-car car_24 curb_11 car_10 (1)
move-car-to-curb car_20 car_06 curb_11 (1)
move-curb-to-car car_06 curb_13 car_20 (1)
move-car-to-curb car_13 car_12 curb_13 (1)
move-car-to-car car_06 car_20 car_12 (1)
move-curb-to-car car_20 curb_11 car_13 (1)
move-car-to-curb car_18 car_04 curb_11 (1)
move-curb-to-car car_04 curb_06 car_18 (1)
move-car-to-curb car_06 car_12 curb_06 (1)
move-car-to-car car_20 car_13 car_06 (1)
move-car-to-car car_04 car_18 car_12 (1)
move-curb-to-car car_18 curb_11 car_13 (1)
move-car-to-curb car_25 car_11 curb_11 (1)
move-curb-to-car car_11 curb_04 car_25 (1)
move-car-to-curb car_04 car_12 curb_04 (1)
move-car-to-car car_18 car_13 car_04 (1)
move-car-to-car car_11 car_25 car_12 (1)
move-curb-to-car car_25 curb_11 car_13 (1)
move-car-to-curb car_11 car_12 curb_11 (1)
move-car-to-car car_25 car_13 car_11 (1)
move-car-to-car car_17 car_03 car_13 (1)
move-curb-to-car car_03 curb_00 car_12 (1)
move-car-to-curb car_15 car_01 curb_00 (1)
move-curb-to-car car_01 curb_03 car_15 (1)
move-car-to-curb car_03 car_12 curb_03 (1)
move-car-to-car car_17 car_13 car_03 (1)
move-car-to-car car_01 car_15 car_12 (1)
move-curb-to-car car_15 curb_00 car_13 (1)
move-car-to-curb car_22 car_08 curb_00 (1)
move-curb-to-car car_08 curb_01 car_22 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_15 car_13 car_01 (1)
move-car-to-car car_08 car_22 car_12 (1)
move-curb-to-car car_22 curb_00 car_13 (1)
move-car-to-curb car_21 car_07 curb_00 (1)
move-curb-to-car car_07 curb_08 car_21 (1)
move-car-to-curb car_08 car_12 curb_08 (1)
move-car-to-car car_22 car_13 car_08 (1)
move-car-to-car car_07 car_21 car_12 (1)
move-curb-to-car car_21 curb_00 car_13 (1)
move-car-to-curb car_14 car_00 curb_00 (1)
move-curb-to-car car_00 curb_07 car_14 (1)
move-car-to-curb car_07 car_12 curb_07 (1)
move-car-to-car car_21 car_13 car_07 (1)
move-car-to-car car_00 car_14 car_12 (1)
move-curb-to-car car_14 curb_00 car_13 (1)
move-car-to-curb car_00 car_12 curb_00 (1)
move-car-to-car car_14 car_13 car_00 (1)
move-car-to-car car_16 car_02 car_13 (1)
move-curb-to-car car_02 curb_09 car_12 (1)
move-car-to-curb car_24 car_10 curb_09 (1)
move-curb-to-car car_10 curb_02 car_24 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_16 car_13 car_02 (1)
move-car-to-car car_10 car_24 car_13 (1)
move-curb-to-car car_24 curb_09 car_12 (1)
move-car-to-curb car_23 car_09 curb_09 (1)
move-curb-to-car car_09 curb_10 car_23 (1)
move-car-to-curb car_10 car_13 curb_10 (1)
move-car-to-car car_24 car_12 car_10 (1)
move-car-to-car car_09 car_23 car_12 (1)
move-curb-to-car car_23 curb_09 car_13 (1)
move-car-to-curb car_09 car_12 curb_09 (1)
move-car-to-car car_23 car_13 car_09 (1)
[t=150.347s, 679564 KB] Plan length: 84 step(s).
[t=150.347s, 679564 KB] Plan cost: 84
[t=150.347s, 679564 KB] Expanded 10329 state(s).
[t=150.347s, 679564 KB] Reopened 0 state(s).
[t=150.347s, 679564 KB] Evaluated 205374 state(s).
[t=150.347s, 679564 KB] Evaluations: 215702
[t=150.347s, 679564 KB] Generated 269654 state(s).
[t=150.347s, 679564 KB] Dead ends: 18052 state(s).
[t=150.347s, 679564 KB] Number of registered states: 205374
[t=150.347s, 679564 KB] Int hash set load factor: 205374/262144 = 0.78344
[t=150.347s, 679564 KB] Int hash set resizes: 18
[t=150.347s, 679564 KB] Search time: 35.3469s
[t=150.347s, 679564 KB] Total time: 150.347s
Solution found.
Peak memory: 679564 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 84 

Successful plans:
Value: 84
 sas_plan 84 

validate exit code: 0

