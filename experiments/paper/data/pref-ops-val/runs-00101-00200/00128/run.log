INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.240s CPU, 0.242s wall-clock]
42827 relevant atoms
4396 auxiliary atoms
47223 final queue length
138834 total queue pushes
Completing instantiation... [1.420s CPU, 1.416s wall-clock]
Instantiating: [1.660s CPU, 1.666s wall-clock]
Computing fact groups...
Finding invariants...
12 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.057s wall-clock]
Translating task: [1.620s CPU, 1.623s wall-clock]
49010 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
26 propositions removed
Detecting unreachable propositions: [0.840s CPU, 0.835s wall-clock]
Reordering and filtering variables...
92 of 92 variables necessary.
40 of 66 mutex groups necessary.
39546 of 39546 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.240s CPU, 0.241s wall-clock]
Translator variables: 92
Translator derived variables: 0
Translator facts: 1172
Translator goal facts: 26
Translator mutex groups: 40
Translator total mutex groups size: 1080
Translator operators: 39546
Translator axioms: 0
Translator task size: 322456
Translator peak memory: 220956 KB
Writing output... [0.220s CPU, 0.222s wall-clock]
Done! [4.670s CPU, 4.675s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1795.26s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.139972s, 61168 KB] done reading input!
[t=0.151972s, 68336 KB] Simplifying 137202 unary operators... done! [137202 unary operators]
[t=0.303963s, 81268 KB] time to simplify: 0.159992s
[t=0.315965s, 81268 KB] Initializing additive heuristic...
[t=0.315965s, 81268 KB] Initializing FF heuristic...
[t=0.315965s, 81268 KB] stop search of patterns: 3355443KB
[t=0.315965s, 81268 KB] Generating patterns using the systematic generator...
[t=0.315965s, 81268 KB] building causal graph...done! [t=0.0159964s]
[t=4.54616s, 567592 KB] Found 1972347 SGA patterns.
[t=34.9043s, 679564 KB] Found 2137447 interesting patterns.
[t=35.3603s, 679564 KB] [26, 1716, 77220, 2058485]
[t=36.7163s, 679564 KB] Systematic generator number of patterns: 5226
[t=36.7163s, 679564 KB] Systematic generator total PDB size: 25033040
[t=36.7163s, 679564 KB] Systematic generator computation time: 36.4003s
[t=36.7163s, 679564 KB] Computing PDBs for pattern collection...
[t=113.051s, 679564 KB] Done computing PDBs for pattern collection: 76.3352s
[t=117.659s, 679564 KB] Operators: 39546
[t=117.659s, 679564 KB] Restrictions: 5226
[t=117.659s, 679564 KB] Mean mentions: 572
[t=117.659s, 679564 KB] Mean operators: 4333
[t=117.663s, 679564 KB] Building successor generator...done!
[t=117.675s, 679564 KB] peak memory difference for successor generator creation: 0 KB
[t=117.675s, 679564 KB] time for successor generation creation: 0.0119987s
[t=117.675s, 679564 KB] Variables: 92
[t=117.675s, 679564 KB] FactPairs: 1172
[t=117.675s, 679564 KB] Bytes per state: 28
[t=117.675s, 679564 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=117.675s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 55
[t=117.675s, 679564 KB] g=0, 1 evaluated, 0 expanded
[t=117.675s, 679564 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 55
[t=117.675s, 679564 KB] pruning method: none
[t=117.679s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 53
[t=117.679s, 679564 KB] g=1, 2 evaluated, 1 expanded
[t=117.683s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 52
[t=117.683s, 679564 KB] g=2, 15 evaluated, 2 expanded
[t=117.687s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 51
[t=117.687s, 679564 KB] g=3, 53 evaluated, 3 expanded
[t=117.691s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=117.691s, 679564 KB] g=4, 69 evaluated, 4 expanded
[t=117.699s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=117.699s, 679564 KB] g=6, 125 evaluated, 6 expanded
[t=117.727s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=117.727s, 679564 KB] g=8, 279 evaluated, 12 expanded
[t=117.771s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=117.771s, 679564 KB] g=10, 512 evaluated, 22 expanded
[t=117.775s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=117.775s, 679564 KB] g=11, 538 evaluated, 23 expanded
[t=117.783s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=117.783s, 679564 KB] g=12, 582 evaluated, 25 expanded
[t=117.787s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=117.787s, 679564 KB] g=13, 602 evaluated, 26 expanded
[t=117.787s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=117.787s, 679564 KB] g=13, 603 evaluated, 26 expanded
[t=117.791s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=117.791s, 679564 KB] g=14, 621 evaluated, 27 expanded
[t=117.795s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=117.795s, 679564 KB] g=15, 649 evaluated, 28 expanded
[t=117.803s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=117.803s, 679564 KB] g=17, 697 evaluated, 30 expanded
[t=117.807s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=117.807s, 679564 KB] g=18, 718 evaluated, 31 expanded
[t=117.811s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=117.811s, 679564 KB] g=19, 731 evaluated, 32 expanded
[t=117.811s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=117.811s, 679564 KB] g=19, 733 evaluated, 32 expanded
[t=117.815s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=117.815s, 679564 KB] g=20, 762 evaluated, 33 expanded
[t=117.819s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=117.819s, 679564 KB] g=21, 783 evaluated, 34 expanded
[t=117.819s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=117.819s, 679564 KB] g=21, 784 evaluated, 34 expanded
[t=117.823s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=117.823s, 679564 KB] g=22, 806 evaluated, 35 expanded
[t=117.827s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=117.827s, 679564 KB] g=23, 823 evaluated, 36 expanded
[t=117.839s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=117.839s, 679564 KB] g=25, 886 evaluated, 39 expanded
[t=117.843s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=117.843s, 679564 KB] g=26, 912 evaluated, 40 expanded
[t=117.847s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=117.847s, 679564 KB] g=27, 932 evaluated, 41 expanded
[t=118.019s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=118.019s, 679564 KB] g=34, 1928 evaluated, 82 expanded
[t=118.159s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=118.159s, 679564 KB] g=34, 2668 evaluated, 116 expanded
[t=118.163s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=118.163s, 679564 KB] g=35, 2690 evaluated, 117 expanded
[t=118.283s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=118.283s, 679564 KB] g=41, 3376 evaluated, 146 expanded
[t=118.287s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=118.287s, 679564 KB] g=42, 3390 evaluated, 147 expanded
[t=121.783s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=121.783s, 679564 KB] g=50, 21442 evaluated, 1058 expanded
[t=121.791s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=121.791s, 679564 KB] g=51, 21491 evaluated, 1060 expanded
[t=121.795s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=121.795s, 679564 KB] g=52, 21507 evaluated, 1061 expanded
[t=123.095s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=123.095s, 679564 KB] g=61, 28728 evaluated, 1384 expanded
[t=123.099s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=123.099s, 679564 KB] g=62, 28749 evaluated, 1385 expanded
[t=123.491s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=123.491s, 679564 KB] g=67, 30923 evaluated, 1484 expanded
[t=123.495s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=123.495s, 679564 KB] g=68, 30946 evaluated, 1485 expanded
[t=123.651s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=123.651s, 679564 KB] g=72, 31833 evaluated, 1526 expanded
[t=123.659s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=123.659s, 679564 KB] g=73, 31873 evaluated, 1528 expanded
[t=123.659s, 679564 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=123.659s, 679564 KB] g=74, 31897 evaluated, 1529 expanded
[t=123.663s, 679564 KB] Solution found!
[t=123.663s, 679564 KB] Actual search time: 5.9876s
move-car-to-curb car_01 car_11 curb_13 (1)
move-car-to-car car_04 car_21 car_01 (1)
move-car-to-car car_25 car_13 car_11 (1)
move-car-to-car car_05 car_16 car_13 (1)
move-car-to-car car_06 car_03 car_21 (1)
move-car-to-car car_17 car_18 car_03 (1)
move-car-to-car car_10 car_09 car_16 (1)
move-car-to-car car_23 car_15 car_09 (1)
move-curb-to-car car_15 curb_05 car_18 (1)
move-car-to-curb car_05 car_13 curb_05 (1)
move-car-to-car car_07 car_19 car_13 (1)
move-curb-to-car car_19 curb_11 car_05 (1)
move-car-to-curb car_06 car_21 curb_11 (1)
move-car-to-car car_20 car_08 car_06 (1)
move-car-to-car car_22 car_02 car_08 (1)
move-car-to-car car_10 car_16 car_21 (1)
move-curb-to-car car_16 curb_04 car_02 (1)
move-car-to-curb car_04 car_01 curb_04 (1)
move-car-to-car car_15 car_18 car_01 (1)
move-curb-to-car car_18 curb_08 car_04 (1)
move-car-to-curb car_10 car_21 curb_08 (1)
move-car-to-car car_24 car_00 car_10 (1)
move-car-to-car car_14 car_12 car_00 (1)
move-curb-to-car car_12 curb_07 car_21 (1)
move-car-to-curb car_07 car_13 curb_07 (1)
move-car-to-car car_12 car_21 car_13 (1)
move-curb-to-car car_21 curb_01 car_07 (1)
move-car-to-curb car_23 car_09 curb_01 (1)
move-curb-to-car car_09 curb_12 car_23 (1)
move-car-to-curb car_12 car_13 curb_12 (1)
move-car-to-car car_09 car_23 car_12 (1)
move-curb-to-car car_13 curb_09 car_23 (1)
move-car-to-curb car_09 car_12 curb_09 (1)
move-car-to-car car_13 car_23 car_12 (1)
move-curb-to-car car_23 curb_01 car_09 (1)
move-car-to-curb car_15 car_01 curb_01 (1)
move-curb-to-car car_01 curb_13 car_15 (1)
move-car-to-curb car_13 car_12 curb_13 (1)
move-car-to-car car_01 car_15 car_12 (1)
move-curb-to-car car_15 curb_01 car_13 (1)
move-car-to-curb car_01 car_12 curb_01 (1)
move-car-to-car car_15 car_13 car_01 (1)
move-car-to-car car_16 car_02 car_13 (1)
move-curb-to-car car_02 curb_03 car_12 (1)
move-car-to-curb car_17 car_03 curb_03 (1)
move-curb-to-car car_03 curb_02 car_17 (1)
move-car-to-curb car_02 car_12 curb_02 (1)
move-car-to-car car_16 car_13 car_02 (1)
move-car-to-car car_03 car_17 car_12 (1)
move-curb-to-car car_17 curb_03 car_13 (1)
move-car-to-curb car_03 car_12 curb_03 (1)
move-car-to-car car_17 car_13 car_03 (1)
move-car-to-car car_20 car_06 car_13 (1)
move-curb-to-car car_06 curb_11 car_12 (1)
move-car-to-curb car_22 car_08 curb_11 (1)
move-curb-to-car car_08 curb_06 car_22 (1)
move-car-to-curb car_06 car_12 curb_06 (1)
move-car-to-car car_20 car_13 car_06 (1)
move-car-to-car car_08 car_22 car_13 (1)
move-curb-to-car car_22 curb_11 car_12 (1)
move-car-to-curb car_24 car_10 curb_11 (1)
move-curb-to-car car_10 curb_08 car_24 (1)
move-car-to-curb car_08 car_13 curb_08 (1)
move-car-to-car car_22 car_12 car_08 (1)
move-car-to-car car_10 car_24 car_13 (1)
move-curb-to-car car_24 curb_11 car_12 (1)
move-car-to-curb car_25 car_11 curb_11 (1)
move-curb-to-car car_11 curb_10 car_25 (1)
move-car-to-curb car_10 car_13 curb_10 (1)
move-car-to-car car_24 car_12 car_10 (1)
move-car-to-car car_11 car_25 car_12 (1)
move-curb-to-car car_25 curb_11 car_13 (1)
move-car-to-curb car_11 car_12 curb_11 (1)
move-car-to-car car_25 car_13 car_11 (1)
[t=123.663s, 679564 KB] Plan length: 74 step(s).
[t=123.663s, 679564 KB] Plan cost: 74
[t=123.663s, 679564 KB] Expanded 1530 state(s).
[t=123.663s, 679564 KB] Reopened 0 state(s).
[t=123.663s, 679564 KB] Evaluated 31911 state(s).
[t=123.663s, 679564 KB] Evaluations: 33440
[t=123.663s, 679564 KB] Generated 39902 state(s).
[t=123.663s, 679564 KB] Dead ends: 2670 state(s).
[t=123.663s, 679564 KB] Number of registered states: 31911
[t=123.663s, 679564 KB] Int hash set load factor: 31911/65536 = 0.486923
[t=123.663s, 679564 KB] Int hash set resizes: 16
[t=123.663s, 679564 KB] Search time: 5.9876s
[t=123.663s, 679564 KB] Total time: 123.663s
Solution found.
Peak memory: 679564 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 74 

Successful plans:
Value: 74
 sas_plan 74 

validate exit code: 0

