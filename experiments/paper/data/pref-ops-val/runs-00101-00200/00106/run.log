INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 1799.98s
INFO     translator memory limit: 4096 MB
INFO     translator command line string: /usr/bin/python3 /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/translate/translate.py domain.pddl problem.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 211 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
703 relevant atoms
964 auxiliary atoms
1667 final queue length
2332 total queue pushes
Completing instantiation... [0.010s CPU, 0.008s wall-clock]
Instantiating: [0.020s CPU, 0.021s wall-clock]
Computing fact groups...
Finding invariants...
20 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
156 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.009s wall-clock]
211 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
9 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.004s wall-clock]
Reordering and filtering variables...
71 of 162 variables necessary.
0 of 7 mutex groups necessary.
316 of 316 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 71
Translator derived variables: 0
Translator facts: 212
Translator goal facts: 42
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 316
Translator axioms: 0
Translator task size: 2263
Translator peak memory: 31364 KB
Writing output... [0.010s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.049s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: 1799.91s
INFO     search memory limit: 4096 MB
INFO     search command line string: /home/dmdoebber/downward-projects/downward/experiments/paper/data/pref-ops-val/code-11d6cc7f374e3fd7216f4422aa97b8db8c68d3c3_e5e41175/builds/release/bin/downward --evaluator 'eval=ff()' --search 'eager_greedy([lsh(patterns=systematic(4), op_order=default, res_order=default, transform=adapt_costs(cost_type=ONE))],  preferred=[eval])' --internal-plan-file sas_plan < output.sas
[t=0s, 46116 KB] reading input...
[t=0.0020412s, 46240 KB] done reading input!
[t=0.0020412s, 46504 KB] Simplifying 621 unary operators... done! [327 unary operators]
[t=0.0020412s, 46504 KB] time to simplify: 0s
[t=0.0020412s, 46504 KB] Initializing additive heuristic...
[t=0.0020412s, 46504 KB] Initializing FF heuristic...
[t=0.0020412s, 46504 KB] stop search of patterns: 3355443KB
[t=0.0020412s, 46504 KB] Generating patterns using the systematic generator...
[t=0.0020412s, 46504 KB] building causal graph...done! [t=0s]
[t=0.0140406s, 48152 KB] Found 5639 SGA patterns.
[t=0.169635s, 49536 KB] Found 16311 interesting patterns.
[t=0.169635s, 49536 KB] [42, 153, 1423, 14693]
[t=0.173635s, 49688 KB] Systematic generator number of patterns: 585
[t=0.173635s, 49688 KB] Systematic generator total PDB size: 24216
[t=0.173635s, 49688 KB] Systematic generator computation time: 0.171594s
[t=0.173635s, 49688 KB] Computing PDBs for pattern collection...
[t=0.201557s, 49688 KB] Done computing PDBs for pattern collection: 0.0279217s
[t=0.205487s, 49688 KB] Operators: 316
[t=0.205487s, 49688 KB] Restrictions: 585
[t=0.205487s, 49688 KB] Mean mentions: 46
[t=0.205487s, 49688 KB] Mean operators: 25
[t=0.205487s, 49688 KB] Building successor generator...done!
[t=0.205487s, 49688 KB] peak memory difference for successor generator creation: 0 KB
[t=0.205487s, 49688 KB] time for successor generation creation: 0s
[t=0.205487s, 49688 KB] Variables: 71
[t=0.205487s, 49688 KB] FactPairs: 212
[t=0.205487s, 49688 KB] Bytes per state: 12
[t=0.205487s, 49688 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=0.205487s, 49688 KB] g=0, 1 evaluated, 0 expanded
[t=0.205487s, 49688 KB] Initial heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 50
[t=0.205487s, 49688 KB] pruning method: none
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 49
[t=0.205487s, 49688 KB] g=0, 2 evaluated, 1 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 48
[t=0.205487s, 49688 KB] g=224, 3 evaluated, 2 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 47
[t=0.205487s, 49688 KB] g=1624, 10 evaluated, 3 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 46
[t=0.205487s, 49688 KB] g=9624, 18 evaluated, 4 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 45
[t=0.205487s, 49688 KB] g=137414, 26 evaluated, 5 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 44
[t=0.205487s, 49688 KB] g=140413, 34 evaluated, 6 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 43
[t=0.205487s, 49688 KB] g=141912, 43 evaluated, 7 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 42
[t=0.205487s, 49688 KB] g=143411, 51 evaluated, 8 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 41
[t=0.205487s, 49688 KB] g=143635, 58 evaluated, 9 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 40
[t=0.205487s, 49688 KB] g=145035, 64 evaluated, 10 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 39
[t=0.205487s, 49688 KB] g=153035, 71 evaluated, 11 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 38
[t=0.205487s, 49688 KB] g=280825, 79 evaluated, 12 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 37
[t=0.205487s, 49688 KB] g=283824, 85 evaluated, 13 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 36
[t=0.205487s, 49688 KB] g=285323, 93 evaluated, 14 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 35
[t=0.205487s, 49688 KB] g=286822, 100 evaluated, 15 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 34
[t=0.205487s, 49688 KB] g=287046, 106 evaluated, 16 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 33
[t=0.205487s, 49688 KB] g=288446, 111 evaluated, 17 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 32
[t=0.205487s, 49688 KB] g=298445, 117 evaluated, 18 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 31
[t=0.205487s, 49688 KB] g=511235, 123 evaluated, 19 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 30
[t=0.205487s, 49688 KB] g=516234, 130 evaluated, 20 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 29
[t=0.205487s, 49688 KB] g=517733, 137 evaluated, 21 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 28
[t=0.205487s, 49688 KB] g=519232, 143 evaluated, 22 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 27
[t=0.205487s, 49688 KB] g=519456, 148 evaluated, 23 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 26
[t=0.205487s, 49688 KB] g=520856, 152 evaluated, 24 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 25
[t=0.205487s, 49688 KB] g=530855, 157 evaluated, 25 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 24
[t=0.205487s, 49688 KB] g=743645, 163 evaluated, 26 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 23
[t=0.205487s, 49688 KB] g=748644, 168 evaluated, 27 expanded
[t=0.205487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 22
[t=0.205487s, 49688 KB] g=750143, 174 evaluated, 28 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 21
[t=0.209487s, 49688 KB] g=751642, 179 evaluated, 29 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 20
[t=0.209487s, 49688 KB] g=751866, 183 evaluated, 30 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 19
[t=0.209487s, 49688 KB] g=753266, 186 evaluated, 31 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 18
[t=0.209487s, 49688 KB] g=761266, 190 evaluated, 32 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 17
[t=0.209487s, 49688 KB] g=889056, 195 evaluated, 33 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 16
[t=0.209487s, 49688 KB] g=892055, 198 evaluated, 34 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 15
[t=0.209487s, 49688 KB] g=893554, 203 evaluated, 35 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 14
[t=0.209487s, 49688 KB] g=895053, 207 evaluated, 36 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 13
[t=0.209487s, 49688 KB] g=895277, 210 evaluated, 37 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 12
[t=0.209487s, 49688 KB] g=896677, 212 evaluated, 38 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 11
[t=0.209487s, 49688 KB] g=904677, 215 evaluated, 39 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 10
[t=0.209487s, 49688 KB] g=1032467, 219 evaluated, 40 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 9
[t=0.209487s, 49688 KB] g=1035466, 221 evaluated, 41 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 8
[t=0.209487s, 49688 KB] g=1036965, 225 evaluated, 42 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 7
[t=0.209487s, 49688 KB] g=1038464, 228 evaluated, 43 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 6
[t=0.209487s, 49688 KB] g=1038688, 230 evaluated, 44 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 5
[t=0.209487s, 49688 KB] g=1040088, 231 evaluated, 45 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 4
[t=0.209487s, 49688 KB] g=1050087, 233 evaluated, 46 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 3
[t=0.209487s, 49688 KB] g=1262877, 236 evaluated, 47 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 2
[t=0.209487s, 49688 KB] g=1267876, 238 evaluated, 48 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 1
[t=0.209487s, 49688 KB] g=1269375, 241 evaluated, 49 expanded
[t=0.209487s, 49688 KB] New best heuristic value for lsh(patterns = systematic(4), op_order = default, res_order = default, transform = adapt_costs(cost_type = one)): 0
[t=0.209487s, 49688 KB] g=1270874, 243 evaluated, 50 expanded
[t=0.209487s, 49688 KB] Solution found!
[t=0.209487s, 49688 KB] Actual search time: 0.00400025s
initialize  (0)
fe1-feedmsi-letter sheet1 (125)
hw1-leftentrytotopleftexit-letter sheet1 (1499)
uc1-inverttoime-letter sheet1 back front (8000)
uime-simplex-letter sheet1 front image-1 (127790)
uc1-fromime-letter sheet1 (2999)
hw1-toprightentrytorightexit-letter sheet1 (1499)
sys-stack-letter sheet1 dummy-sheet (1499)
fe1-feedmsi-letter sheet2 (125)
hw1-leftentrytotopleftexit-letter sheet2 (1499)
uc1-inverttoime-letter sheet2 back front (8000)
uime-simplex-letter sheet2 front image-2 (127790)
uc1-fromime-letter sheet2 (2999)
hw1-toprightentrytorightexit-letter sheet2 (1499)
sys-stack-letter sheet2 sheet1 (1499)
fe1-feedmsi-letter sheet3 (125)
hw1-leftentrytobottomleftexit-letter sheet3 (1499)
lc1-inverttoime-letter sheet3 back front (9999)
lime-simplex-letter sheet3 front image-3 (212790)
lc1-fromime-letter sheet3 (4999)
hw1-bottomrightentrytorightexit-letter sheet3 (1499)
sys-stack-letter sheet3 sheet2 (1499)
fe1-feedmsi-letter sheet4 (125)
hw1-leftentrytobottomleftexit-letter sheet4 (1499)
lc1-inverttoime-letter sheet4 back front (9999)
lime-simplex-letter sheet4 front image-4 (212790)
lc1-fromime-letter sheet4 (4999)
hw1-bottomrightentrytorightexit-letter sheet4 (1499)
sys-stack-letter sheet4 sheet3 (1499)
fe1-feedmsi-letter sheet5 (125)
hw1-leftentrytotopleftexit-letter sheet5 (1499)
uc1-inverttoime-letter sheet5 back front (8000)
uime-simplex-letter sheet5 front image-5 (127790)
uc1-fromime-letter sheet5 (2999)
hw1-toprightentrytorightexit-letter sheet5 (1499)
sys-stack-letter sheet5 sheet4 (1499)
fe1-feedmsi-letter sheet6 (125)
hw1-leftentrytotopleftexit-letter sheet6 (1499)
uc1-inverttoime-letter sheet6 back front (8000)
uime-simplex-letter sheet6 front image-6 (127790)
uc1-fromime-letter sheet6 (2999)
hw1-toprightentrytorightexit-letter sheet6 (1499)
sys-stack-letter sheet6 sheet5 (1499)
fe1-feedmsi-letter sheet7 (125)
hw1-leftentrytobottomleftexit-letter sheet7 (1499)
lc1-inverttoime-letter sheet7 back front (9999)
lime-simplex-letter sheet7 front image-7 (212790)
lc1-fromime-letter sheet7 (4999)
hw1-bottomrightentrytorightexit-letter sheet7 (1499)
sys-stack-letter sheet7 sheet6 (1499)
[t=0.209487s, 49688 KB] Plan length: 50 step(s).
[t=0.209487s, 49688 KB] Plan cost: 1270874
[t=0.209487s, 49688 KB] Expanded 51 state(s).
[t=0.209487s, 49688 KB] Reopened 0 state(s).
[t=0.209487s, 49688 KB] Evaluated 243 state(s).
[t=0.209487s, 49688 KB] Evaluations: 293
[t=0.209487s, 49688 KB] Generated 416 state(s).
[t=0.209487s, 49688 KB] Dead ends: 12 state(s).
[t=0.209487s, 49688 KB] Number of registered states: 243
[t=0.209487s, 49688 KB] Int hash set load factor: 243/256 = 0.949219
[t=0.209487s, 49688 KB] Int hash set resizes: 8
[t=0.209487s, 49688 KB] Search time: 0.00400025s
[t=0.209487s, 49688 KB] Total time: 0.209487s
Solution found.
Peak memory: 49688 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Running validate.
INFO     validate stdin: None
INFO     validate time limit: None
INFO     validate memory limit: None
INFO     validate command line string: validate domain.pddl problem.pddl sas_plan
Checking plan: sas_plan
Plan executed successfully - checking goal
Plan valid
Final value: 1270874 

Successful plans:
Value: 1270874
 sas_plan 1270874 

validate exit code: 0

